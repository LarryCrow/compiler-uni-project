Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    ERROR
    NEWLINE

Grammar

Rule 0     S' -> program
Rule 1     program -> <empty>
Rule 2     program -> scope
Rule 3     basic_block -> LBRACE scope RBRACE
Rule 4     body_block -> error scope RBRACE
Rule 5     body_block -> LBRACE error RBRACE
Rule 6     body_block -> LBRACE scope error
Rule 7     func_declaration -> FUNCTION datatype id LPAREN params RPAREN basic_block
Rule 8     func_declaration -> error datatype id LPAREN params RPAREN body_block
Rule 9     func_declaration -> FUNCTION error id LPAREN params RPAREN body_block
Rule 10    func_declaration -> FUNCTION datatype error LPAREN params RPAREN body_block
Rule 11    func_declaration -> FUNCTION datatype id error params RPAREN body_block
Rule 12    func_declaration -> FUNCTION datatype id LPAREN params error body_block
Rule 13    scope -> scope statement
Rule 14    scope -> statement
Rule 15    statement -> expr SEMI
Rule 16    statement -> var_declaration
Rule 17    statement -> return
Rule 18    statement -> assign
Rule 19    statement -> func_declaration
Rule 20    statement -> struct_declaration
Rule 21    statement -> while
Rule 22    statement -> BREAK SEMI
Rule 23    statement -> CONTINUE SEMI
Rule 24    statement -> GOTO ID SEMI
Rule 25    statement -> goto_mark
Rule 26    statement -> if-else
Rule 27    while -> WHILE conditional basic_block
Rule 28    while -> DO basic_block WHILE conditional SEMI
Rule 29    while -> error body_block WHILE conditional SEMI
Rule 30    while -> DO body_block error conditional SEMI
Rule 31    while -> DO body_block WHILE conditional error
Rule 32    if-else -> IF conditional basic_block
Rule 33    if-else -> IF conditional basic_block ELSE basic_block
Rule 34    conditional -> LPAREN expr RPAREN
Rule 35    conditional -> error expr RPAREN
Rule 36    conditional -> LPAREN error RPAREN
Rule 37    conditional -> LPAREN expr error
Rule 38    struct_declaration -> STRUCTURE id LBRACE struct_params RBRACE
Rule 39    struct_declaration -> STRUCTURE error LBRACE struct_params RBRACE
Rule 40    struct_declaration -> STRUCTURE id error struct_params RBRACE
Rule 41    struct_declaration -> STRUCTURE id LBRACE struct_params error
Rule 42    struct_params -> struct_param
Rule 43    struct_params -> struct_params COMMA struct_param
Rule 44    struct_params -> struct_params error struct_param
Rule 45    struct_param -> DATATYPE ID
Rule 46    struct_param -> error ID
Rule 47    struct_param -> DATATYPE error
Rule 48    params -> <empty>
Rule 49    params -> param
Rule 50    params -> params COMMA param
Rule 51    params -> params error param
Rule 52    param -> DATATYPE ID
Rule 53    param -> error ID
Rule 54    param -> DATATYPE error
Rule 55    expr -> id LPAREN args RPAREN
Rule 56    expr -> id error args RPAREN
Rule 57    expr -> id LPAREN args error
Rule 58    args -> <empty>
Rule 59    args -> expr
Rule 60    args -> args COMMA expr
Rule 61    args -> args error expr
Rule 62    var_declaration -> datatype id EQUALS expr SEMI
Rule 63    var_declaration -> datatype id SEMI
Rule 64    var_declaration -> ID id SEMI
Rule 65    var_declaration -> ID id EQUALS LBRACE args RBRACE SEMI
Rule 66    var_declaration -> ID id EQUALS expr SEMI
Rule 67    var_declaration -> datatype error EQUALS expr SEMI
Rule 68    var_declaration -> datatype id error expr SEMI
Rule 69    var_declaration -> datatype id EQUALS expr error
Rule 70    var_declaration -> datatype id EQUALS error SEMI
Rule 71    var_declaration -> datatype error SEMI
Rule 72    var_declaration -> datatype id error
Rule 73    var_declaration -> ID error EQUALS LBRACE args RBRACE SEMI
Rule 74    var_declaration -> ID id error LBRACE args RBRACE SEMI
Rule 75    var_declaration -> ID id EQUALS error args RBRACE SEMI
Rule 76    var_declaration -> ID id EQUALS LBRACE error RBRACE SEMI
Rule 77    var_declaration -> ID id EQUALS LBRACE args error SEMI
Rule 78    var_declaration -> ID id EQUALS LBRACE args RBRACE error
Rule 79    assign -> id EQUALS expr SEMI
Rule 80    assign -> id EQUALS LBRACE args RBRACE SEMI
Rule 81    assign -> id DOT ID EQUALS expr SEMI
Rule 82    assign -> id LBRACKET expr RBRACKET EQUALS expr SEMI
Rule 83    assign -> ID error expr SEMI
Rule 84    assign -> ID EQUALS error SEMI
Rule 85    assign -> ID EQUALS expr error
Rule 86    assign -> ID error LBRACE args RBRACE SEMI
Rule 87    assign -> ID EQUALS error args RBRACE SEMI
Rule 88    assign -> ID EQUALS LBRACE error RBRACE SEMI
Rule 89    assign -> ID EQUALS LBRACE args error SEMI
Rule 90    assign -> ID EQUALS LBRACE args RBRACE error
Rule 91    assign -> ID DOT ID error expr SEMI
Rule 92    assign -> ID DOT ID EQUALS error SEMI
Rule 93    assign -> ID DOT ID EQUALS expr error
Rule 94    return -> RETURN expr SEMI
Rule 95    return -> RETURN SEMI
Rule 96    return -> RETURN error
Rule 97    expr -> expr PLUS expr
Rule 98    expr -> expr MINUS expr
Rule 99    expr -> expr MUL expr
Rule 100   expr -> expr DIVIDE expr
Rule 101   expr -> expr INTDIVIDE expr
Rule 102   expr -> expr MODULO expr
Rule 103   expr -> expr POW expr
Rule 104   expr -> expr LE expr
Rule 105   expr -> expr GE expr
Rule 106   expr -> expr LT expr
Rule 107   expr -> expr GT expr
Rule 108   expr -> expr EQ expr
Rule 109   expr -> expr NE expr
Rule 110   expr -> expr error expr
Rule 111   expr -> MINUS expr
Rule 112   expr -> expr LAND expr
Rule 113   expr -> expr LOR expr
Rule 114   expr -> LNOT expr
Rule 115   expr -> expr BAND expr
Rule 116   expr -> expr BOR expr
Rule 117   expr -> id
Rule 118   expr -> int
Rule 119   expr -> double
Rule 120   expr -> bool
Rule 121   expr -> str
Rule 122   expr -> void
Rule 123   expr -> NULL
Rule 124   expr -> LPAREN expr RPAREN
Rule 125   int -> INTEGER
Rule 126   double -> DOUBLE
Rule 127   bool -> BOOL
Rule 128   str -> STRING
Rule 129   void -> VOID
Rule 130   expr -> datatype id LBRACKET INTEGER RBRACKET
Rule 131   expr -> ID id LBRACKET INTEGER RBRACKET
Rule 132   expr -> datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
Rule 133   expr -> ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
Rule 134   expr -> datatype error RBRACKET id
Rule 135   expr -> datatype LBRACKET error id
Rule 136   expr -> datatype LBRACKET RBRACKET error
Rule 137   expr -> error LBRACKET RBRACKET id
Rule 138   expr -> id LBRACKET expr RBRACKET
Rule 139   expr -> id DOT ID
Rule 140   goto_mark -> ID COLON
Rule 141   datatype -> DATATYPE
Rule 142   id -> ID

Terminals, with rules where they appear

BAND                 : 115
BOOL                 : 127
BOR                  : 116
BREAK                : 22
COLON                : 140
COMMA                : 43 50 60
COMMENT              : 
CONTINUE             : 23
DATATYPE             : 45 47 52 54 141
DIVIDE               : 100
DO                   : 28 30 31
DOT                  : 81 91 92 93 139
DOUBLE               : 126
ELSE                 : 33
EQ                   : 108
EQUALS               : 62 65 66 67 69 70 73 75 76 77 78 79 80 81 82 84 85 87 88 89 90 92 93 132 133
ERROR                : 
FUNCTION             : 7 9 10 11 12
GE                   : 105
GOTO                 : 24
GT                   : 107
ID                   : 24 45 46 52 53 64 65 66 73 74 75 76 77 78 81 83 84 85 86 87 88 89 90 91 91 92 92 93 93 131 133 139 140 142
IF                   : 32 33
INTDIVIDE            : 101
INTEGER              : 125 130 131 132 133
LAND                 : 112
LBRACE               : 3 5 6 38 39 41 65 73 74 76 77 78 80 86 88 89 90 132 133
LBRACKET             : 82 130 131 132 133 135 136 137 138
LE                   : 104
LNOT                 : 114
LOR                  : 113
LPAREN               : 7 8 9 10 12 34 36 37 55 57 124
LT                   : 106
MINUS                : 98 111
MODULO               : 102
MUL                  : 99
NE                   : 109
NEWLINE              : 
NULL                 : 123
PLUS                 : 97
POW                  : 103
RBRACE               : 3 4 5 38 39 40 65 73 74 75 76 78 80 86 87 88 90 132 133
RBRACKET             : 82 130 131 132 133 134 136 137 138
RETURN               : 94 95 96
RPAREN               : 7 8 9 10 11 34 35 36 55 56 124
SEMI                 : 15 22 23 24 28 29 30 62 63 64 65 66 67 68 70 71 73 74 75 76 77 79 80 81 82 83 84 86 87 88 89 91 92 94 95
STRING               : 128
STRUCTURE            : 38 39 40 41
VOID                 : 129
WHILE                : 27 28 29 31
error                : 4 5 6 8 9 10 11 12 29 30 31 35 36 37 39 40 41 44 46 47 51 53 54 56 57 61 67 68 69 70 71 72 73 74 75 76 77 78 83 84 85 86 87 88 89 90 91 92 93 96 110 134 135 136 137

Nonterminals, with rules where they appear

args                 : 55 56 57 60 61 65 73 74 75 77 78 80 86 87 89 90 132 133
assign               : 18
basic_block          : 7 27 28 32 33 33
body_block           : 8 9 10 11 12 29 30 31
bool                 : 120
conditional          : 27 28 29 30 31 32 33
datatype             : 7 8 10 11 12 62 63 67 68 69 70 71 72 130 132 134 135 136
double               : 119
expr                 : 15 34 35 37 59 60 61 62 66 67 68 69 79 81 82 82 83 85 91 93 94 97 97 98 98 99 99 100 100 101 101 102 102 103 103 104 104 105 105 106 106 107 107 108 108 109 109 110 110 111 112 112 113 113 114 115 115 116 116 124 138
func_declaration     : 19
goto_mark            : 25
id                   : 7 8 9 11 12 38 40 41 55 56 57 62 63 64 65 66 68 69 70 72 74 75 76 77 78 79 80 81 82 117 130 131 132 133 134 135 137 138 139
if-else              : 26
int                  : 118
param                : 49 50 51
params               : 7 8 9 10 11 12 50 51
program              : 0
return               : 17
scope                : 2 3 4 6 13
statement            : 13 14
str                  : 121
struct_declaration   : 20
struct_param         : 42 43 44
struct_params        : 38 39 40 41 43 44
var_declaration      : 16
void                 : 122
while                : 21

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> .
    (2) program -> . scope
    (13) scope -> . scope statement
    (14) scope -> . statement
    (15) statement -> . expr SEMI
    (16) statement -> . var_declaration
    (17) statement -> . return
    (18) statement -> . assign
    (19) statement -> . func_declaration
    (20) statement -> . struct_declaration
    (21) statement -> . while
    (22) statement -> . BREAK SEMI
    (23) statement -> . CONTINUE SEMI
    (24) statement -> . GOTO ID SEMI
    (25) statement -> . goto_mark
    (26) statement -> . if-else
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (62) var_declaration -> . datatype id EQUALS expr SEMI
    (63) var_declaration -> . datatype id SEMI
    (64) var_declaration -> . ID id SEMI
    (65) var_declaration -> . ID id EQUALS LBRACE args RBRACE SEMI
    (66) var_declaration -> . ID id EQUALS expr SEMI
    (67) var_declaration -> . datatype error EQUALS expr SEMI
    (68) var_declaration -> . datatype id error expr SEMI
    (69) var_declaration -> . datatype id EQUALS expr error
    (70) var_declaration -> . datatype id EQUALS error SEMI
    (71) var_declaration -> . datatype error SEMI
    (72) var_declaration -> . datatype id error
    (73) var_declaration -> . ID error EQUALS LBRACE args RBRACE SEMI
    (74) var_declaration -> . ID id error LBRACE args RBRACE SEMI
    (75) var_declaration -> . ID id EQUALS error args RBRACE SEMI
    (76) var_declaration -> . ID id EQUALS LBRACE error RBRACE SEMI
    (77) var_declaration -> . ID id EQUALS LBRACE args error SEMI
    (78) var_declaration -> . ID id EQUALS LBRACE args RBRACE error
    (94) return -> . RETURN expr SEMI
    (95) return -> . RETURN SEMI
    (96) return -> . RETURN error
    (79) assign -> . id EQUALS expr SEMI
    (80) assign -> . id EQUALS LBRACE args RBRACE SEMI
    (81) assign -> . id DOT ID EQUALS expr SEMI
    (82) assign -> . id LBRACKET expr RBRACKET EQUALS expr SEMI
    (83) assign -> . ID error expr SEMI
    (84) assign -> . ID EQUALS error SEMI
    (85) assign -> . ID EQUALS expr error
    (86) assign -> . ID error LBRACE args RBRACE SEMI
    (87) assign -> . ID EQUALS error args RBRACE SEMI
    (88) assign -> . ID EQUALS LBRACE error RBRACE SEMI
    (89) assign -> . ID EQUALS LBRACE args error SEMI
    (90) assign -> . ID EQUALS LBRACE args RBRACE error
    (91) assign -> . ID DOT ID error expr SEMI
    (92) assign -> . ID DOT ID EQUALS error SEMI
    (93) assign -> . ID DOT ID EQUALS expr error
    (7) func_declaration -> . FUNCTION datatype id LPAREN params RPAREN basic_block
    (8) func_declaration -> . error datatype id LPAREN params RPAREN body_block
    (9) func_declaration -> . FUNCTION error id LPAREN params RPAREN body_block
    (10) func_declaration -> . FUNCTION datatype error LPAREN params RPAREN body_block
    (11) func_declaration -> . FUNCTION datatype id error params RPAREN body_block
    (12) func_declaration -> . FUNCTION datatype id LPAREN params error body_block
    (38) struct_declaration -> . STRUCTURE id LBRACE struct_params RBRACE
    (39) struct_declaration -> . STRUCTURE error LBRACE struct_params RBRACE
    (40) struct_declaration -> . STRUCTURE id error struct_params RBRACE
    (41) struct_declaration -> . STRUCTURE id LBRACE struct_params error
    (27) while -> . WHILE conditional basic_block
    (28) while -> . DO basic_block WHILE conditional SEMI
    (29) while -> . error body_block WHILE conditional SEMI
    (30) while -> . DO body_block error conditional SEMI
    (31) while -> . DO body_block WHILE conditional error
    (140) goto_mark -> . ID COLON
    (32) if-else -> . IF conditional basic_block
    (33) if-else -> . IF conditional basic_block ELSE basic_block
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    $end            reduce using rule 1 (program -> .)
    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    GOTO            shift and go to state 13
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 14
    error           shift and go to state 19
    RETURN          shift and go to state 30
    FUNCTION        shift and go to state 31
    STRUCTURE       shift and go to state 32
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    program                        shift and go to state 1
    scope                          shift and go to state 2
    statement                      shift and go to state 3
    expr                           shift and go to state 4
    var_declaration                shift and go to state 5
    return                         shift and go to state 6
    assign                         shift and go to state 7
    func_declaration               shift and go to state 8
    struct_declaration             shift and go to state 9
    while                          shift and go to state 10
    goto_mark                      shift and go to state 15
    if-else                        shift and go to state 16
    id                             shift and go to state 17
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 28

state 1

    (0) S' -> program .



state 2

    (2) program -> scope .
    (13) scope -> scope . statement
    (15) statement -> . expr SEMI
    (16) statement -> . var_declaration
    (17) statement -> . return
    (18) statement -> . assign
    (19) statement -> . func_declaration
    (20) statement -> . struct_declaration
    (21) statement -> . while
    (22) statement -> . BREAK SEMI
    (23) statement -> . CONTINUE SEMI
    (24) statement -> . GOTO ID SEMI
    (25) statement -> . goto_mark
    (26) statement -> . if-else
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (62) var_declaration -> . datatype id EQUALS expr SEMI
    (63) var_declaration -> . datatype id SEMI
    (64) var_declaration -> . ID id SEMI
    (65) var_declaration -> . ID id EQUALS LBRACE args RBRACE SEMI
    (66) var_declaration -> . ID id EQUALS expr SEMI
    (67) var_declaration -> . datatype error EQUALS expr SEMI
    (68) var_declaration -> . datatype id error expr SEMI
    (69) var_declaration -> . datatype id EQUALS expr error
    (70) var_declaration -> . datatype id EQUALS error SEMI
    (71) var_declaration -> . datatype error SEMI
    (72) var_declaration -> . datatype id error
    (73) var_declaration -> . ID error EQUALS LBRACE args RBRACE SEMI
    (74) var_declaration -> . ID id error LBRACE args RBRACE SEMI
    (75) var_declaration -> . ID id EQUALS error args RBRACE SEMI
    (76) var_declaration -> . ID id EQUALS LBRACE error RBRACE SEMI
    (77) var_declaration -> . ID id EQUALS LBRACE args error SEMI
    (78) var_declaration -> . ID id EQUALS LBRACE args RBRACE error
    (94) return -> . RETURN expr SEMI
    (95) return -> . RETURN SEMI
    (96) return -> . RETURN error
    (79) assign -> . id EQUALS expr SEMI
    (80) assign -> . id EQUALS LBRACE args RBRACE SEMI
    (81) assign -> . id DOT ID EQUALS expr SEMI
    (82) assign -> . id LBRACKET expr RBRACKET EQUALS expr SEMI
    (83) assign -> . ID error expr SEMI
    (84) assign -> . ID EQUALS error SEMI
    (85) assign -> . ID EQUALS expr error
    (86) assign -> . ID error LBRACE args RBRACE SEMI
    (87) assign -> . ID EQUALS error args RBRACE SEMI
    (88) assign -> . ID EQUALS LBRACE error RBRACE SEMI
    (89) assign -> . ID EQUALS LBRACE args error SEMI
    (90) assign -> . ID EQUALS LBRACE args RBRACE error
    (91) assign -> . ID DOT ID error expr SEMI
    (92) assign -> . ID DOT ID EQUALS error SEMI
    (93) assign -> . ID DOT ID EQUALS expr error
    (7) func_declaration -> . FUNCTION datatype id LPAREN params RPAREN basic_block
    (8) func_declaration -> . error datatype id LPAREN params RPAREN body_block
    (9) func_declaration -> . FUNCTION error id LPAREN params RPAREN body_block
    (10) func_declaration -> . FUNCTION datatype error LPAREN params RPAREN body_block
    (11) func_declaration -> . FUNCTION datatype id error params RPAREN body_block
    (12) func_declaration -> . FUNCTION datatype id LPAREN params error body_block
    (38) struct_declaration -> . STRUCTURE id LBRACE struct_params RBRACE
    (39) struct_declaration -> . STRUCTURE error LBRACE struct_params RBRACE
    (40) struct_declaration -> . STRUCTURE id error struct_params RBRACE
    (41) struct_declaration -> . STRUCTURE id LBRACE struct_params error
    (27) while -> . WHILE conditional basic_block
    (28) while -> . DO basic_block WHILE conditional SEMI
    (29) while -> . error body_block WHILE conditional SEMI
    (30) while -> . DO body_block error conditional SEMI
    (31) while -> . DO body_block WHILE conditional error
    (140) goto_mark -> . ID COLON
    (32) if-else -> . IF conditional basic_block
    (33) if-else -> . IF conditional basic_block ELSE basic_block
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    $end            reduce using rule 2 (program -> scope .)
    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    GOTO            shift and go to state 13
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 14
    error           shift and go to state 19
    RETURN          shift and go to state 30
    FUNCTION        shift and go to state 31
    STRUCTURE       shift and go to state 32
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    statement                      shift and go to state 41
    expr                           shift and go to state 4
    var_declaration                shift and go to state 5
    return                         shift and go to state 6
    assign                         shift and go to state 7
    func_declaration               shift and go to state 8
    struct_declaration             shift and go to state 9
    while                          shift and go to state 10
    goto_mark                      shift and go to state 15
    if-else                        shift and go to state 16
    id                             shift and go to state 17
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 28

state 3

    (14) scope -> statement .

    BREAK           reduce using rule 14 (scope -> statement .)
    CONTINUE        reduce using rule 14 (scope -> statement .)
    GOTO            reduce using rule 14 (scope -> statement .)
    MINUS           reduce using rule 14 (scope -> statement .)
    LNOT            reduce using rule 14 (scope -> statement .)
    NULL            reduce using rule 14 (scope -> statement .)
    LPAREN          reduce using rule 14 (scope -> statement .)
    ID              reduce using rule 14 (scope -> statement .)
    error           reduce using rule 14 (scope -> statement .)
    RETURN          reduce using rule 14 (scope -> statement .)
    FUNCTION        reduce using rule 14 (scope -> statement .)
    STRUCTURE       reduce using rule 14 (scope -> statement .)
    WHILE           reduce using rule 14 (scope -> statement .)
    DO              reduce using rule 14 (scope -> statement .)
    IF              reduce using rule 14 (scope -> statement .)
    INTEGER         reduce using rule 14 (scope -> statement .)
    DOUBLE          reduce using rule 14 (scope -> statement .)
    BOOL            reduce using rule 14 (scope -> statement .)
    STRING          reduce using rule 14 (scope -> statement .)
    VOID            reduce using rule 14 (scope -> statement .)
    DATATYPE        reduce using rule 14 (scope -> statement .)
    $end            reduce using rule 14 (scope -> statement .)
    RBRACE          reduce using rule 14 (scope -> statement .)


state 4

    (15) statement -> expr . SEMI
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

    SEMI            shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MUL             shift and go to state 45
    DIVIDE          shift and go to state 46
    INTDIVIDE       shift and go to state 47
    MODULO          shift and go to state 48
    POW             shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    LT              shift and go to state 52
    GT              shift and go to state 53
    EQ              shift and go to state 54
    NE              shift and go to state 55
    error           shift and go to state 56
    LAND            shift and go to state 57
    LOR             shift and go to state 58
    BAND            shift and go to state 59
    BOR             shift and go to state 60


state 5

    (16) statement -> var_declaration .

    BREAK           reduce using rule 16 (statement -> var_declaration .)
    CONTINUE        reduce using rule 16 (statement -> var_declaration .)
    GOTO            reduce using rule 16 (statement -> var_declaration .)
    MINUS           reduce using rule 16 (statement -> var_declaration .)
    LNOT            reduce using rule 16 (statement -> var_declaration .)
    NULL            reduce using rule 16 (statement -> var_declaration .)
    LPAREN          reduce using rule 16 (statement -> var_declaration .)
    ID              reduce using rule 16 (statement -> var_declaration .)
    error           reduce using rule 16 (statement -> var_declaration .)
    RETURN          reduce using rule 16 (statement -> var_declaration .)
    FUNCTION        reduce using rule 16 (statement -> var_declaration .)
    STRUCTURE       reduce using rule 16 (statement -> var_declaration .)
    WHILE           reduce using rule 16 (statement -> var_declaration .)
    DO              reduce using rule 16 (statement -> var_declaration .)
    IF              reduce using rule 16 (statement -> var_declaration .)
    INTEGER         reduce using rule 16 (statement -> var_declaration .)
    DOUBLE          reduce using rule 16 (statement -> var_declaration .)
    BOOL            reduce using rule 16 (statement -> var_declaration .)
    STRING          reduce using rule 16 (statement -> var_declaration .)
    VOID            reduce using rule 16 (statement -> var_declaration .)
    DATATYPE        reduce using rule 16 (statement -> var_declaration .)
    $end            reduce using rule 16 (statement -> var_declaration .)
    RBRACE          reduce using rule 16 (statement -> var_declaration .)


state 6

    (17) statement -> return .

    BREAK           reduce using rule 17 (statement -> return .)
    CONTINUE        reduce using rule 17 (statement -> return .)
    GOTO            reduce using rule 17 (statement -> return .)
    MINUS           reduce using rule 17 (statement -> return .)
    LNOT            reduce using rule 17 (statement -> return .)
    NULL            reduce using rule 17 (statement -> return .)
    LPAREN          reduce using rule 17 (statement -> return .)
    ID              reduce using rule 17 (statement -> return .)
    error           reduce using rule 17 (statement -> return .)
    RETURN          reduce using rule 17 (statement -> return .)
    FUNCTION        reduce using rule 17 (statement -> return .)
    STRUCTURE       reduce using rule 17 (statement -> return .)
    WHILE           reduce using rule 17 (statement -> return .)
    DO              reduce using rule 17 (statement -> return .)
    IF              reduce using rule 17 (statement -> return .)
    INTEGER         reduce using rule 17 (statement -> return .)
    DOUBLE          reduce using rule 17 (statement -> return .)
    BOOL            reduce using rule 17 (statement -> return .)
    STRING          reduce using rule 17 (statement -> return .)
    VOID            reduce using rule 17 (statement -> return .)
    DATATYPE        reduce using rule 17 (statement -> return .)
    $end            reduce using rule 17 (statement -> return .)
    RBRACE          reduce using rule 17 (statement -> return .)


state 7

    (18) statement -> assign .

    BREAK           reduce using rule 18 (statement -> assign .)
    CONTINUE        reduce using rule 18 (statement -> assign .)
    GOTO            reduce using rule 18 (statement -> assign .)
    MINUS           reduce using rule 18 (statement -> assign .)
    LNOT            reduce using rule 18 (statement -> assign .)
    NULL            reduce using rule 18 (statement -> assign .)
    LPAREN          reduce using rule 18 (statement -> assign .)
    ID              reduce using rule 18 (statement -> assign .)
    error           reduce using rule 18 (statement -> assign .)
    RETURN          reduce using rule 18 (statement -> assign .)
    FUNCTION        reduce using rule 18 (statement -> assign .)
    STRUCTURE       reduce using rule 18 (statement -> assign .)
    WHILE           reduce using rule 18 (statement -> assign .)
    DO              reduce using rule 18 (statement -> assign .)
    IF              reduce using rule 18 (statement -> assign .)
    INTEGER         reduce using rule 18 (statement -> assign .)
    DOUBLE          reduce using rule 18 (statement -> assign .)
    BOOL            reduce using rule 18 (statement -> assign .)
    STRING          reduce using rule 18 (statement -> assign .)
    VOID            reduce using rule 18 (statement -> assign .)
    DATATYPE        reduce using rule 18 (statement -> assign .)
    $end            reduce using rule 18 (statement -> assign .)
    RBRACE          reduce using rule 18 (statement -> assign .)


state 8

    (19) statement -> func_declaration .

    BREAK           reduce using rule 19 (statement -> func_declaration .)
    CONTINUE        reduce using rule 19 (statement -> func_declaration .)
    GOTO            reduce using rule 19 (statement -> func_declaration .)
    MINUS           reduce using rule 19 (statement -> func_declaration .)
    LNOT            reduce using rule 19 (statement -> func_declaration .)
    NULL            reduce using rule 19 (statement -> func_declaration .)
    LPAREN          reduce using rule 19 (statement -> func_declaration .)
    ID              reduce using rule 19 (statement -> func_declaration .)
    error           reduce using rule 19 (statement -> func_declaration .)
    RETURN          reduce using rule 19 (statement -> func_declaration .)
    FUNCTION        reduce using rule 19 (statement -> func_declaration .)
    STRUCTURE       reduce using rule 19 (statement -> func_declaration .)
    WHILE           reduce using rule 19 (statement -> func_declaration .)
    DO              reduce using rule 19 (statement -> func_declaration .)
    IF              reduce using rule 19 (statement -> func_declaration .)
    INTEGER         reduce using rule 19 (statement -> func_declaration .)
    DOUBLE          reduce using rule 19 (statement -> func_declaration .)
    BOOL            reduce using rule 19 (statement -> func_declaration .)
    STRING          reduce using rule 19 (statement -> func_declaration .)
    VOID            reduce using rule 19 (statement -> func_declaration .)
    DATATYPE        reduce using rule 19 (statement -> func_declaration .)
    $end            reduce using rule 19 (statement -> func_declaration .)
    RBRACE          reduce using rule 19 (statement -> func_declaration .)


state 9

    (20) statement -> struct_declaration .

    BREAK           reduce using rule 20 (statement -> struct_declaration .)
    CONTINUE        reduce using rule 20 (statement -> struct_declaration .)
    GOTO            reduce using rule 20 (statement -> struct_declaration .)
    MINUS           reduce using rule 20 (statement -> struct_declaration .)
    LNOT            reduce using rule 20 (statement -> struct_declaration .)
    NULL            reduce using rule 20 (statement -> struct_declaration .)
    LPAREN          reduce using rule 20 (statement -> struct_declaration .)
    ID              reduce using rule 20 (statement -> struct_declaration .)
    error           reduce using rule 20 (statement -> struct_declaration .)
    RETURN          reduce using rule 20 (statement -> struct_declaration .)
    FUNCTION        reduce using rule 20 (statement -> struct_declaration .)
    STRUCTURE       reduce using rule 20 (statement -> struct_declaration .)
    WHILE           reduce using rule 20 (statement -> struct_declaration .)
    DO              reduce using rule 20 (statement -> struct_declaration .)
    IF              reduce using rule 20 (statement -> struct_declaration .)
    INTEGER         reduce using rule 20 (statement -> struct_declaration .)
    DOUBLE          reduce using rule 20 (statement -> struct_declaration .)
    BOOL            reduce using rule 20 (statement -> struct_declaration .)
    STRING          reduce using rule 20 (statement -> struct_declaration .)
    VOID            reduce using rule 20 (statement -> struct_declaration .)
    DATATYPE        reduce using rule 20 (statement -> struct_declaration .)
    $end            reduce using rule 20 (statement -> struct_declaration .)
    RBRACE          reduce using rule 20 (statement -> struct_declaration .)


state 10

    (21) statement -> while .

    BREAK           reduce using rule 21 (statement -> while .)
    CONTINUE        reduce using rule 21 (statement -> while .)
    GOTO            reduce using rule 21 (statement -> while .)
    MINUS           reduce using rule 21 (statement -> while .)
    LNOT            reduce using rule 21 (statement -> while .)
    NULL            reduce using rule 21 (statement -> while .)
    LPAREN          reduce using rule 21 (statement -> while .)
    ID              reduce using rule 21 (statement -> while .)
    error           reduce using rule 21 (statement -> while .)
    RETURN          reduce using rule 21 (statement -> while .)
    FUNCTION        reduce using rule 21 (statement -> while .)
    STRUCTURE       reduce using rule 21 (statement -> while .)
    WHILE           reduce using rule 21 (statement -> while .)
    DO              reduce using rule 21 (statement -> while .)
    IF              reduce using rule 21 (statement -> while .)
    INTEGER         reduce using rule 21 (statement -> while .)
    DOUBLE          reduce using rule 21 (statement -> while .)
    BOOL            reduce using rule 21 (statement -> while .)
    STRING          reduce using rule 21 (statement -> while .)
    VOID            reduce using rule 21 (statement -> while .)
    DATATYPE        reduce using rule 21 (statement -> while .)
    $end            reduce using rule 21 (statement -> while .)
    RBRACE          reduce using rule 21 (statement -> while .)


state 11

    (22) statement -> BREAK . SEMI

    SEMI            shift and go to state 61


state 12

    (23) statement -> CONTINUE . SEMI

    SEMI            shift and go to state 62


state 13

    (24) statement -> GOTO . ID SEMI

    ID              shift and go to state 63


state 14

    (131) expr -> ID . id LBRACKET INTEGER RBRACKET
    (133) expr -> ID . id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (64) var_declaration -> ID . id SEMI
    (65) var_declaration -> ID . id EQUALS LBRACE args RBRACE SEMI
    (66) var_declaration -> ID . id EQUALS expr SEMI
    (73) var_declaration -> ID . error EQUALS LBRACE args RBRACE SEMI
    (74) var_declaration -> ID . id error LBRACE args RBRACE SEMI
    (75) var_declaration -> ID . id EQUALS error args RBRACE SEMI
    (76) var_declaration -> ID . id EQUALS LBRACE error RBRACE SEMI
    (77) var_declaration -> ID . id EQUALS LBRACE args error SEMI
    (78) var_declaration -> ID . id EQUALS LBRACE args RBRACE error
    (83) assign -> ID . error expr SEMI
    (84) assign -> ID . EQUALS error SEMI
    (85) assign -> ID . EQUALS expr error
    (86) assign -> ID . error LBRACE args RBRACE SEMI
    (87) assign -> ID . EQUALS error args RBRACE SEMI
    (88) assign -> ID . EQUALS LBRACE error RBRACE SEMI
    (89) assign -> ID . EQUALS LBRACE args error SEMI
    (90) assign -> ID . EQUALS LBRACE args RBRACE error
    (91) assign -> ID . DOT ID error expr SEMI
    (92) assign -> ID . DOT ID EQUALS error SEMI
    (93) assign -> ID . DOT ID EQUALS expr error
    (140) goto_mark -> ID . COLON
    (142) id -> ID .
    (142) id -> . ID

  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    error           shift and go to state 67
    EQUALS          shift and go to state 66
    DOT             shift and go to state 68
    COLON           shift and go to state 69
    LPAREN          reduce using rule 142 (id -> ID .)
    LBRACKET        reduce using rule 142 (id -> ID .)
    SEMI            reduce using rule 142 (id -> ID .)
    PLUS            reduce using rule 142 (id -> ID .)
    MINUS           reduce using rule 142 (id -> ID .)
    MUL             reduce using rule 142 (id -> ID .)
    DIVIDE          reduce using rule 142 (id -> ID .)
    INTDIVIDE       reduce using rule 142 (id -> ID .)
    MODULO          reduce using rule 142 (id -> ID .)
    POW             reduce using rule 142 (id -> ID .)
    LE              reduce using rule 142 (id -> ID .)
    GE              reduce using rule 142 (id -> ID .)
    LT              reduce using rule 142 (id -> ID .)
    GT              reduce using rule 142 (id -> ID .)
    EQ              reduce using rule 142 (id -> ID .)
    NE              reduce using rule 142 (id -> ID .)
    LAND            reduce using rule 142 (id -> ID .)
    LOR             reduce using rule 142 (id -> ID .)
    BAND            reduce using rule 142 (id -> ID .)
    BOR             reduce using rule 142 (id -> ID .)
    ID              shift and go to state 64

  ! error           [ reduce using rule 142 (id -> ID .) ]
  ! DOT             [ reduce using rule 142 (id -> ID .) ]
  ! EQUALS          [ reduce using rule 142 (id -> ID .) ]

    id                             shift and go to state 65

state 15

    (25) statement -> goto_mark .

    BREAK           reduce using rule 25 (statement -> goto_mark .)
    CONTINUE        reduce using rule 25 (statement -> goto_mark .)
    GOTO            reduce using rule 25 (statement -> goto_mark .)
    MINUS           reduce using rule 25 (statement -> goto_mark .)
    LNOT            reduce using rule 25 (statement -> goto_mark .)
    NULL            reduce using rule 25 (statement -> goto_mark .)
    LPAREN          reduce using rule 25 (statement -> goto_mark .)
    ID              reduce using rule 25 (statement -> goto_mark .)
    error           reduce using rule 25 (statement -> goto_mark .)
    RETURN          reduce using rule 25 (statement -> goto_mark .)
    FUNCTION        reduce using rule 25 (statement -> goto_mark .)
    STRUCTURE       reduce using rule 25 (statement -> goto_mark .)
    WHILE           reduce using rule 25 (statement -> goto_mark .)
    DO              reduce using rule 25 (statement -> goto_mark .)
    IF              reduce using rule 25 (statement -> goto_mark .)
    INTEGER         reduce using rule 25 (statement -> goto_mark .)
    DOUBLE          reduce using rule 25 (statement -> goto_mark .)
    BOOL            reduce using rule 25 (statement -> goto_mark .)
    STRING          reduce using rule 25 (statement -> goto_mark .)
    VOID            reduce using rule 25 (statement -> goto_mark .)
    DATATYPE        reduce using rule 25 (statement -> goto_mark .)
    $end            reduce using rule 25 (statement -> goto_mark .)
    RBRACE          reduce using rule 25 (statement -> goto_mark .)


state 16

    (26) statement -> if-else .

    BREAK           reduce using rule 26 (statement -> if-else .)
    CONTINUE        reduce using rule 26 (statement -> if-else .)
    GOTO            reduce using rule 26 (statement -> if-else .)
    MINUS           reduce using rule 26 (statement -> if-else .)
    LNOT            reduce using rule 26 (statement -> if-else .)
    NULL            reduce using rule 26 (statement -> if-else .)
    LPAREN          reduce using rule 26 (statement -> if-else .)
    ID              reduce using rule 26 (statement -> if-else .)
    error           reduce using rule 26 (statement -> if-else .)
    RETURN          reduce using rule 26 (statement -> if-else .)
    FUNCTION        reduce using rule 26 (statement -> if-else .)
    STRUCTURE       reduce using rule 26 (statement -> if-else .)
    WHILE           reduce using rule 26 (statement -> if-else .)
    DO              reduce using rule 26 (statement -> if-else .)
    IF              reduce using rule 26 (statement -> if-else .)
    INTEGER         reduce using rule 26 (statement -> if-else .)
    DOUBLE          reduce using rule 26 (statement -> if-else .)
    BOOL            reduce using rule 26 (statement -> if-else .)
    STRING          reduce using rule 26 (statement -> if-else .)
    VOID            reduce using rule 26 (statement -> if-else .)
    DATATYPE        reduce using rule 26 (statement -> if-else .)
    $end            reduce using rule 26 (statement -> if-else .)
    RBRACE          reduce using rule 26 (statement -> if-else .)


state 17

    (55) expr -> id . LPAREN args RPAREN
    (56) expr -> id . error args RPAREN
    (57) expr -> id . LPAREN args error
    (117) expr -> id .
    (138) expr -> id . LBRACKET expr RBRACKET
    (139) expr -> id . DOT ID
    (79) assign -> id . EQUALS expr SEMI
    (80) assign -> id . EQUALS LBRACE args RBRACE SEMI
    (81) assign -> id . DOT ID EQUALS expr SEMI
    (82) assign -> id . LBRACKET expr RBRACKET EQUALS expr SEMI

  ! shift/reduce conflict for error resolved as shift
    LPAREN          shift and go to state 70
    error           shift and go to state 71
    SEMI            reduce using rule 117 (expr -> id .)
    PLUS            reduce using rule 117 (expr -> id .)
    MINUS           reduce using rule 117 (expr -> id .)
    MUL             reduce using rule 117 (expr -> id .)
    DIVIDE          reduce using rule 117 (expr -> id .)
    INTDIVIDE       reduce using rule 117 (expr -> id .)
    MODULO          reduce using rule 117 (expr -> id .)
    POW             reduce using rule 117 (expr -> id .)
    LE              reduce using rule 117 (expr -> id .)
    GE              reduce using rule 117 (expr -> id .)
    LT              reduce using rule 117 (expr -> id .)
    GT              reduce using rule 117 (expr -> id .)
    EQ              reduce using rule 117 (expr -> id .)
    NE              reduce using rule 117 (expr -> id .)
    LAND            reduce using rule 117 (expr -> id .)
    LOR             reduce using rule 117 (expr -> id .)
    BAND            reduce using rule 117 (expr -> id .)
    BOR             reduce using rule 117 (expr -> id .)
    LBRACKET        shift and go to state 72
    DOT             shift and go to state 73
    EQUALS          shift and go to state 74

  ! error           [ reduce using rule 117 (expr -> id .) ]


state 18

    (124) expr -> LPAREN . expr RPAREN
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    expr                           shift and go to state 75
    id                             shift and go to state 76
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 19

    (137) expr -> error . LBRACKET RBRACKET id
    (8) func_declaration -> error . datatype id LPAREN params RPAREN body_block
    (29) while -> error . body_block WHILE conditional SEMI
    (141) datatype -> . DATATYPE
    (4) body_block -> . error scope RBRACE
    (5) body_block -> . LBRACE error RBRACE
    (6) body_block -> . LBRACE scope error

    LBRACKET        shift and go to state 81
    DATATYPE        shift and go to state 40
    error           shift and go to state 80
    LBRACE          shift and go to state 84

    datatype                       shift and go to state 82
    body_block                     shift and go to state 83

state 20

    (111) expr -> MINUS . expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    expr                           shift and go to state 85
    id                             shift and go to state 76
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 21

    (114) expr -> LNOT . expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    expr                           shift and go to state 86
    id                             shift and go to state 76
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 22

    (118) expr -> int .

    SEMI            reduce using rule 118 (expr -> int .)
    PLUS            reduce using rule 118 (expr -> int .)
    MINUS           reduce using rule 118 (expr -> int .)
    MUL             reduce using rule 118 (expr -> int .)
    DIVIDE          reduce using rule 118 (expr -> int .)
    INTDIVIDE       reduce using rule 118 (expr -> int .)
    MODULO          reduce using rule 118 (expr -> int .)
    POW             reduce using rule 118 (expr -> int .)
    LE              reduce using rule 118 (expr -> int .)
    GE              reduce using rule 118 (expr -> int .)
    LT              reduce using rule 118 (expr -> int .)
    GT              reduce using rule 118 (expr -> int .)
    EQ              reduce using rule 118 (expr -> int .)
    NE              reduce using rule 118 (expr -> int .)
    error           reduce using rule 118 (expr -> int .)
    LAND            reduce using rule 118 (expr -> int .)
    LOR             reduce using rule 118 (expr -> int .)
    BAND            reduce using rule 118 (expr -> int .)
    BOR             reduce using rule 118 (expr -> int .)
    RPAREN          reduce using rule 118 (expr -> int .)
    COMMA           reduce using rule 118 (expr -> int .)
    RBRACKET        reduce using rule 118 (expr -> int .)
    RBRACE          reduce using rule 118 (expr -> int .)


state 23

    (119) expr -> double .

    SEMI            reduce using rule 119 (expr -> double .)
    PLUS            reduce using rule 119 (expr -> double .)
    MINUS           reduce using rule 119 (expr -> double .)
    MUL             reduce using rule 119 (expr -> double .)
    DIVIDE          reduce using rule 119 (expr -> double .)
    INTDIVIDE       reduce using rule 119 (expr -> double .)
    MODULO          reduce using rule 119 (expr -> double .)
    POW             reduce using rule 119 (expr -> double .)
    LE              reduce using rule 119 (expr -> double .)
    GE              reduce using rule 119 (expr -> double .)
    LT              reduce using rule 119 (expr -> double .)
    GT              reduce using rule 119 (expr -> double .)
    EQ              reduce using rule 119 (expr -> double .)
    NE              reduce using rule 119 (expr -> double .)
    error           reduce using rule 119 (expr -> double .)
    LAND            reduce using rule 119 (expr -> double .)
    LOR             reduce using rule 119 (expr -> double .)
    BAND            reduce using rule 119 (expr -> double .)
    BOR             reduce using rule 119 (expr -> double .)
    RPAREN          reduce using rule 119 (expr -> double .)
    COMMA           reduce using rule 119 (expr -> double .)
    RBRACKET        reduce using rule 119 (expr -> double .)
    RBRACE          reduce using rule 119 (expr -> double .)


state 24

    (120) expr -> bool .

    SEMI            reduce using rule 120 (expr -> bool .)
    PLUS            reduce using rule 120 (expr -> bool .)
    MINUS           reduce using rule 120 (expr -> bool .)
    MUL             reduce using rule 120 (expr -> bool .)
    DIVIDE          reduce using rule 120 (expr -> bool .)
    INTDIVIDE       reduce using rule 120 (expr -> bool .)
    MODULO          reduce using rule 120 (expr -> bool .)
    POW             reduce using rule 120 (expr -> bool .)
    LE              reduce using rule 120 (expr -> bool .)
    GE              reduce using rule 120 (expr -> bool .)
    LT              reduce using rule 120 (expr -> bool .)
    GT              reduce using rule 120 (expr -> bool .)
    EQ              reduce using rule 120 (expr -> bool .)
    NE              reduce using rule 120 (expr -> bool .)
    error           reduce using rule 120 (expr -> bool .)
    LAND            reduce using rule 120 (expr -> bool .)
    LOR             reduce using rule 120 (expr -> bool .)
    BAND            reduce using rule 120 (expr -> bool .)
    BOR             reduce using rule 120 (expr -> bool .)
    RPAREN          reduce using rule 120 (expr -> bool .)
    COMMA           reduce using rule 120 (expr -> bool .)
    RBRACKET        reduce using rule 120 (expr -> bool .)
    RBRACE          reduce using rule 120 (expr -> bool .)


state 25

    (121) expr -> str .

    SEMI            reduce using rule 121 (expr -> str .)
    PLUS            reduce using rule 121 (expr -> str .)
    MINUS           reduce using rule 121 (expr -> str .)
    MUL             reduce using rule 121 (expr -> str .)
    DIVIDE          reduce using rule 121 (expr -> str .)
    INTDIVIDE       reduce using rule 121 (expr -> str .)
    MODULO          reduce using rule 121 (expr -> str .)
    POW             reduce using rule 121 (expr -> str .)
    LE              reduce using rule 121 (expr -> str .)
    GE              reduce using rule 121 (expr -> str .)
    LT              reduce using rule 121 (expr -> str .)
    GT              reduce using rule 121 (expr -> str .)
    EQ              reduce using rule 121 (expr -> str .)
    NE              reduce using rule 121 (expr -> str .)
    error           reduce using rule 121 (expr -> str .)
    LAND            reduce using rule 121 (expr -> str .)
    LOR             reduce using rule 121 (expr -> str .)
    BAND            reduce using rule 121 (expr -> str .)
    BOR             reduce using rule 121 (expr -> str .)
    RPAREN          reduce using rule 121 (expr -> str .)
    COMMA           reduce using rule 121 (expr -> str .)
    RBRACKET        reduce using rule 121 (expr -> str .)
    RBRACE          reduce using rule 121 (expr -> str .)


state 26

    (122) expr -> void .

    SEMI            reduce using rule 122 (expr -> void .)
    PLUS            reduce using rule 122 (expr -> void .)
    MINUS           reduce using rule 122 (expr -> void .)
    MUL             reduce using rule 122 (expr -> void .)
    DIVIDE          reduce using rule 122 (expr -> void .)
    INTDIVIDE       reduce using rule 122 (expr -> void .)
    MODULO          reduce using rule 122 (expr -> void .)
    POW             reduce using rule 122 (expr -> void .)
    LE              reduce using rule 122 (expr -> void .)
    GE              reduce using rule 122 (expr -> void .)
    LT              reduce using rule 122 (expr -> void .)
    GT              reduce using rule 122 (expr -> void .)
    EQ              reduce using rule 122 (expr -> void .)
    NE              reduce using rule 122 (expr -> void .)
    error           reduce using rule 122 (expr -> void .)
    LAND            reduce using rule 122 (expr -> void .)
    LOR             reduce using rule 122 (expr -> void .)
    BAND            reduce using rule 122 (expr -> void .)
    BOR             reduce using rule 122 (expr -> void .)
    RPAREN          reduce using rule 122 (expr -> void .)
    COMMA           reduce using rule 122 (expr -> void .)
    RBRACKET        reduce using rule 122 (expr -> void .)
    RBRACE          reduce using rule 122 (expr -> void .)


state 27

    (123) expr -> NULL .

    SEMI            reduce using rule 123 (expr -> NULL .)
    PLUS            reduce using rule 123 (expr -> NULL .)
    MINUS           reduce using rule 123 (expr -> NULL .)
    MUL             reduce using rule 123 (expr -> NULL .)
    DIVIDE          reduce using rule 123 (expr -> NULL .)
    INTDIVIDE       reduce using rule 123 (expr -> NULL .)
    MODULO          reduce using rule 123 (expr -> NULL .)
    POW             reduce using rule 123 (expr -> NULL .)
    LE              reduce using rule 123 (expr -> NULL .)
    GE              reduce using rule 123 (expr -> NULL .)
    LT              reduce using rule 123 (expr -> NULL .)
    GT              reduce using rule 123 (expr -> NULL .)
    EQ              reduce using rule 123 (expr -> NULL .)
    NE              reduce using rule 123 (expr -> NULL .)
    error           reduce using rule 123 (expr -> NULL .)
    LAND            reduce using rule 123 (expr -> NULL .)
    LOR             reduce using rule 123 (expr -> NULL .)
    BAND            reduce using rule 123 (expr -> NULL .)
    BOR             reduce using rule 123 (expr -> NULL .)
    RPAREN          reduce using rule 123 (expr -> NULL .)
    COMMA           reduce using rule 123 (expr -> NULL .)
    RBRACKET        reduce using rule 123 (expr -> NULL .)
    RBRACE          reduce using rule 123 (expr -> NULL .)


state 28

    (130) expr -> datatype . id LBRACKET INTEGER RBRACKET
    (132) expr -> datatype . id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> datatype . error RBRACKET id
    (135) expr -> datatype . LBRACKET error id
    (136) expr -> datatype . LBRACKET RBRACKET error
    (62) var_declaration -> datatype . id EQUALS expr SEMI
    (63) var_declaration -> datatype . id SEMI
    (67) var_declaration -> datatype . error EQUALS expr SEMI
    (68) var_declaration -> datatype . id error expr SEMI
    (69) var_declaration -> datatype . id EQUALS expr error
    (70) var_declaration -> datatype . id EQUALS error SEMI
    (71) var_declaration -> datatype . error SEMI
    (72) var_declaration -> datatype . id error
    (142) id -> . ID

    error           shift and go to state 89
    LBRACKET        shift and go to state 88
    ID              shift and go to state 64

    id                             shift and go to state 87

state 29

    (125) int -> INTEGER .

    SEMI            reduce using rule 125 (int -> INTEGER .)
    PLUS            reduce using rule 125 (int -> INTEGER .)
    MINUS           reduce using rule 125 (int -> INTEGER .)
    MUL             reduce using rule 125 (int -> INTEGER .)
    DIVIDE          reduce using rule 125 (int -> INTEGER .)
    INTDIVIDE       reduce using rule 125 (int -> INTEGER .)
    MODULO          reduce using rule 125 (int -> INTEGER .)
    POW             reduce using rule 125 (int -> INTEGER .)
    LE              reduce using rule 125 (int -> INTEGER .)
    GE              reduce using rule 125 (int -> INTEGER .)
    LT              reduce using rule 125 (int -> INTEGER .)
    GT              reduce using rule 125 (int -> INTEGER .)
    EQ              reduce using rule 125 (int -> INTEGER .)
    NE              reduce using rule 125 (int -> INTEGER .)
    error           reduce using rule 125 (int -> INTEGER .)
    LAND            reduce using rule 125 (int -> INTEGER .)
    LOR             reduce using rule 125 (int -> INTEGER .)
    BAND            reduce using rule 125 (int -> INTEGER .)
    BOR             reduce using rule 125 (int -> INTEGER .)
    RPAREN          reduce using rule 125 (int -> INTEGER .)
    COMMA           reduce using rule 125 (int -> INTEGER .)
    RBRACKET        reduce using rule 125 (int -> INTEGER .)
    RBRACE          reduce using rule 125 (int -> INTEGER .)


state 30

    (94) return -> RETURN . expr SEMI
    (95) return -> RETURN . SEMI
    (96) return -> RETURN . error
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    SEMI            shift and go to state 91
    error           shift and go to state 92
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    expr                           shift and go to state 90
    id                             shift and go to state 76
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 31

    (7) func_declaration -> FUNCTION . datatype id LPAREN params RPAREN basic_block
    (9) func_declaration -> FUNCTION . error id LPAREN params RPAREN body_block
    (10) func_declaration -> FUNCTION . datatype error LPAREN params RPAREN body_block
    (11) func_declaration -> FUNCTION . datatype id error params RPAREN body_block
    (12) func_declaration -> FUNCTION . datatype id LPAREN params error body_block
    (141) datatype -> . DATATYPE

    error           shift and go to state 94
    DATATYPE        shift and go to state 40

    datatype                       shift and go to state 93

state 32

    (38) struct_declaration -> STRUCTURE . id LBRACE struct_params RBRACE
    (39) struct_declaration -> STRUCTURE . error LBRACE struct_params RBRACE
    (40) struct_declaration -> STRUCTURE . id error struct_params RBRACE
    (41) struct_declaration -> STRUCTURE . id LBRACE struct_params error
    (142) id -> . ID

    error           shift and go to state 96
    ID              shift and go to state 64

    id                             shift and go to state 95

state 33

    (27) while -> WHILE . conditional basic_block
    (34) conditional -> . LPAREN expr RPAREN
    (35) conditional -> . error expr RPAREN
    (36) conditional -> . LPAREN error RPAREN
    (37) conditional -> . LPAREN expr error

    LPAREN          shift and go to state 98
    error           shift and go to state 99

    conditional                    shift and go to state 97

state 34

    (28) while -> DO . basic_block WHILE conditional SEMI
    (30) while -> DO . body_block error conditional SEMI
    (31) while -> DO . body_block WHILE conditional error
    (3) basic_block -> . LBRACE scope RBRACE
    (4) body_block -> . error scope RBRACE
    (5) body_block -> . LBRACE error RBRACE
    (6) body_block -> . LBRACE scope error

    LBRACE          shift and go to state 102
    error           shift and go to state 80

    basic_block                    shift and go to state 100
    body_block                     shift and go to state 101

state 35

    (32) if-else -> IF . conditional basic_block
    (33) if-else -> IF . conditional basic_block ELSE basic_block
    (34) conditional -> . LPAREN expr RPAREN
    (35) conditional -> . error expr RPAREN
    (36) conditional -> . LPAREN error RPAREN
    (37) conditional -> . LPAREN expr error

    LPAREN          shift and go to state 98
    error           shift and go to state 99

    conditional                    shift and go to state 103

state 36

    (126) double -> DOUBLE .

    SEMI            reduce using rule 126 (double -> DOUBLE .)
    PLUS            reduce using rule 126 (double -> DOUBLE .)
    MINUS           reduce using rule 126 (double -> DOUBLE .)
    MUL             reduce using rule 126 (double -> DOUBLE .)
    DIVIDE          reduce using rule 126 (double -> DOUBLE .)
    INTDIVIDE       reduce using rule 126 (double -> DOUBLE .)
    MODULO          reduce using rule 126 (double -> DOUBLE .)
    POW             reduce using rule 126 (double -> DOUBLE .)
    LE              reduce using rule 126 (double -> DOUBLE .)
    GE              reduce using rule 126 (double -> DOUBLE .)
    LT              reduce using rule 126 (double -> DOUBLE .)
    GT              reduce using rule 126 (double -> DOUBLE .)
    EQ              reduce using rule 126 (double -> DOUBLE .)
    NE              reduce using rule 126 (double -> DOUBLE .)
    error           reduce using rule 126 (double -> DOUBLE .)
    LAND            reduce using rule 126 (double -> DOUBLE .)
    LOR             reduce using rule 126 (double -> DOUBLE .)
    BAND            reduce using rule 126 (double -> DOUBLE .)
    BOR             reduce using rule 126 (double -> DOUBLE .)
    RPAREN          reduce using rule 126 (double -> DOUBLE .)
    COMMA           reduce using rule 126 (double -> DOUBLE .)
    RBRACKET        reduce using rule 126 (double -> DOUBLE .)
    RBRACE          reduce using rule 126 (double -> DOUBLE .)


state 37

    (127) bool -> BOOL .

    SEMI            reduce using rule 127 (bool -> BOOL .)
    PLUS            reduce using rule 127 (bool -> BOOL .)
    MINUS           reduce using rule 127 (bool -> BOOL .)
    MUL             reduce using rule 127 (bool -> BOOL .)
    DIVIDE          reduce using rule 127 (bool -> BOOL .)
    INTDIVIDE       reduce using rule 127 (bool -> BOOL .)
    MODULO          reduce using rule 127 (bool -> BOOL .)
    POW             reduce using rule 127 (bool -> BOOL .)
    LE              reduce using rule 127 (bool -> BOOL .)
    GE              reduce using rule 127 (bool -> BOOL .)
    LT              reduce using rule 127 (bool -> BOOL .)
    GT              reduce using rule 127 (bool -> BOOL .)
    EQ              reduce using rule 127 (bool -> BOOL .)
    NE              reduce using rule 127 (bool -> BOOL .)
    error           reduce using rule 127 (bool -> BOOL .)
    LAND            reduce using rule 127 (bool -> BOOL .)
    LOR             reduce using rule 127 (bool -> BOOL .)
    BAND            reduce using rule 127 (bool -> BOOL .)
    BOR             reduce using rule 127 (bool -> BOOL .)
    RPAREN          reduce using rule 127 (bool -> BOOL .)
    COMMA           reduce using rule 127 (bool -> BOOL .)
    RBRACKET        reduce using rule 127 (bool -> BOOL .)
    RBRACE          reduce using rule 127 (bool -> BOOL .)


state 38

    (128) str -> STRING .

    SEMI            reduce using rule 128 (str -> STRING .)
    PLUS            reduce using rule 128 (str -> STRING .)
    MINUS           reduce using rule 128 (str -> STRING .)
    MUL             reduce using rule 128 (str -> STRING .)
    DIVIDE          reduce using rule 128 (str -> STRING .)
    INTDIVIDE       reduce using rule 128 (str -> STRING .)
    MODULO          reduce using rule 128 (str -> STRING .)
    POW             reduce using rule 128 (str -> STRING .)
    LE              reduce using rule 128 (str -> STRING .)
    GE              reduce using rule 128 (str -> STRING .)
    LT              reduce using rule 128 (str -> STRING .)
    GT              reduce using rule 128 (str -> STRING .)
    EQ              reduce using rule 128 (str -> STRING .)
    NE              reduce using rule 128 (str -> STRING .)
    error           reduce using rule 128 (str -> STRING .)
    LAND            reduce using rule 128 (str -> STRING .)
    LOR             reduce using rule 128 (str -> STRING .)
    BAND            reduce using rule 128 (str -> STRING .)
    BOR             reduce using rule 128 (str -> STRING .)
    RPAREN          reduce using rule 128 (str -> STRING .)
    COMMA           reduce using rule 128 (str -> STRING .)
    RBRACKET        reduce using rule 128 (str -> STRING .)
    RBRACE          reduce using rule 128 (str -> STRING .)


state 39

    (129) void -> VOID .

    SEMI            reduce using rule 129 (void -> VOID .)
    PLUS            reduce using rule 129 (void -> VOID .)
    MINUS           reduce using rule 129 (void -> VOID .)
    MUL             reduce using rule 129 (void -> VOID .)
    DIVIDE          reduce using rule 129 (void -> VOID .)
    INTDIVIDE       reduce using rule 129 (void -> VOID .)
    MODULO          reduce using rule 129 (void -> VOID .)
    POW             reduce using rule 129 (void -> VOID .)
    LE              reduce using rule 129 (void -> VOID .)
    GE              reduce using rule 129 (void -> VOID .)
    LT              reduce using rule 129 (void -> VOID .)
    GT              reduce using rule 129 (void -> VOID .)
    EQ              reduce using rule 129 (void -> VOID .)
    NE              reduce using rule 129 (void -> VOID .)
    error           reduce using rule 129 (void -> VOID .)
    LAND            reduce using rule 129 (void -> VOID .)
    LOR             reduce using rule 129 (void -> VOID .)
    BAND            reduce using rule 129 (void -> VOID .)
    BOR             reduce using rule 129 (void -> VOID .)
    RPAREN          reduce using rule 129 (void -> VOID .)
    COMMA           reduce using rule 129 (void -> VOID .)
    RBRACKET        reduce using rule 129 (void -> VOID .)
    RBRACE          reduce using rule 129 (void -> VOID .)


state 40

    (141) datatype -> DATATYPE .

    error           reduce using rule 141 (datatype -> DATATYPE .)
    LBRACKET        reduce using rule 141 (datatype -> DATATYPE .)
    ID              reduce using rule 141 (datatype -> DATATYPE .)


state 41

    (13) scope -> scope statement .

    BREAK           reduce using rule 13 (scope -> scope statement .)
    CONTINUE        reduce using rule 13 (scope -> scope statement .)
    GOTO            reduce using rule 13 (scope -> scope statement .)
    MINUS           reduce using rule 13 (scope -> scope statement .)
    LNOT            reduce using rule 13 (scope -> scope statement .)
    NULL            reduce using rule 13 (scope -> scope statement .)
    LPAREN          reduce using rule 13 (scope -> scope statement .)
    ID              reduce using rule 13 (scope -> scope statement .)
    error           reduce using rule 13 (scope -> scope statement .)
    RETURN          reduce using rule 13 (scope -> scope statement .)
    FUNCTION        reduce using rule 13 (scope -> scope statement .)
    STRUCTURE       reduce using rule 13 (scope -> scope statement .)
    WHILE           reduce using rule 13 (scope -> scope statement .)
    DO              reduce using rule 13 (scope -> scope statement .)
    IF              reduce using rule 13 (scope -> scope statement .)
    INTEGER         reduce using rule 13 (scope -> scope statement .)
    DOUBLE          reduce using rule 13 (scope -> scope statement .)
    BOOL            reduce using rule 13 (scope -> scope statement .)
    STRING          reduce using rule 13 (scope -> scope statement .)
    VOID            reduce using rule 13 (scope -> scope statement .)
    DATATYPE        reduce using rule 13 (scope -> scope statement .)
    $end            reduce using rule 13 (scope -> scope statement .)
    RBRACE          reduce using rule 13 (scope -> scope statement .)


state 42

    (15) statement -> expr SEMI .

    BREAK           reduce using rule 15 (statement -> expr SEMI .)
    CONTINUE        reduce using rule 15 (statement -> expr SEMI .)
    GOTO            reduce using rule 15 (statement -> expr SEMI .)
    MINUS           reduce using rule 15 (statement -> expr SEMI .)
    LNOT            reduce using rule 15 (statement -> expr SEMI .)
    NULL            reduce using rule 15 (statement -> expr SEMI .)
    LPAREN          reduce using rule 15 (statement -> expr SEMI .)
    ID              reduce using rule 15 (statement -> expr SEMI .)
    error           reduce using rule 15 (statement -> expr SEMI .)
    RETURN          reduce using rule 15 (statement -> expr SEMI .)
    FUNCTION        reduce using rule 15 (statement -> expr SEMI .)
    STRUCTURE       reduce using rule 15 (statement -> expr SEMI .)
    WHILE           reduce using rule 15 (statement -> expr SEMI .)
    DO              reduce using rule 15 (statement -> expr SEMI .)
    IF              reduce using rule 15 (statement -> expr SEMI .)
    INTEGER         reduce using rule 15 (statement -> expr SEMI .)
    DOUBLE          reduce using rule 15 (statement -> expr SEMI .)
    BOOL            reduce using rule 15 (statement -> expr SEMI .)
    STRING          reduce using rule 15 (statement -> expr SEMI .)
    VOID            reduce using rule 15 (statement -> expr SEMI .)
    DATATYPE        reduce using rule 15 (statement -> expr SEMI .)
    $end            reduce using rule 15 (statement -> expr SEMI .)
    RBRACE          reduce using rule 15 (statement -> expr SEMI .)


state 43

    (97) expr -> expr PLUS . expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    expr                           shift and go to state 104
    id                             shift and go to state 76
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 44

    (98) expr -> expr MINUS . expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    expr                           shift and go to state 105
    id                             shift and go to state 76
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 45

    (99) expr -> expr MUL . expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    expr                           shift and go to state 106
    id                             shift and go to state 76
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 46

    (100) expr -> expr DIVIDE . expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    expr                           shift and go to state 107
    id                             shift and go to state 76
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 47

    (101) expr -> expr INTDIVIDE . expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    expr                           shift and go to state 108
    id                             shift and go to state 76
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 48

    (102) expr -> expr MODULO . expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    expr                           shift and go to state 109
    id                             shift and go to state 76
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 49

    (103) expr -> expr POW . expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    expr                           shift and go to state 110
    id                             shift and go to state 76
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 50

    (104) expr -> expr LE . expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    expr                           shift and go to state 111
    id                             shift and go to state 76
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 51

    (105) expr -> expr GE . expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    expr                           shift and go to state 112
    id                             shift and go to state 76
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 52

    (106) expr -> expr LT . expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    expr                           shift and go to state 113
    id                             shift and go to state 76
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 53

    (107) expr -> expr GT . expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    expr                           shift and go to state 114
    id                             shift and go to state 76
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 54

    (108) expr -> expr EQ . expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    expr                           shift and go to state 115
    id                             shift and go to state 76
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 55

    (109) expr -> expr NE . expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    expr                           shift and go to state 116
    id                             shift and go to state 76
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 56

    (110) expr -> expr error . expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    expr                           shift and go to state 117
    id                             shift and go to state 76
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 57

    (112) expr -> expr LAND . expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    expr                           shift and go to state 118
    id                             shift and go to state 76
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 58

    (113) expr -> expr LOR . expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    expr                           shift and go to state 119
    id                             shift and go to state 76
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 59

    (115) expr -> expr BAND . expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    expr                           shift and go to state 120
    id                             shift and go to state 76
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 60

    (116) expr -> expr BOR . expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    expr                           shift and go to state 121
    id                             shift and go to state 76
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 61

    (22) statement -> BREAK SEMI .

    BREAK           reduce using rule 22 (statement -> BREAK SEMI .)
    CONTINUE        reduce using rule 22 (statement -> BREAK SEMI .)
    GOTO            reduce using rule 22 (statement -> BREAK SEMI .)
    MINUS           reduce using rule 22 (statement -> BREAK SEMI .)
    LNOT            reduce using rule 22 (statement -> BREAK SEMI .)
    NULL            reduce using rule 22 (statement -> BREAK SEMI .)
    LPAREN          reduce using rule 22 (statement -> BREAK SEMI .)
    ID              reduce using rule 22 (statement -> BREAK SEMI .)
    error           reduce using rule 22 (statement -> BREAK SEMI .)
    RETURN          reduce using rule 22 (statement -> BREAK SEMI .)
    FUNCTION        reduce using rule 22 (statement -> BREAK SEMI .)
    STRUCTURE       reduce using rule 22 (statement -> BREAK SEMI .)
    WHILE           reduce using rule 22 (statement -> BREAK SEMI .)
    DO              reduce using rule 22 (statement -> BREAK SEMI .)
    IF              reduce using rule 22 (statement -> BREAK SEMI .)
    INTEGER         reduce using rule 22 (statement -> BREAK SEMI .)
    DOUBLE          reduce using rule 22 (statement -> BREAK SEMI .)
    BOOL            reduce using rule 22 (statement -> BREAK SEMI .)
    STRING          reduce using rule 22 (statement -> BREAK SEMI .)
    VOID            reduce using rule 22 (statement -> BREAK SEMI .)
    DATATYPE        reduce using rule 22 (statement -> BREAK SEMI .)
    $end            reduce using rule 22 (statement -> BREAK SEMI .)
    RBRACE          reduce using rule 22 (statement -> BREAK SEMI .)


state 62

    (23) statement -> CONTINUE SEMI .

    BREAK           reduce using rule 23 (statement -> CONTINUE SEMI .)
    CONTINUE        reduce using rule 23 (statement -> CONTINUE SEMI .)
    GOTO            reduce using rule 23 (statement -> CONTINUE SEMI .)
    MINUS           reduce using rule 23 (statement -> CONTINUE SEMI .)
    LNOT            reduce using rule 23 (statement -> CONTINUE SEMI .)
    NULL            reduce using rule 23 (statement -> CONTINUE SEMI .)
    LPAREN          reduce using rule 23 (statement -> CONTINUE SEMI .)
    ID              reduce using rule 23 (statement -> CONTINUE SEMI .)
    error           reduce using rule 23 (statement -> CONTINUE SEMI .)
    RETURN          reduce using rule 23 (statement -> CONTINUE SEMI .)
    FUNCTION        reduce using rule 23 (statement -> CONTINUE SEMI .)
    STRUCTURE       reduce using rule 23 (statement -> CONTINUE SEMI .)
    WHILE           reduce using rule 23 (statement -> CONTINUE SEMI .)
    DO              reduce using rule 23 (statement -> CONTINUE SEMI .)
    IF              reduce using rule 23 (statement -> CONTINUE SEMI .)
    INTEGER         reduce using rule 23 (statement -> CONTINUE SEMI .)
    DOUBLE          reduce using rule 23 (statement -> CONTINUE SEMI .)
    BOOL            reduce using rule 23 (statement -> CONTINUE SEMI .)
    STRING          reduce using rule 23 (statement -> CONTINUE SEMI .)
    VOID            reduce using rule 23 (statement -> CONTINUE SEMI .)
    DATATYPE        reduce using rule 23 (statement -> CONTINUE SEMI .)
    $end            reduce using rule 23 (statement -> CONTINUE SEMI .)
    RBRACE          reduce using rule 23 (statement -> CONTINUE SEMI .)


state 63

    (24) statement -> GOTO ID . SEMI

    SEMI            shift and go to state 122


state 64

    (142) id -> ID .

    LBRACKET        reduce using rule 142 (id -> ID .)
    SEMI            reduce using rule 142 (id -> ID .)
    EQUALS          reduce using rule 142 (id -> ID .)
    error           reduce using rule 142 (id -> ID .)
    LBRACE          reduce using rule 142 (id -> ID .)
    LPAREN          reduce using rule 142 (id -> ID .)
    PLUS            reduce using rule 142 (id -> ID .)
    MINUS           reduce using rule 142 (id -> ID .)
    MUL             reduce using rule 142 (id -> ID .)
    DIVIDE          reduce using rule 142 (id -> ID .)
    INTDIVIDE       reduce using rule 142 (id -> ID .)
    MODULO          reduce using rule 142 (id -> ID .)
    POW             reduce using rule 142 (id -> ID .)
    LE              reduce using rule 142 (id -> ID .)
    GE              reduce using rule 142 (id -> ID .)
    LT              reduce using rule 142 (id -> ID .)
    GT              reduce using rule 142 (id -> ID .)
    EQ              reduce using rule 142 (id -> ID .)
    NE              reduce using rule 142 (id -> ID .)
    LAND            reduce using rule 142 (id -> ID .)
    LOR             reduce using rule 142 (id -> ID .)
    BAND            reduce using rule 142 (id -> ID .)
    BOR             reduce using rule 142 (id -> ID .)
    RPAREN          reduce using rule 142 (id -> ID .)
    COMMA           reduce using rule 142 (id -> ID .)
    RBRACKET        reduce using rule 142 (id -> ID .)
    RBRACE          reduce using rule 142 (id -> ID .)


state 65

    (131) expr -> ID id . LBRACKET INTEGER RBRACKET
    (133) expr -> ID id . LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (64) var_declaration -> ID id . SEMI
    (65) var_declaration -> ID id . EQUALS LBRACE args RBRACE SEMI
    (66) var_declaration -> ID id . EQUALS expr SEMI
    (74) var_declaration -> ID id . error LBRACE args RBRACE SEMI
    (75) var_declaration -> ID id . EQUALS error args RBRACE SEMI
    (76) var_declaration -> ID id . EQUALS LBRACE error RBRACE SEMI
    (77) var_declaration -> ID id . EQUALS LBRACE args error SEMI
    (78) var_declaration -> ID id . EQUALS LBRACE args RBRACE error

    LBRACKET        shift and go to state 123
    SEMI            shift and go to state 125
    EQUALS          shift and go to state 124
    error           shift and go to state 126


state 66

    (84) assign -> ID EQUALS . error SEMI
    (85) assign -> ID EQUALS . expr error
    (87) assign -> ID EQUALS . error args RBRACE SEMI
    (88) assign -> ID EQUALS . LBRACE error RBRACE SEMI
    (89) assign -> ID EQUALS . LBRACE args error SEMI
    (90) assign -> ID EQUALS . LBRACE args RBRACE error
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    error           shift and go to state 127
    LBRACE          shift and go to state 129
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    expr                           shift and go to state 128
    id                             shift and go to state 76
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 67

    (73) var_declaration -> ID error . EQUALS LBRACE args RBRACE SEMI
    (83) assign -> ID error . expr SEMI
    (86) assign -> ID error . LBRACE args RBRACE SEMI
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    EQUALS          shift and go to state 130
    LBRACE          shift and go to state 131
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    expr                           shift and go to state 132
    id                             shift and go to state 76
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 68

    (91) assign -> ID DOT . ID error expr SEMI
    (92) assign -> ID DOT . ID EQUALS error SEMI
    (93) assign -> ID DOT . ID EQUALS expr error

    ID              shift and go to state 133


state 69

    (140) goto_mark -> ID COLON .

    BREAK           reduce using rule 140 (goto_mark -> ID COLON .)
    CONTINUE        reduce using rule 140 (goto_mark -> ID COLON .)
    GOTO            reduce using rule 140 (goto_mark -> ID COLON .)
    MINUS           reduce using rule 140 (goto_mark -> ID COLON .)
    LNOT            reduce using rule 140 (goto_mark -> ID COLON .)
    NULL            reduce using rule 140 (goto_mark -> ID COLON .)
    LPAREN          reduce using rule 140 (goto_mark -> ID COLON .)
    ID              reduce using rule 140 (goto_mark -> ID COLON .)
    error           reduce using rule 140 (goto_mark -> ID COLON .)
    RETURN          reduce using rule 140 (goto_mark -> ID COLON .)
    FUNCTION        reduce using rule 140 (goto_mark -> ID COLON .)
    STRUCTURE       reduce using rule 140 (goto_mark -> ID COLON .)
    WHILE           reduce using rule 140 (goto_mark -> ID COLON .)
    DO              reduce using rule 140 (goto_mark -> ID COLON .)
    IF              reduce using rule 140 (goto_mark -> ID COLON .)
    INTEGER         reduce using rule 140 (goto_mark -> ID COLON .)
    DOUBLE          reduce using rule 140 (goto_mark -> ID COLON .)
    BOOL            reduce using rule 140 (goto_mark -> ID COLON .)
    STRING          reduce using rule 140 (goto_mark -> ID COLON .)
    VOID            reduce using rule 140 (goto_mark -> ID COLON .)
    DATATYPE        reduce using rule 140 (goto_mark -> ID COLON .)
    $end            reduce using rule 140 (goto_mark -> ID COLON .)
    RBRACE          reduce using rule 140 (goto_mark -> ID COLON .)


state 70

    (55) expr -> id LPAREN . args RPAREN
    (57) expr -> id LPAREN . args error
    (58) args -> .
    (59) args -> . expr
    (60) args -> . args COMMA expr
    (61) args -> . args error expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

  ! shift/reduce conflict for error resolved as shift
    RPAREN          reduce using rule 58 (args -> .)
    COMMA           reduce using rule 58 (args -> .)
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

  ! error           [ reduce using rule 58 (args -> .) ]

    id                             shift and go to state 76
    args                           shift and go to state 134
    expr                           shift and go to state 135
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 71

    (56) expr -> id error . args RPAREN
    (58) args -> .
    (59) args -> . expr
    (60) args -> . args COMMA expr
    (61) args -> . args error expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

  ! shift/reduce conflict for error resolved as shift
    RPAREN          reduce using rule 58 (args -> .)
    COMMA           reduce using rule 58 (args -> .)
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

  ! error           [ reduce using rule 58 (args -> .) ]

    id                             shift and go to state 76
    args                           shift and go to state 136
    expr                           shift and go to state 135
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 72

    (138) expr -> id LBRACKET . expr RBRACKET
    (82) assign -> id LBRACKET . expr RBRACKET EQUALS expr SEMI
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    id                             shift and go to state 76
    expr                           shift and go to state 137
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 73

    (139) expr -> id DOT . ID
    (81) assign -> id DOT . ID EQUALS expr SEMI

    ID              shift and go to state 138


state 74

    (79) assign -> id EQUALS . expr SEMI
    (80) assign -> id EQUALS . LBRACE args RBRACE SEMI
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    LBRACE          shift and go to state 140
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    id                             shift and go to state 76
    expr                           shift and go to state 139
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 75

    (124) expr -> LPAREN expr . RPAREN
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

    RPAREN          shift and go to state 141
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MUL             shift and go to state 45
    DIVIDE          shift and go to state 46
    INTDIVIDE       shift and go to state 47
    MODULO          shift and go to state 48
    POW             shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    LT              shift and go to state 52
    GT              shift and go to state 53
    EQ              shift and go to state 54
    NE              shift and go to state 55
    error           shift and go to state 56
    LAND            shift and go to state 57
    LOR             shift and go to state 58
    BAND            shift and go to state 59
    BOR             shift and go to state 60


state 76

    (55) expr -> id . LPAREN args RPAREN
    (56) expr -> id . error args RPAREN
    (57) expr -> id . LPAREN args error
    (117) expr -> id .
    (138) expr -> id . LBRACKET expr RBRACKET
    (139) expr -> id . DOT ID

  ! shift/reduce conflict for error resolved as shift
    LPAREN          shift and go to state 70
    error           shift and go to state 71
    RPAREN          reduce using rule 117 (expr -> id .)
    PLUS            reduce using rule 117 (expr -> id .)
    MINUS           reduce using rule 117 (expr -> id .)
    MUL             reduce using rule 117 (expr -> id .)
    DIVIDE          reduce using rule 117 (expr -> id .)
    INTDIVIDE       reduce using rule 117 (expr -> id .)
    MODULO          reduce using rule 117 (expr -> id .)
    POW             reduce using rule 117 (expr -> id .)
    LE              reduce using rule 117 (expr -> id .)
    GE              reduce using rule 117 (expr -> id .)
    LT              reduce using rule 117 (expr -> id .)
    GT              reduce using rule 117 (expr -> id .)
    EQ              reduce using rule 117 (expr -> id .)
    NE              reduce using rule 117 (expr -> id .)
    LAND            reduce using rule 117 (expr -> id .)
    LOR             reduce using rule 117 (expr -> id .)
    BAND            reduce using rule 117 (expr -> id .)
    BOR             reduce using rule 117 (expr -> id .)
    SEMI            reduce using rule 117 (expr -> id .)
    COMMA           reduce using rule 117 (expr -> id .)
    RBRACKET        reduce using rule 117 (expr -> id .)
    RBRACE          reduce using rule 117 (expr -> id .)
    LBRACKET        shift and go to state 142
    DOT             shift and go to state 143

  ! error           [ reduce using rule 117 (expr -> id .) ]


state 77

    (137) expr -> error . LBRACKET RBRACKET id

    LBRACKET        shift and go to state 81


state 78

    (130) expr -> datatype . id LBRACKET INTEGER RBRACKET
    (132) expr -> datatype . id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> datatype . error RBRACKET id
    (135) expr -> datatype . LBRACKET error id
    (136) expr -> datatype . LBRACKET RBRACKET error
    (142) id -> . ID

    error           shift and go to state 145
    LBRACKET        shift and go to state 88
    ID              shift and go to state 64

    id                             shift and go to state 144

state 79

    (131) expr -> ID . id LBRACKET INTEGER RBRACKET
    (133) expr -> ID . id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (142) id -> ID .
    (142) id -> . ID

    LPAREN          reduce using rule 142 (id -> ID .)
    error           reduce using rule 142 (id -> ID .)
    LBRACKET        reduce using rule 142 (id -> ID .)
    DOT             reduce using rule 142 (id -> ID .)
    RPAREN          reduce using rule 142 (id -> ID .)
    PLUS            reduce using rule 142 (id -> ID .)
    MINUS           reduce using rule 142 (id -> ID .)
    MUL             reduce using rule 142 (id -> ID .)
    DIVIDE          reduce using rule 142 (id -> ID .)
    INTDIVIDE       reduce using rule 142 (id -> ID .)
    MODULO          reduce using rule 142 (id -> ID .)
    POW             reduce using rule 142 (id -> ID .)
    LE              reduce using rule 142 (id -> ID .)
    GE              reduce using rule 142 (id -> ID .)
    LT              reduce using rule 142 (id -> ID .)
    GT              reduce using rule 142 (id -> ID .)
    EQ              reduce using rule 142 (id -> ID .)
    NE              reduce using rule 142 (id -> ID .)
    LAND            reduce using rule 142 (id -> ID .)
    LOR             reduce using rule 142 (id -> ID .)
    BAND            reduce using rule 142 (id -> ID .)
    BOR             reduce using rule 142 (id -> ID .)
    SEMI            reduce using rule 142 (id -> ID .)
    COMMA           reduce using rule 142 (id -> ID .)
    RBRACKET        reduce using rule 142 (id -> ID .)
    RBRACE          reduce using rule 142 (id -> ID .)
    ID              shift and go to state 64

    id                             shift and go to state 146

state 80

    (4) body_block -> error . scope RBRACE
    (13) scope -> . scope statement
    (14) scope -> . statement
    (15) statement -> . expr SEMI
    (16) statement -> . var_declaration
    (17) statement -> . return
    (18) statement -> . assign
    (19) statement -> . func_declaration
    (20) statement -> . struct_declaration
    (21) statement -> . while
    (22) statement -> . BREAK SEMI
    (23) statement -> . CONTINUE SEMI
    (24) statement -> . GOTO ID SEMI
    (25) statement -> . goto_mark
    (26) statement -> . if-else
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (62) var_declaration -> . datatype id EQUALS expr SEMI
    (63) var_declaration -> . datatype id SEMI
    (64) var_declaration -> . ID id SEMI
    (65) var_declaration -> . ID id EQUALS LBRACE args RBRACE SEMI
    (66) var_declaration -> . ID id EQUALS expr SEMI
    (67) var_declaration -> . datatype error EQUALS expr SEMI
    (68) var_declaration -> . datatype id error expr SEMI
    (69) var_declaration -> . datatype id EQUALS expr error
    (70) var_declaration -> . datatype id EQUALS error SEMI
    (71) var_declaration -> . datatype error SEMI
    (72) var_declaration -> . datatype id error
    (73) var_declaration -> . ID error EQUALS LBRACE args RBRACE SEMI
    (74) var_declaration -> . ID id error LBRACE args RBRACE SEMI
    (75) var_declaration -> . ID id EQUALS error args RBRACE SEMI
    (76) var_declaration -> . ID id EQUALS LBRACE error RBRACE SEMI
    (77) var_declaration -> . ID id EQUALS LBRACE args error SEMI
    (78) var_declaration -> . ID id EQUALS LBRACE args RBRACE error
    (94) return -> . RETURN expr SEMI
    (95) return -> . RETURN SEMI
    (96) return -> . RETURN error
    (79) assign -> . id EQUALS expr SEMI
    (80) assign -> . id EQUALS LBRACE args RBRACE SEMI
    (81) assign -> . id DOT ID EQUALS expr SEMI
    (82) assign -> . id LBRACKET expr RBRACKET EQUALS expr SEMI
    (83) assign -> . ID error expr SEMI
    (84) assign -> . ID EQUALS error SEMI
    (85) assign -> . ID EQUALS expr error
    (86) assign -> . ID error LBRACE args RBRACE SEMI
    (87) assign -> . ID EQUALS error args RBRACE SEMI
    (88) assign -> . ID EQUALS LBRACE error RBRACE SEMI
    (89) assign -> . ID EQUALS LBRACE args error SEMI
    (90) assign -> . ID EQUALS LBRACE args RBRACE error
    (91) assign -> . ID DOT ID error expr SEMI
    (92) assign -> . ID DOT ID EQUALS error SEMI
    (93) assign -> . ID DOT ID EQUALS expr error
    (7) func_declaration -> . FUNCTION datatype id LPAREN params RPAREN basic_block
    (8) func_declaration -> . error datatype id LPAREN params RPAREN body_block
    (9) func_declaration -> . FUNCTION error id LPAREN params RPAREN body_block
    (10) func_declaration -> . FUNCTION datatype error LPAREN params RPAREN body_block
    (11) func_declaration -> . FUNCTION datatype id error params RPAREN body_block
    (12) func_declaration -> . FUNCTION datatype id LPAREN params error body_block
    (38) struct_declaration -> . STRUCTURE id LBRACE struct_params RBRACE
    (39) struct_declaration -> . STRUCTURE error LBRACE struct_params RBRACE
    (40) struct_declaration -> . STRUCTURE id error struct_params RBRACE
    (41) struct_declaration -> . STRUCTURE id LBRACE struct_params error
    (27) while -> . WHILE conditional basic_block
    (28) while -> . DO basic_block WHILE conditional SEMI
    (29) while -> . error body_block WHILE conditional SEMI
    (30) while -> . DO body_block error conditional SEMI
    (31) while -> . DO body_block WHILE conditional error
    (140) goto_mark -> . ID COLON
    (32) if-else -> . IF conditional basic_block
    (33) if-else -> . IF conditional basic_block ELSE basic_block
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    GOTO            shift and go to state 13
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 14
    error           shift and go to state 19
    RETURN          shift and go to state 30
    FUNCTION        shift and go to state 31
    STRUCTURE       shift and go to state 32
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    scope                          shift and go to state 147
    statement                      shift and go to state 3
    expr                           shift and go to state 4
    var_declaration                shift and go to state 5
    return                         shift and go to state 6
    assign                         shift and go to state 7
    func_declaration               shift and go to state 8
    struct_declaration             shift and go to state 9
    while                          shift and go to state 10
    goto_mark                      shift and go to state 15
    if-else                        shift and go to state 16
    id                             shift and go to state 17
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 28

state 81

    (137) expr -> error LBRACKET . RBRACKET id

    RBRACKET        shift and go to state 148


state 82

    (8) func_declaration -> error datatype . id LPAREN params RPAREN body_block
    (142) id -> . ID

    ID              shift and go to state 64

    id                             shift and go to state 149

state 83

    (29) while -> error body_block . WHILE conditional SEMI

    WHILE           shift and go to state 150


state 84

    (5) body_block -> LBRACE . error RBRACE
    (6) body_block -> LBRACE . scope error
    (13) scope -> . scope statement
    (14) scope -> . statement
    (15) statement -> . expr SEMI
    (16) statement -> . var_declaration
    (17) statement -> . return
    (18) statement -> . assign
    (19) statement -> . func_declaration
    (20) statement -> . struct_declaration
    (21) statement -> . while
    (22) statement -> . BREAK SEMI
    (23) statement -> . CONTINUE SEMI
    (24) statement -> . GOTO ID SEMI
    (25) statement -> . goto_mark
    (26) statement -> . if-else
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (62) var_declaration -> . datatype id EQUALS expr SEMI
    (63) var_declaration -> . datatype id SEMI
    (64) var_declaration -> . ID id SEMI
    (65) var_declaration -> . ID id EQUALS LBRACE args RBRACE SEMI
    (66) var_declaration -> . ID id EQUALS expr SEMI
    (67) var_declaration -> . datatype error EQUALS expr SEMI
    (68) var_declaration -> . datatype id error expr SEMI
    (69) var_declaration -> . datatype id EQUALS expr error
    (70) var_declaration -> . datatype id EQUALS error SEMI
    (71) var_declaration -> . datatype error SEMI
    (72) var_declaration -> . datatype id error
    (73) var_declaration -> . ID error EQUALS LBRACE args RBRACE SEMI
    (74) var_declaration -> . ID id error LBRACE args RBRACE SEMI
    (75) var_declaration -> . ID id EQUALS error args RBRACE SEMI
    (76) var_declaration -> . ID id EQUALS LBRACE error RBRACE SEMI
    (77) var_declaration -> . ID id EQUALS LBRACE args error SEMI
    (78) var_declaration -> . ID id EQUALS LBRACE args RBRACE error
    (94) return -> . RETURN expr SEMI
    (95) return -> . RETURN SEMI
    (96) return -> . RETURN error
    (79) assign -> . id EQUALS expr SEMI
    (80) assign -> . id EQUALS LBRACE args RBRACE SEMI
    (81) assign -> . id DOT ID EQUALS expr SEMI
    (82) assign -> . id LBRACKET expr RBRACKET EQUALS expr SEMI
    (83) assign -> . ID error expr SEMI
    (84) assign -> . ID EQUALS error SEMI
    (85) assign -> . ID EQUALS expr error
    (86) assign -> . ID error LBRACE args RBRACE SEMI
    (87) assign -> . ID EQUALS error args RBRACE SEMI
    (88) assign -> . ID EQUALS LBRACE error RBRACE SEMI
    (89) assign -> . ID EQUALS LBRACE args error SEMI
    (90) assign -> . ID EQUALS LBRACE args RBRACE error
    (91) assign -> . ID DOT ID error expr SEMI
    (92) assign -> . ID DOT ID EQUALS error SEMI
    (93) assign -> . ID DOT ID EQUALS expr error
    (7) func_declaration -> . FUNCTION datatype id LPAREN params RPAREN basic_block
    (8) func_declaration -> . error datatype id LPAREN params RPAREN body_block
    (9) func_declaration -> . FUNCTION error id LPAREN params RPAREN body_block
    (10) func_declaration -> . FUNCTION datatype error LPAREN params RPAREN body_block
    (11) func_declaration -> . FUNCTION datatype id error params RPAREN body_block
    (12) func_declaration -> . FUNCTION datatype id LPAREN params error body_block
    (38) struct_declaration -> . STRUCTURE id LBRACE struct_params RBRACE
    (39) struct_declaration -> . STRUCTURE error LBRACE struct_params RBRACE
    (40) struct_declaration -> . STRUCTURE id error struct_params RBRACE
    (41) struct_declaration -> . STRUCTURE id LBRACE struct_params error
    (27) while -> . WHILE conditional basic_block
    (28) while -> . DO basic_block WHILE conditional SEMI
    (29) while -> . error body_block WHILE conditional SEMI
    (30) while -> . DO body_block error conditional SEMI
    (31) while -> . DO body_block WHILE conditional error
    (140) goto_mark -> . ID COLON
    (32) if-else -> . IF conditional basic_block
    (33) if-else -> . IF conditional basic_block ELSE basic_block
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    error           shift and go to state 151
    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    GOTO            shift and go to state 13
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 14
    RETURN          shift and go to state 30
    FUNCTION        shift and go to state 31
    STRUCTURE       shift and go to state 32
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    scope                          shift and go to state 152
    statement                      shift and go to state 3
    expr                           shift and go to state 4
    var_declaration                shift and go to state 5
    return                         shift and go to state 6
    assign                         shift and go to state 7
    func_declaration               shift and go to state 8
    struct_declaration             shift and go to state 9
    while                          shift and go to state 10
    goto_mark                      shift and go to state 15
    if-else                        shift and go to state 16
    id                             shift and go to state 17
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 28

state 85

    (111) expr -> MINUS expr .
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

    SEMI            reduce using rule 111 (expr -> MINUS expr .)
    PLUS            reduce using rule 111 (expr -> MINUS expr .)
    MINUS           reduce using rule 111 (expr -> MINUS expr .)
    MUL             reduce using rule 111 (expr -> MINUS expr .)
    DIVIDE          reduce using rule 111 (expr -> MINUS expr .)
    INTDIVIDE       reduce using rule 111 (expr -> MINUS expr .)
    MODULO          reduce using rule 111 (expr -> MINUS expr .)
    POW             reduce using rule 111 (expr -> MINUS expr .)
    LE              reduce using rule 111 (expr -> MINUS expr .)
    GE              reduce using rule 111 (expr -> MINUS expr .)
    LT              reduce using rule 111 (expr -> MINUS expr .)
    GT              reduce using rule 111 (expr -> MINUS expr .)
    EQ              reduce using rule 111 (expr -> MINUS expr .)
    NE              reduce using rule 111 (expr -> MINUS expr .)
    error           reduce using rule 111 (expr -> MINUS expr .)
    LAND            reduce using rule 111 (expr -> MINUS expr .)
    LOR             reduce using rule 111 (expr -> MINUS expr .)
    BAND            reduce using rule 111 (expr -> MINUS expr .)
    BOR             reduce using rule 111 (expr -> MINUS expr .)
    RPAREN          reduce using rule 111 (expr -> MINUS expr .)
    COMMA           reduce using rule 111 (expr -> MINUS expr .)
    RBRACKET        reduce using rule 111 (expr -> MINUS expr .)
    RBRACE          reduce using rule 111 (expr -> MINUS expr .)

  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! MUL             [ shift and go to state 45 ]
  ! DIVIDE          [ shift and go to state 46 ]
  ! INTDIVIDE       [ shift and go to state 47 ]
  ! MODULO          [ shift and go to state 48 ]
  ! POW             [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! GE              [ shift and go to state 51 ]
  ! LT              [ shift and go to state 52 ]
  ! GT              [ shift and go to state 53 ]
  ! EQ              [ shift and go to state 54 ]
  ! NE              [ shift and go to state 55 ]
  ! error           [ shift and go to state 56 ]
  ! LAND            [ shift and go to state 57 ]
  ! LOR             [ shift and go to state 58 ]
  ! BAND            [ shift and go to state 59 ]
  ! BOR             [ shift and go to state 60 ]


state 86

    (114) expr -> LNOT expr .
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

    SEMI            reduce using rule 114 (expr -> LNOT expr .)
    PLUS            reduce using rule 114 (expr -> LNOT expr .)
    MINUS           reduce using rule 114 (expr -> LNOT expr .)
    MUL             reduce using rule 114 (expr -> LNOT expr .)
    DIVIDE          reduce using rule 114 (expr -> LNOT expr .)
    INTDIVIDE       reduce using rule 114 (expr -> LNOT expr .)
    MODULO          reduce using rule 114 (expr -> LNOT expr .)
    POW             reduce using rule 114 (expr -> LNOT expr .)
    LE              reduce using rule 114 (expr -> LNOT expr .)
    GE              reduce using rule 114 (expr -> LNOT expr .)
    LT              reduce using rule 114 (expr -> LNOT expr .)
    GT              reduce using rule 114 (expr -> LNOT expr .)
    EQ              reduce using rule 114 (expr -> LNOT expr .)
    NE              reduce using rule 114 (expr -> LNOT expr .)
    error           reduce using rule 114 (expr -> LNOT expr .)
    LAND            reduce using rule 114 (expr -> LNOT expr .)
    LOR             reduce using rule 114 (expr -> LNOT expr .)
    BAND            reduce using rule 114 (expr -> LNOT expr .)
    BOR             reduce using rule 114 (expr -> LNOT expr .)
    RPAREN          reduce using rule 114 (expr -> LNOT expr .)
    COMMA           reduce using rule 114 (expr -> LNOT expr .)
    RBRACKET        reduce using rule 114 (expr -> LNOT expr .)
    RBRACE          reduce using rule 114 (expr -> LNOT expr .)

  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! MUL             [ shift and go to state 45 ]
  ! DIVIDE          [ shift and go to state 46 ]
  ! INTDIVIDE       [ shift and go to state 47 ]
  ! MODULO          [ shift and go to state 48 ]
  ! POW             [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! GE              [ shift and go to state 51 ]
  ! LT              [ shift and go to state 52 ]
  ! GT              [ shift and go to state 53 ]
  ! EQ              [ shift and go to state 54 ]
  ! NE              [ shift and go to state 55 ]
  ! error           [ shift and go to state 56 ]
  ! LAND            [ shift and go to state 57 ]
  ! LOR             [ shift and go to state 58 ]
  ! BAND            [ shift and go to state 59 ]
  ! BOR             [ shift and go to state 60 ]


state 87

    (130) expr -> datatype id . LBRACKET INTEGER RBRACKET
    (132) expr -> datatype id . LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (62) var_declaration -> datatype id . EQUALS expr SEMI
    (63) var_declaration -> datatype id . SEMI
    (68) var_declaration -> datatype id . error expr SEMI
    (69) var_declaration -> datatype id . EQUALS expr error
    (70) var_declaration -> datatype id . EQUALS error SEMI
    (72) var_declaration -> datatype id . error

    LBRACKET        shift and go to state 153
    EQUALS          shift and go to state 154
    SEMI            shift and go to state 155
    error           shift and go to state 156


state 88

    (135) expr -> datatype LBRACKET . error id
    (136) expr -> datatype LBRACKET . RBRACKET error

    error           shift and go to state 157
    RBRACKET        shift and go to state 158


state 89

    (134) expr -> datatype error . RBRACKET id
    (67) var_declaration -> datatype error . EQUALS expr SEMI
    (71) var_declaration -> datatype error . SEMI

    RBRACKET        shift and go to state 159
    EQUALS          shift and go to state 160
    SEMI            shift and go to state 161


state 90

    (94) return -> RETURN expr . SEMI
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

    SEMI            shift and go to state 162
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MUL             shift and go to state 45
    DIVIDE          shift and go to state 46
    INTDIVIDE       shift and go to state 47
    MODULO          shift and go to state 48
    POW             shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    LT              shift and go to state 52
    GT              shift and go to state 53
    EQ              shift and go to state 54
    NE              shift and go to state 55
    error           shift and go to state 56
    LAND            shift and go to state 57
    LOR             shift and go to state 58
    BAND            shift and go to state 59
    BOR             shift and go to state 60


state 91

    (95) return -> RETURN SEMI .

    BREAK           reduce using rule 95 (return -> RETURN SEMI .)
    CONTINUE        reduce using rule 95 (return -> RETURN SEMI .)
    GOTO            reduce using rule 95 (return -> RETURN SEMI .)
    MINUS           reduce using rule 95 (return -> RETURN SEMI .)
    LNOT            reduce using rule 95 (return -> RETURN SEMI .)
    NULL            reduce using rule 95 (return -> RETURN SEMI .)
    LPAREN          reduce using rule 95 (return -> RETURN SEMI .)
    ID              reduce using rule 95 (return -> RETURN SEMI .)
    error           reduce using rule 95 (return -> RETURN SEMI .)
    RETURN          reduce using rule 95 (return -> RETURN SEMI .)
    FUNCTION        reduce using rule 95 (return -> RETURN SEMI .)
    STRUCTURE       reduce using rule 95 (return -> RETURN SEMI .)
    WHILE           reduce using rule 95 (return -> RETURN SEMI .)
    DO              reduce using rule 95 (return -> RETURN SEMI .)
    IF              reduce using rule 95 (return -> RETURN SEMI .)
    INTEGER         reduce using rule 95 (return -> RETURN SEMI .)
    DOUBLE          reduce using rule 95 (return -> RETURN SEMI .)
    BOOL            reduce using rule 95 (return -> RETURN SEMI .)
    STRING          reduce using rule 95 (return -> RETURN SEMI .)
    VOID            reduce using rule 95 (return -> RETURN SEMI .)
    DATATYPE        reduce using rule 95 (return -> RETURN SEMI .)
    $end            reduce using rule 95 (return -> RETURN SEMI .)
    RBRACE          reduce using rule 95 (return -> RETURN SEMI .)


state 92

    (96) return -> RETURN error .
    (137) expr -> error . LBRACKET RBRACKET id

    BREAK           reduce using rule 96 (return -> RETURN error .)
    CONTINUE        reduce using rule 96 (return -> RETURN error .)
    GOTO            reduce using rule 96 (return -> RETURN error .)
    MINUS           reduce using rule 96 (return -> RETURN error .)
    LNOT            reduce using rule 96 (return -> RETURN error .)
    NULL            reduce using rule 96 (return -> RETURN error .)
    LPAREN          reduce using rule 96 (return -> RETURN error .)
    ID              reduce using rule 96 (return -> RETURN error .)
    error           reduce using rule 96 (return -> RETURN error .)
    RETURN          reduce using rule 96 (return -> RETURN error .)
    FUNCTION        reduce using rule 96 (return -> RETURN error .)
    STRUCTURE       reduce using rule 96 (return -> RETURN error .)
    WHILE           reduce using rule 96 (return -> RETURN error .)
    DO              reduce using rule 96 (return -> RETURN error .)
    IF              reduce using rule 96 (return -> RETURN error .)
    INTEGER         reduce using rule 96 (return -> RETURN error .)
    DOUBLE          reduce using rule 96 (return -> RETURN error .)
    BOOL            reduce using rule 96 (return -> RETURN error .)
    STRING          reduce using rule 96 (return -> RETURN error .)
    VOID            reduce using rule 96 (return -> RETURN error .)
    DATATYPE        reduce using rule 96 (return -> RETURN error .)
    $end            reduce using rule 96 (return -> RETURN error .)
    RBRACE          reduce using rule 96 (return -> RETURN error .)
    LBRACKET        shift and go to state 81


state 93

    (7) func_declaration -> FUNCTION datatype . id LPAREN params RPAREN basic_block
    (10) func_declaration -> FUNCTION datatype . error LPAREN params RPAREN body_block
    (11) func_declaration -> FUNCTION datatype . id error params RPAREN body_block
    (12) func_declaration -> FUNCTION datatype . id LPAREN params error body_block
    (142) id -> . ID

    error           shift and go to state 164
    ID              shift and go to state 64

    id                             shift and go to state 163

state 94

    (9) func_declaration -> FUNCTION error . id LPAREN params RPAREN body_block
    (142) id -> . ID

    ID              shift and go to state 64

    id                             shift and go to state 165

state 95

    (38) struct_declaration -> STRUCTURE id . LBRACE struct_params RBRACE
    (40) struct_declaration -> STRUCTURE id . error struct_params RBRACE
    (41) struct_declaration -> STRUCTURE id . LBRACE struct_params error

    LBRACE          shift and go to state 166
    error           shift and go to state 167


state 96

    (39) struct_declaration -> STRUCTURE error . LBRACE struct_params RBRACE

    LBRACE          shift and go to state 168


state 97

    (27) while -> WHILE conditional . basic_block
    (3) basic_block -> . LBRACE scope RBRACE

    LBRACE          shift and go to state 170

    basic_block                    shift and go to state 169

state 98

    (34) conditional -> LPAREN . expr RPAREN
    (36) conditional -> LPAREN . error RPAREN
    (37) conditional -> LPAREN . expr error
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    error           shift and go to state 172
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    expr                           shift and go to state 171
    id                             shift and go to state 76
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 99

    (35) conditional -> error . expr RPAREN
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    expr                           shift and go to state 173
    id                             shift and go to state 76
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 100

    (28) while -> DO basic_block . WHILE conditional SEMI

    WHILE           shift and go to state 174


state 101

    (30) while -> DO body_block . error conditional SEMI
    (31) while -> DO body_block . WHILE conditional error

    error           shift and go to state 175
    WHILE           shift and go to state 176


state 102

    (3) basic_block -> LBRACE . scope RBRACE
    (5) body_block -> LBRACE . error RBRACE
    (6) body_block -> LBRACE . scope error
    (13) scope -> . scope statement
    (14) scope -> . statement
    (15) statement -> . expr SEMI
    (16) statement -> . var_declaration
    (17) statement -> . return
    (18) statement -> . assign
    (19) statement -> . func_declaration
    (20) statement -> . struct_declaration
    (21) statement -> . while
    (22) statement -> . BREAK SEMI
    (23) statement -> . CONTINUE SEMI
    (24) statement -> . GOTO ID SEMI
    (25) statement -> . goto_mark
    (26) statement -> . if-else
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (62) var_declaration -> . datatype id EQUALS expr SEMI
    (63) var_declaration -> . datatype id SEMI
    (64) var_declaration -> . ID id SEMI
    (65) var_declaration -> . ID id EQUALS LBRACE args RBRACE SEMI
    (66) var_declaration -> . ID id EQUALS expr SEMI
    (67) var_declaration -> . datatype error EQUALS expr SEMI
    (68) var_declaration -> . datatype id error expr SEMI
    (69) var_declaration -> . datatype id EQUALS expr error
    (70) var_declaration -> . datatype id EQUALS error SEMI
    (71) var_declaration -> . datatype error SEMI
    (72) var_declaration -> . datatype id error
    (73) var_declaration -> . ID error EQUALS LBRACE args RBRACE SEMI
    (74) var_declaration -> . ID id error LBRACE args RBRACE SEMI
    (75) var_declaration -> . ID id EQUALS error args RBRACE SEMI
    (76) var_declaration -> . ID id EQUALS LBRACE error RBRACE SEMI
    (77) var_declaration -> . ID id EQUALS LBRACE args error SEMI
    (78) var_declaration -> . ID id EQUALS LBRACE args RBRACE error
    (94) return -> . RETURN expr SEMI
    (95) return -> . RETURN SEMI
    (96) return -> . RETURN error
    (79) assign -> . id EQUALS expr SEMI
    (80) assign -> . id EQUALS LBRACE args RBRACE SEMI
    (81) assign -> . id DOT ID EQUALS expr SEMI
    (82) assign -> . id LBRACKET expr RBRACKET EQUALS expr SEMI
    (83) assign -> . ID error expr SEMI
    (84) assign -> . ID EQUALS error SEMI
    (85) assign -> . ID EQUALS expr error
    (86) assign -> . ID error LBRACE args RBRACE SEMI
    (87) assign -> . ID EQUALS error args RBRACE SEMI
    (88) assign -> . ID EQUALS LBRACE error RBRACE SEMI
    (89) assign -> . ID EQUALS LBRACE args error SEMI
    (90) assign -> . ID EQUALS LBRACE args RBRACE error
    (91) assign -> . ID DOT ID error expr SEMI
    (92) assign -> . ID DOT ID EQUALS error SEMI
    (93) assign -> . ID DOT ID EQUALS expr error
    (7) func_declaration -> . FUNCTION datatype id LPAREN params RPAREN basic_block
    (8) func_declaration -> . error datatype id LPAREN params RPAREN body_block
    (9) func_declaration -> . FUNCTION error id LPAREN params RPAREN body_block
    (10) func_declaration -> . FUNCTION datatype error LPAREN params RPAREN body_block
    (11) func_declaration -> . FUNCTION datatype id error params RPAREN body_block
    (12) func_declaration -> . FUNCTION datatype id LPAREN params error body_block
    (38) struct_declaration -> . STRUCTURE id LBRACE struct_params RBRACE
    (39) struct_declaration -> . STRUCTURE error LBRACE struct_params RBRACE
    (40) struct_declaration -> . STRUCTURE id error struct_params RBRACE
    (41) struct_declaration -> . STRUCTURE id LBRACE struct_params error
    (27) while -> . WHILE conditional basic_block
    (28) while -> . DO basic_block WHILE conditional SEMI
    (29) while -> . error body_block WHILE conditional SEMI
    (30) while -> . DO body_block error conditional SEMI
    (31) while -> . DO body_block WHILE conditional error
    (140) goto_mark -> . ID COLON
    (32) if-else -> . IF conditional basic_block
    (33) if-else -> . IF conditional basic_block ELSE basic_block
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    error           shift and go to state 151
    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    GOTO            shift and go to state 13
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 14
    RETURN          shift and go to state 30
    FUNCTION        shift and go to state 31
    STRUCTURE       shift and go to state 32
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    scope                          shift and go to state 177
    statement                      shift and go to state 3
    expr                           shift and go to state 4
    var_declaration                shift and go to state 5
    return                         shift and go to state 6
    assign                         shift and go to state 7
    func_declaration               shift and go to state 8
    struct_declaration             shift and go to state 9
    while                          shift and go to state 10
    goto_mark                      shift and go to state 15
    if-else                        shift and go to state 16
    id                             shift and go to state 17
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 28

state 103

    (32) if-else -> IF conditional . basic_block
    (33) if-else -> IF conditional . basic_block ELSE basic_block
    (3) basic_block -> . LBRACE scope RBRACE

    LBRACE          shift and go to state 170

    basic_block                    shift and go to state 178

state 104

    (97) expr -> expr PLUS expr .
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

    SEMI            reduce using rule 97 (expr -> expr PLUS expr .)
    PLUS            reduce using rule 97 (expr -> expr PLUS expr .)
    MINUS           reduce using rule 97 (expr -> expr PLUS expr .)
    LE              reduce using rule 97 (expr -> expr PLUS expr .)
    GE              reduce using rule 97 (expr -> expr PLUS expr .)
    LT              reduce using rule 97 (expr -> expr PLUS expr .)
    GT              reduce using rule 97 (expr -> expr PLUS expr .)
    EQ              reduce using rule 97 (expr -> expr PLUS expr .)
    NE              reduce using rule 97 (expr -> expr PLUS expr .)
    error           reduce using rule 97 (expr -> expr PLUS expr .)
    LAND            reduce using rule 97 (expr -> expr PLUS expr .)
    LOR             reduce using rule 97 (expr -> expr PLUS expr .)
    BAND            reduce using rule 97 (expr -> expr PLUS expr .)
    BOR             reduce using rule 97 (expr -> expr PLUS expr .)
    RPAREN          reduce using rule 97 (expr -> expr PLUS expr .)
    COMMA           reduce using rule 97 (expr -> expr PLUS expr .)
    RBRACKET        reduce using rule 97 (expr -> expr PLUS expr .)
    RBRACE          reduce using rule 97 (expr -> expr PLUS expr .)
    MUL             shift and go to state 45
    DIVIDE          shift and go to state 46
    INTDIVIDE       shift and go to state 47
    MODULO          shift and go to state 48
    POW             shift and go to state 49

  ! MUL             [ reduce using rule 97 (expr -> expr PLUS expr .) ]
  ! DIVIDE          [ reduce using rule 97 (expr -> expr PLUS expr .) ]
  ! INTDIVIDE       [ reduce using rule 97 (expr -> expr PLUS expr .) ]
  ! MODULO          [ reduce using rule 97 (expr -> expr PLUS expr .) ]
  ! POW             [ reduce using rule 97 (expr -> expr PLUS expr .) ]
  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! LE              [ shift and go to state 50 ]
  ! GE              [ shift and go to state 51 ]
  ! LT              [ shift and go to state 52 ]
  ! GT              [ shift and go to state 53 ]
  ! EQ              [ shift and go to state 54 ]
  ! NE              [ shift and go to state 55 ]
  ! error           [ shift and go to state 56 ]
  ! LAND            [ shift and go to state 57 ]
  ! LOR             [ shift and go to state 58 ]
  ! BAND            [ shift and go to state 59 ]
  ! BOR             [ shift and go to state 60 ]


state 105

    (98) expr -> expr MINUS expr .
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

    SEMI            reduce using rule 98 (expr -> expr MINUS expr .)
    PLUS            reduce using rule 98 (expr -> expr MINUS expr .)
    MINUS           reduce using rule 98 (expr -> expr MINUS expr .)
    LE              reduce using rule 98 (expr -> expr MINUS expr .)
    GE              reduce using rule 98 (expr -> expr MINUS expr .)
    LT              reduce using rule 98 (expr -> expr MINUS expr .)
    GT              reduce using rule 98 (expr -> expr MINUS expr .)
    EQ              reduce using rule 98 (expr -> expr MINUS expr .)
    NE              reduce using rule 98 (expr -> expr MINUS expr .)
    error           reduce using rule 98 (expr -> expr MINUS expr .)
    LAND            reduce using rule 98 (expr -> expr MINUS expr .)
    LOR             reduce using rule 98 (expr -> expr MINUS expr .)
    BAND            reduce using rule 98 (expr -> expr MINUS expr .)
    BOR             reduce using rule 98 (expr -> expr MINUS expr .)
    RPAREN          reduce using rule 98 (expr -> expr MINUS expr .)
    COMMA           reduce using rule 98 (expr -> expr MINUS expr .)
    RBRACKET        reduce using rule 98 (expr -> expr MINUS expr .)
    RBRACE          reduce using rule 98 (expr -> expr MINUS expr .)
    MUL             shift and go to state 45
    DIVIDE          shift and go to state 46
    INTDIVIDE       shift and go to state 47
    MODULO          shift and go to state 48
    POW             shift and go to state 49

  ! MUL             [ reduce using rule 98 (expr -> expr MINUS expr .) ]
  ! DIVIDE          [ reduce using rule 98 (expr -> expr MINUS expr .) ]
  ! INTDIVIDE       [ reduce using rule 98 (expr -> expr MINUS expr .) ]
  ! MODULO          [ reduce using rule 98 (expr -> expr MINUS expr .) ]
  ! POW             [ reduce using rule 98 (expr -> expr MINUS expr .) ]
  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! LE              [ shift and go to state 50 ]
  ! GE              [ shift and go to state 51 ]
  ! LT              [ shift and go to state 52 ]
  ! GT              [ shift and go to state 53 ]
  ! EQ              [ shift and go to state 54 ]
  ! NE              [ shift and go to state 55 ]
  ! error           [ shift and go to state 56 ]
  ! LAND            [ shift and go to state 57 ]
  ! LOR             [ shift and go to state 58 ]
  ! BAND            [ shift and go to state 59 ]
  ! BOR             [ shift and go to state 60 ]


state 106

    (99) expr -> expr MUL expr .
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

    SEMI            reduce using rule 99 (expr -> expr MUL expr .)
    PLUS            reduce using rule 99 (expr -> expr MUL expr .)
    MINUS           reduce using rule 99 (expr -> expr MUL expr .)
    MUL             reduce using rule 99 (expr -> expr MUL expr .)
    DIVIDE          reduce using rule 99 (expr -> expr MUL expr .)
    INTDIVIDE       reduce using rule 99 (expr -> expr MUL expr .)
    MODULO          reduce using rule 99 (expr -> expr MUL expr .)
    LE              reduce using rule 99 (expr -> expr MUL expr .)
    GE              reduce using rule 99 (expr -> expr MUL expr .)
    LT              reduce using rule 99 (expr -> expr MUL expr .)
    GT              reduce using rule 99 (expr -> expr MUL expr .)
    EQ              reduce using rule 99 (expr -> expr MUL expr .)
    NE              reduce using rule 99 (expr -> expr MUL expr .)
    error           reduce using rule 99 (expr -> expr MUL expr .)
    LAND            reduce using rule 99 (expr -> expr MUL expr .)
    LOR             reduce using rule 99 (expr -> expr MUL expr .)
    BAND            reduce using rule 99 (expr -> expr MUL expr .)
    BOR             reduce using rule 99 (expr -> expr MUL expr .)
    RPAREN          reduce using rule 99 (expr -> expr MUL expr .)
    COMMA           reduce using rule 99 (expr -> expr MUL expr .)
    RBRACKET        reduce using rule 99 (expr -> expr MUL expr .)
    RBRACE          reduce using rule 99 (expr -> expr MUL expr .)
    POW             shift and go to state 49

  ! POW             [ reduce using rule 99 (expr -> expr MUL expr .) ]
  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! MUL             [ shift and go to state 45 ]
  ! DIVIDE          [ shift and go to state 46 ]
  ! INTDIVIDE       [ shift and go to state 47 ]
  ! MODULO          [ shift and go to state 48 ]
  ! LE              [ shift and go to state 50 ]
  ! GE              [ shift and go to state 51 ]
  ! LT              [ shift and go to state 52 ]
  ! GT              [ shift and go to state 53 ]
  ! EQ              [ shift and go to state 54 ]
  ! NE              [ shift and go to state 55 ]
  ! error           [ shift and go to state 56 ]
  ! LAND            [ shift and go to state 57 ]
  ! LOR             [ shift and go to state 58 ]
  ! BAND            [ shift and go to state 59 ]
  ! BOR             [ shift and go to state 60 ]


state 107

    (100) expr -> expr DIVIDE expr .
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

    SEMI            reduce using rule 100 (expr -> expr DIVIDE expr .)
    PLUS            reduce using rule 100 (expr -> expr DIVIDE expr .)
    MINUS           reduce using rule 100 (expr -> expr DIVIDE expr .)
    MUL             reduce using rule 100 (expr -> expr DIVIDE expr .)
    DIVIDE          reduce using rule 100 (expr -> expr DIVIDE expr .)
    INTDIVIDE       reduce using rule 100 (expr -> expr DIVIDE expr .)
    MODULO          reduce using rule 100 (expr -> expr DIVIDE expr .)
    LE              reduce using rule 100 (expr -> expr DIVIDE expr .)
    GE              reduce using rule 100 (expr -> expr DIVIDE expr .)
    LT              reduce using rule 100 (expr -> expr DIVIDE expr .)
    GT              reduce using rule 100 (expr -> expr DIVIDE expr .)
    EQ              reduce using rule 100 (expr -> expr DIVIDE expr .)
    NE              reduce using rule 100 (expr -> expr DIVIDE expr .)
    error           reduce using rule 100 (expr -> expr DIVIDE expr .)
    LAND            reduce using rule 100 (expr -> expr DIVIDE expr .)
    LOR             reduce using rule 100 (expr -> expr DIVIDE expr .)
    BAND            reduce using rule 100 (expr -> expr DIVIDE expr .)
    BOR             reduce using rule 100 (expr -> expr DIVIDE expr .)
    RPAREN          reduce using rule 100 (expr -> expr DIVIDE expr .)
    COMMA           reduce using rule 100 (expr -> expr DIVIDE expr .)
    RBRACKET        reduce using rule 100 (expr -> expr DIVIDE expr .)
    RBRACE          reduce using rule 100 (expr -> expr DIVIDE expr .)
    POW             shift and go to state 49

  ! POW             [ reduce using rule 100 (expr -> expr DIVIDE expr .) ]
  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! MUL             [ shift and go to state 45 ]
  ! DIVIDE          [ shift and go to state 46 ]
  ! INTDIVIDE       [ shift and go to state 47 ]
  ! MODULO          [ shift and go to state 48 ]
  ! LE              [ shift and go to state 50 ]
  ! GE              [ shift and go to state 51 ]
  ! LT              [ shift and go to state 52 ]
  ! GT              [ shift and go to state 53 ]
  ! EQ              [ shift and go to state 54 ]
  ! NE              [ shift and go to state 55 ]
  ! error           [ shift and go to state 56 ]
  ! LAND            [ shift and go to state 57 ]
  ! LOR             [ shift and go to state 58 ]
  ! BAND            [ shift and go to state 59 ]
  ! BOR             [ shift and go to state 60 ]


state 108

    (101) expr -> expr INTDIVIDE expr .
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

    SEMI            reduce using rule 101 (expr -> expr INTDIVIDE expr .)
    PLUS            reduce using rule 101 (expr -> expr INTDIVIDE expr .)
    MINUS           reduce using rule 101 (expr -> expr INTDIVIDE expr .)
    MUL             reduce using rule 101 (expr -> expr INTDIVIDE expr .)
    DIVIDE          reduce using rule 101 (expr -> expr INTDIVIDE expr .)
    INTDIVIDE       reduce using rule 101 (expr -> expr INTDIVIDE expr .)
    MODULO          reduce using rule 101 (expr -> expr INTDIVIDE expr .)
    LE              reduce using rule 101 (expr -> expr INTDIVIDE expr .)
    GE              reduce using rule 101 (expr -> expr INTDIVIDE expr .)
    LT              reduce using rule 101 (expr -> expr INTDIVIDE expr .)
    GT              reduce using rule 101 (expr -> expr INTDIVIDE expr .)
    EQ              reduce using rule 101 (expr -> expr INTDIVIDE expr .)
    NE              reduce using rule 101 (expr -> expr INTDIVIDE expr .)
    error           reduce using rule 101 (expr -> expr INTDIVIDE expr .)
    LAND            reduce using rule 101 (expr -> expr INTDIVIDE expr .)
    LOR             reduce using rule 101 (expr -> expr INTDIVIDE expr .)
    BAND            reduce using rule 101 (expr -> expr INTDIVIDE expr .)
    BOR             reduce using rule 101 (expr -> expr INTDIVIDE expr .)
    RPAREN          reduce using rule 101 (expr -> expr INTDIVIDE expr .)
    COMMA           reduce using rule 101 (expr -> expr INTDIVIDE expr .)
    RBRACKET        reduce using rule 101 (expr -> expr INTDIVIDE expr .)
    RBRACE          reduce using rule 101 (expr -> expr INTDIVIDE expr .)
    POW             shift and go to state 49

  ! POW             [ reduce using rule 101 (expr -> expr INTDIVIDE expr .) ]
  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! MUL             [ shift and go to state 45 ]
  ! DIVIDE          [ shift and go to state 46 ]
  ! INTDIVIDE       [ shift and go to state 47 ]
  ! MODULO          [ shift and go to state 48 ]
  ! LE              [ shift and go to state 50 ]
  ! GE              [ shift and go to state 51 ]
  ! LT              [ shift and go to state 52 ]
  ! GT              [ shift and go to state 53 ]
  ! EQ              [ shift and go to state 54 ]
  ! NE              [ shift and go to state 55 ]
  ! error           [ shift and go to state 56 ]
  ! LAND            [ shift and go to state 57 ]
  ! LOR             [ shift and go to state 58 ]
  ! BAND            [ shift and go to state 59 ]
  ! BOR             [ shift and go to state 60 ]


state 109

    (102) expr -> expr MODULO expr .
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

    SEMI            reduce using rule 102 (expr -> expr MODULO expr .)
    PLUS            reduce using rule 102 (expr -> expr MODULO expr .)
    MINUS           reduce using rule 102 (expr -> expr MODULO expr .)
    MUL             reduce using rule 102 (expr -> expr MODULO expr .)
    DIVIDE          reduce using rule 102 (expr -> expr MODULO expr .)
    INTDIVIDE       reduce using rule 102 (expr -> expr MODULO expr .)
    MODULO          reduce using rule 102 (expr -> expr MODULO expr .)
    LE              reduce using rule 102 (expr -> expr MODULO expr .)
    GE              reduce using rule 102 (expr -> expr MODULO expr .)
    LT              reduce using rule 102 (expr -> expr MODULO expr .)
    GT              reduce using rule 102 (expr -> expr MODULO expr .)
    EQ              reduce using rule 102 (expr -> expr MODULO expr .)
    NE              reduce using rule 102 (expr -> expr MODULO expr .)
    error           reduce using rule 102 (expr -> expr MODULO expr .)
    LAND            reduce using rule 102 (expr -> expr MODULO expr .)
    LOR             reduce using rule 102 (expr -> expr MODULO expr .)
    BAND            reduce using rule 102 (expr -> expr MODULO expr .)
    BOR             reduce using rule 102 (expr -> expr MODULO expr .)
    RPAREN          reduce using rule 102 (expr -> expr MODULO expr .)
    COMMA           reduce using rule 102 (expr -> expr MODULO expr .)
    RBRACKET        reduce using rule 102 (expr -> expr MODULO expr .)
    RBRACE          reduce using rule 102 (expr -> expr MODULO expr .)
    POW             shift and go to state 49

  ! POW             [ reduce using rule 102 (expr -> expr MODULO expr .) ]
  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! MUL             [ shift and go to state 45 ]
  ! DIVIDE          [ shift and go to state 46 ]
  ! INTDIVIDE       [ shift and go to state 47 ]
  ! MODULO          [ shift and go to state 48 ]
  ! LE              [ shift and go to state 50 ]
  ! GE              [ shift and go to state 51 ]
  ! LT              [ shift and go to state 52 ]
  ! GT              [ shift and go to state 53 ]
  ! EQ              [ shift and go to state 54 ]
  ! NE              [ shift and go to state 55 ]
  ! error           [ shift and go to state 56 ]
  ! LAND            [ shift and go to state 57 ]
  ! LOR             [ shift and go to state 58 ]
  ! BAND            [ shift and go to state 59 ]
  ! BOR             [ shift and go to state 60 ]


state 110

    (103) expr -> expr POW expr .
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

    SEMI            reduce using rule 103 (expr -> expr POW expr .)
    PLUS            reduce using rule 103 (expr -> expr POW expr .)
    MINUS           reduce using rule 103 (expr -> expr POW expr .)
    MUL             reduce using rule 103 (expr -> expr POW expr .)
    DIVIDE          reduce using rule 103 (expr -> expr POW expr .)
    INTDIVIDE       reduce using rule 103 (expr -> expr POW expr .)
    MODULO          reduce using rule 103 (expr -> expr POW expr .)
    LE              reduce using rule 103 (expr -> expr POW expr .)
    GE              reduce using rule 103 (expr -> expr POW expr .)
    LT              reduce using rule 103 (expr -> expr POW expr .)
    GT              reduce using rule 103 (expr -> expr POW expr .)
    EQ              reduce using rule 103 (expr -> expr POW expr .)
    NE              reduce using rule 103 (expr -> expr POW expr .)
    error           reduce using rule 103 (expr -> expr POW expr .)
    LAND            reduce using rule 103 (expr -> expr POW expr .)
    LOR             reduce using rule 103 (expr -> expr POW expr .)
    BAND            reduce using rule 103 (expr -> expr POW expr .)
    BOR             reduce using rule 103 (expr -> expr POW expr .)
    RPAREN          reduce using rule 103 (expr -> expr POW expr .)
    COMMA           reduce using rule 103 (expr -> expr POW expr .)
    RBRACKET        reduce using rule 103 (expr -> expr POW expr .)
    RBRACE          reduce using rule 103 (expr -> expr POW expr .)
    POW             shift and go to state 49

  ! POW             [ reduce using rule 103 (expr -> expr POW expr .) ]
  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! MUL             [ shift and go to state 45 ]
  ! DIVIDE          [ shift and go to state 46 ]
  ! INTDIVIDE       [ shift and go to state 47 ]
  ! MODULO          [ shift and go to state 48 ]
  ! LE              [ shift and go to state 50 ]
  ! GE              [ shift and go to state 51 ]
  ! LT              [ shift and go to state 52 ]
  ! GT              [ shift and go to state 53 ]
  ! EQ              [ shift and go to state 54 ]
  ! NE              [ shift and go to state 55 ]
  ! error           [ shift and go to state 56 ]
  ! LAND            [ shift and go to state 57 ]
  ! LOR             [ shift and go to state 58 ]
  ! BAND            [ shift and go to state 59 ]
  ! BOR             [ shift and go to state 60 ]


state 111

    (104) expr -> expr LE expr .
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

    SEMI            reduce using rule 104 (expr -> expr LE expr .)
    LE              reduce using rule 104 (expr -> expr LE expr .)
    GE              reduce using rule 104 (expr -> expr LE expr .)
    LT              reduce using rule 104 (expr -> expr LE expr .)
    GT              reduce using rule 104 (expr -> expr LE expr .)
    EQ              reduce using rule 104 (expr -> expr LE expr .)
    NE              reduce using rule 104 (expr -> expr LE expr .)
    error           reduce using rule 104 (expr -> expr LE expr .)
    LAND            reduce using rule 104 (expr -> expr LE expr .)
    LOR             reduce using rule 104 (expr -> expr LE expr .)
    BAND            reduce using rule 104 (expr -> expr LE expr .)
    BOR             reduce using rule 104 (expr -> expr LE expr .)
    RPAREN          reduce using rule 104 (expr -> expr LE expr .)
    COMMA           reduce using rule 104 (expr -> expr LE expr .)
    RBRACKET        reduce using rule 104 (expr -> expr LE expr .)
    RBRACE          reduce using rule 104 (expr -> expr LE expr .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MUL             shift and go to state 45
    DIVIDE          shift and go to state 46
    INTDIVIDE       shift and go to state 47
    MODULO          shift and go to state 48
    POW             shift and go to state 49

  ! PLUS            [ reduce using rule 104 (expr -> expr LE expr .) ]
  ! MINUS           [ reduce using rule 104 (expr -> expr LE expr .) ]
  ! MUL             [ reduce using rule 104 (expr -> expr LE expr .) ]
  ! DIVIDE          [ reduce using rule 104 (expr -> expr LE expr .) ]
  ! INTDIVIDE       [ reduce using rule 104 (expr -> expr LE expr .) ]
  ! MODULO          [ reduce using rule 104 (expr -> expr LE expr .) ]
  ! POW             [ reduce using rule 104 (expr -> expr LE expr .) ]
  ! LE              [ shift and go to state 50 ]
  ! GE              [ shift and go to state 51 ]
  ! LT              [ shift and go to state 52 ]
  ! GT              [ shift and go to state 53 ]
  ! EQ              [ shift and go to state 54 ]
  ! NE              [ shift and go to state 55 ]
  ! error           [ shift and go to state 56 ]
  ! LAND            [ shift and go to state 57 ]
  ! LOR             [ shift and go to state 58 ]
  ! BAND            [ shift and go to state 59 ]
  ! BOR             [ shift and go to state 60 ]


state 112

    (105) expr -> expr GE expr .
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

    SEMI            reduce using rule 105 (expr -> expr GE expr .)
    LE              reduce using rule 105 (expr -> expr GE expr .)
    GE              reduce using rule 105 (expr -> expr GE expr .)
    LT              reduce using rule 105 (expr -> expr GE expr .)
    GT              reduce using rule 105 (expr -> expr GE expr .)
    EQ              reduce using rule 105 (expr -> expr GE expr .)
    NE              reduce using rule 105 (expr -> expr GE expr .)
    error           reduce using rule 105 (expr -> expr GE expr .)
    LAND            reduce using rule 105 (expr -> expr GE expr .)
    LOR             reduce using rule 105 (expr -> expr GE expr .)
    BAND            reduce using rule 105 (expr -> expr GE expr .)
    BOR             reduce using rule 105 (expr -> expr GE expr .)
    RPAREN          reduce using rule 105 (expr -> expr GE expr .)
    COMMA           reduce using rule 105 (expr -> expr GE expr .)
    RBRACKET        reduce using rule 105 (expr -> expr GE expr .)
    RBRACE          reduce using rule 105 (expr -> expr GE expr .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MUL             shift and go to state 45
    DIVIDE          shift and go to state 46
    INTDIVIDE       shift and go to state 47
    MODULO          shift and go to state 48
    POW             shift and go to state 49

  ! PLUS            [ reduce using rule 105 (expr -> expr GE expr .) ]
  ! MINUS           [ reduce using rule 105 (expr -> expr GE expr .) ]
  ! MUL             [ reduce using rule 105 (expr -> expr GE expr .) ]
  ! DIVIDE          [ reduce using rule 105 (expr -> expr GE expr .) ]
  ! INTDIVIDE       [ reduce using rule 105 (expr -> expr GE expr .) ]
  ! MODULO          [ reduce using rule 105 (expr -> expr GE expr .) ]
  ! POW             [ reduce using rule 105 (expr -> expr GE expr .) ]
  ! LE              [ shift and go to state 50 ]
  ! GE              [ shift and go to state 51 ]
  ! LT              [ shift and go to state 52 ]
  ! GT              [ shift and go to state 53 ]
  ! EQ              [ shift and go to state 54 ]
  ! NE              [ shift and go to state 55 ]
  ! error           [ shift and go to state 56 ]
  ! LAND            [ shift and go to state 57 ]
  ! LOR             [ shift and go to state 58 ]
  ! BAND            [ shift and go to state 59 ]
  ! BOR             [ shift and go to state 60 ]


state 113

    (106) expr -> expr LT expr .
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

    SEMI            reduce using rule 106 (expr -> expr LT expr .)
    LE              reduce using rule 106 (expr -> expr LT expr .)
    GE              reduce using rule 106 (expr -> expr LT expr .)
    LT              reduce using rule 106 (expr -> expr LT expr .)
    GT              reduce using rule 106 (expr -> expr LT expr .)
    EQ              reduce using rule 106 (expr -> expr LT expr .)
    NE              reduce using rule 106 (expr -> expr LT expr .)
    error           reduce using rule 106 (expr -> expr LT expr .)
    LAND            reduce using rule 106 (expr -> expr LT expr .)
    LOR             reduce using rule 106 (expr -> expr LT expr .)
    BAND            reduce using rule 106 (expr -> expr LT expr .)
    BOR             reduce using rule 106 (expr -> expr LT expr .)
    RPAREN          reduce using rule 106 (expr -> expr LT expr .)
    COMMA           reduce using rule 106 (expr -> expr LT expr .)
    RBRACKET        reduce using rule 106 (expr -> expr LT expr .)
    RBRACE          reduce using rule 106 (expr -> expr LT expr .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MUL             shift and go to state 45
    DIVIDE          shift and go to state 46
    INTDIVIDE       shift and go to state 47
    MODULO          shift and go to state 48
    POW             shift and go to state 49

  ! PLUS            [ reduce using rule 106 (expr -> expr LT expr .) ]
  ! MINUS           [ reduce using rule 106 (expr -> expr LT expr .) ]
  ! MUL             [ reduce using rule 106 (expr -> expr LT expr .) ]
  ! DIVIDE          [ reduce using rule 106 (expr -> expr LT expr .) ]
  ! INTDIVIDE       [ reduce using rule 106 (expr -> expr LT expr .) ]
  ! MODULO          [ reduce using rule 106 (expr -> expr LT expr .) ]
  ! POW             [ reduce using rule 106 (expr -> expr LT expr .) ]
  ! LE              [ shift and go to state 50 ]
  ! GE              [ shift and go to state 51 ]
  ! LT              [ shift and go to state 52 ]
  ! GT              [ shift and go to state 53 ]
  ! EQ              [ shift and go to state 54 ]
  ! NE              [ shift and go to state 55 ]
  ! error           [ shift and go to state 56 ]
  ! LAND            [ shift and go to state 57 ]
  ! LOR             [ shift and go to state 58 ]
  ! BAND            [ shift and go to state 59 ]
  ! BOR             [ shift and go to state 60 ]


state 114

    (107) expr -> expr GT expr .
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

    SEMI            reduce using rule 107 (expr -> expr GT expr .)
    LE              reduce using rule 107 (expr -> expr GT expr .)
    GE              reduce using rule 107 (expr -> expr GT expr .)
    LT              reduce using rule 107 (expr -> expr GT expr .)
    GT              reduce using rule 107 (expr -> expr GT expr .)
    EQ              reduce using rule 107 (expr -> expr GT expr .)
    NE              reduce using rule 107 (expr -> expr GT expr .)
    error           reduce using rule 107 (expr -> expr GT expr .)
    LAND            reduce using rule 107 (expr -> expr GT expr .)
    LOR             reduce using rule 107 (expr -> expr GT expr .)
    BAND            reduce using rule 107 (expr -> expr GT expr .)
    BOR             reduce using rule 107 (expr -> expr GT expr .)
    RPAREN          reduce using rule 107 (expr -> expr GT expr .)
    COMMA           reduce using rule 107 (expr -> expr GT expr .)
    RBRACKET        reduce using rule 107 (expr -> expr GT expr .)
    RBRACE          reduce using rule 107 (expr -> expr GT expr .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MUL             shift and go to state 45
    DIVIDE          shift and go to state 46
    INTDIVIDE       shift and go to state 47
    MODULO          shift and go to state 48
    POW             shift and go to state 49

  ! PLUS            [ reduce using rule 107 (expr -> expr GT expr .) ]
  ! MINUS           [ reduce using rule 107 (expr -> expr GT expr .) ]
  ! MUL             [ reduce using rule 107 (expr -> expr GT expr .) ]
  ! DIVIDE          [ reduce using rule 107 (expr -> expr GT expr .) ]
  ! INTDIVIDE       [ reduce using rule 107 (expr -> expr GT expr .) ]
  ! MODULO          [ reduce using rule 107 (expr -> expr GT expr .) ]
  ! POW             [ reduce using rule 107 (expr -> expr GT expr .) ]
  ! LE              [ shift and go to state 50 ]
  ! GE              [ shift and go to state 51 ]
  ! LT              [ shift and go to state 52 ]
  ! GT              [ shift and go to state 53 ]
  ! EQ              [ shift and go to state 54 ]
  ! NE              [ shift and go to state 55 ]
  ! error           [ shift and go to state 56 ]
  ! LAND            [ shift and go to state 57 ]
  ! LOR             [ shift and go to state 58 ]
  ! BAND            [ shift and go to state 59 ]
  ! BOR             [ shift and go to state 60 ]


state 115

    (108) expr -> expr EQ expr .
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

    SEMI            reduce using rule 108 (expr -> expr EQ expr .)
    EQ              reduce using rule 108 (expr -> expr EQ expr .)
    NE              reduce using rule 108 (expr -> expr EQ expr .)
    error           reduce using rule 108 (expr -> expr EQ expr .)
    LAND            reduce using rule 108 (expr -> expr EQ expr .)
    LOR             reduce using rule 108 (expr -> expr EQ expr .)
    BAND            reduce using rule 108 (expr -> expr EQ expr .)
    BOR             reduce using rule 108 (expr -> expr EQ expr .)
    RPAREN          reduce using rule 108 (expr -> expr EQ expr .)
    COMMA           reduce using rule 108 (expr -> expr EQ expr .)
    RBRACKET        reduce using rule 108 (expr -> expr EQ expr .)
    RBRACE          reduce using rule 108 (expr -> expr EQ expr .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MUL             shift and go to state 45
    DIVIDE          shift and go to state 46
    INTDIVIDE       shift and go to state 47
    MODULO          shift and go to state 48
    POW             shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    LT              shift and go to state 52
    GT              shift and go to state 53

  ! PLUS            [ reduce using rule 108 (expr -> expr EQ expr .) ]
  ! MINUS           [ reduce using rule 108 (expr -> expr EQ expr .) ]
  ! MUL             [ reduce using rule 108 (expr -> expr EQ expr .) ]
  ! DIVIDE          [ reduce using rule 108 (expr -> expr EQ expr .) ]
  ! INTDIVIDE       [ reduce using rule 108 (expr -> expr EQ expr .) ]
  ! MODULO          [ reduce using rule 108 (expr -> expr EQ expr .) ]
  ! POW             [ reduce using rule 108 (expr -> expr EQ expr .) ]
  ! LE              [ reduce using rule 108 (expr -> expr EQ expr .) ]
  ! GE              [ reduce using rule 108 (expr -> expr EQ expr .) ]
  ! LT              [ reduce using rule 108 (expr -> expr EQ expr .) ]
  ! GT              [ reduce using rule 108 (expr -> expr EQ expr .) ]
  ! EQ              [ shift and go to state 54 ]
  ! NE              [ shift and go to state 55 ]
  ! error           [ shift and go to state 56 ]
  ! LAND            [ shift and go to state 57 ]
  ! LOR             [ shift and go to state 58 ]
  ! BAND            [ shift and go to state 59 ]
  ! BOR             [ shift and go to state 60 ]


state 116

    (109) expr -> expr NE expr .
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

    SEMI            reduce using rule 109 (expr -> expr NE expr .)
    EQ              reduce using rule 109 (expr -> expr NE expr .)
    NE              reduce using rule 109 (expr -> expr NE expr .)
    error           reduce using rule 109 (expr -> expr NE expr .)
    LAND            reduce using rule 109 (expr -> expr NE expr .)
    LOR             reduce using rule 109 (expr -> expr NE expr .)
    BAND            reduce using rule 109 (expr -> expr NE expr .)
    BOR             reduce using rule 109 (expr -> expr NE expr .)
    RPAREN          reduce using rule 109 (expr -> expr NE expr .)
    COMMA           reduce using rule 109 (expr -> expr NE expr .)
    RBRACKET        reduce using rule 109 (expr -> expr NE expr .)
    RBRACE          reduce using rule 109 (expr -> expr NE expr .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MUL             shift and go to state 45
    DIVIDE          shift and go to state 46
    INTDIVIDE       shift and go to state 47
    MODULO          shift and go to state 48
    POW             shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    LT              shift and go to state 52
    GT              shift and go to state 53

  ! PLUS            [ reduce using rule 109 (expr -> expr NE expr .) ]
  ! MINUS           [ reduce using rule 109 (expr -> expr NE expr .) ]
  ! MUL             [ reduce using rule 109 (expr -> expr NE expr .) ]
  ! DIVIDE          [ reduce using rule 109 (expr -> expr NE expr .) ]
  ! INTDIVIDE       [ reduce using rule 109 (expr -> expr NE expr .) ]
  ! MODULO          [ reduce using rule 109 (expr -> expr NE expr .) ]
  ! POW             [ reduce using rule 109 (expr -> expr NE expr .) ]
  ! LE              [ reduce using rule 109 (expr -> expr NE expr .) ]
  ! GE              [ reduce using rule 109 (expr -> expr NE expr .) ]
  ! LT              [ reduce using rule 109 (expr -> expr NE expr .) ]
  ! GT              [ reduce using rule 109 (expr -> expr NE expr .) ]
  ! EQ              [ shift and go to state 54 ]
  ! NE              [ shift and go to state 55 ]
  ! error           [ shift and go to state 56 ]
  ! LAND            [ shift and go to state 57 ]
  ! LOR             [ shift and go to state 58 ]
  ! BAND            [ shift and go to state 59 ]
  ! BOR             [ shift and go to state 60 ]


state 117

    (110) expr -> expr error expr .
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for INTDIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for BAND resolved as shift
  ! shift/reduce conflict for BOR resolved as shift
    SEMI            reduce using rule 110 (expr -> expr error expr .)
    RPAREN          reduce using rule 110 (expr -> expr error expr .)
    COMMA           reduce using rule 110 (expr -> expr error expr .)
    RBRACKET        reduce using rule 110 (expr -> expr error expr .)
    RBRACE          reduce using rule 110 (expr -> expr error expr .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MUL             shift and go to state 45
    DIVIDE          shift and go to state 46
    INTDIVIDE       shift and go to state 47
    MODULO          shift and go to state 48
    POW             shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    LT              shift and go to state 52
    GT              shift and go to state 53
    EQ              shift and go to state 54
    NE              shift and go to state 55
    error           shift and go to state 56
    LAND            shift and go to state 57
    LOR             shift and go to state 58
    BAND            shift and go to state 59
    BOR             shift and go to state 60

  ! PLUS            [ reduce using rule 110 (expr -> expr error expr .) ]
  ! MINUS           [ reduce using rule 110 (expr -> expr error expr .) ]
  ! MUL             [ reduce using rule 110 (expr -> expr error expr .) ]
  ! DIVIDE          [ reduce using rule 110 (expr -> expr error expr .) ]
  ! INTDIVIDE       [ reduce using rule 110 (expr -> expr error expr .) ]
  ! MODULO          [ reduce using rule 110 (expr -> expr error expr .) ]
  ! POW             [ reduce using rule 110 (expr -> expr error expr .) ]
  ! LE              [ reduce using rule 110 (expr -> expr error expr .) ]
  ! GE              [ reduce using rule 110 (expr -> expr error expr .) ]
  ! LT              [ reduce using rule 110 (expr -> expr error expr .) ]
  ! GT              [ reduce using rule 110 (expr -> expr error expr .) ]
  ! EQ              [ reduce using rule 110 (expr -> expr error expr .) ]
  ! NE              [ reduce using rule 110 (expr -> expr error expr .) ]
  ! error           [ reduce using rule 110 (expr -> expr error expr .) ]
  ! LAND            [ reduce using rule 110 (expr -> expr error expr .) ]
  ! LOR             [ reduce using rule 110 (expr -> expr error expr .) ]
  ! BAND            [ reduce using rule 110 (expr -> expr error expr .) ]
  ! BOR             [ reduce using rule 110 (expr -> expr error expr .) ]


state 118

    (112) expr -> expr LAND expr .
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

    SEMI            reduce using rule 112 (expr -> expr LAND expr .)
    error           reduce using rule 112 (expr -> expr LAND expr .)
    LAND            reduce using rule 112 (expr -> expr LAND expr .)
    LOR             reduce using rule 112 (expr -> expr LAND expr .)
    RPAREN          reduce using rule 112 (expr -> expr LAND expr .)
    COMMA           reduce using rule 112 (expr -> expr LAND expr .)
    RBRACKET        reduce using rule 112 (expr -> expr LAND expr .)
    RBRACE          reduce using rule 112 (expr -> expr LAND expr .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MUL             shift and go to state 45
    DIVIDE          shift and go to state 46
    INTDIVIDE       shift and go to state 47
    MODULO          shift and go to state 48
    POW             shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    LT              shift and go to state 52
    GT              shift and go to state 53
    EQ              shift and go to state 54
    NE              shift and go to state 55
    BAND            shift and go to state 59
    BOR             shift and go to state 60

  ! PLUS            [ reduce using rule 112 (expr -> expr LAND expr .) ]
  ! MINUS           [ reduce using rule 112 (expr -> expr LAND expr .) ]
  ! MUL             [ reduce using rule 112 (expr -> expr LAND expr .) ]
  ! DIVIDE          [ reduce using rule 112 (expr -> expr LAND expr .) ]
  ! INTDIVIDE       [ reduce using rule 112 (expr -> expr LAND expr .) ]
  ! MODULO          [ reduce using rule 112 (expr -> expr LAND expr .) ]
  ! POW             [ reduce using rule 112 (expr -> expr LAND expr .) ]
  ! LE              [ reduce using rule 112 (expr -> expr LAND expr .) ]
  ! GE              [ reduce using rule 112 (expr -> expr LAND expr .) ]
  ! LT              [ reduce using rule 112 (expr -> expr LAND expr .) ]
  ! GT              [ reduce using rule 112 (expr -> expr LAND expr .) ]
  ! EQ              [ reduce using rule 112 (expr -> expr LAND expr .) ]
  ! NE              [ reduce using rule 112 (expr -> expr LAND expr .) ]
  ! BAND            [ reduce using rule 112 (expr -> expr LAND expr .) ]
  ! BOR             [ reduce using rule 112 (expr -> expr LAND expr .) ]
  ! error           [ shift and go to state 56 ]
  ! LAND            [ shift and go to state 57 ]
  ! LOR             [ shift and go to state 58 ]


state 119

    (113) expr -> expr LOR expr .
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

    SEMI            reduce using rule 113 (expr -> expr LOR expr .)
    error           reduce using rule 113 (expr -> expr LOR expr .)
    LOR             reduce using rule 113 (expr -> expr LOR expr .)
    RPAREN          reduce using rule 113 (expr -> expr LOR expr .)
    COMMA           reduce using rule 113 (expr -> expr LOR expr .)
    RBRACKET        reduce using rule 113 (expr -> expr LOR expr .)
    RBRACE          reduce using rule 113 (expr -> expr LOR expr .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MUL             shift and go to state 45
    DIVIDE          shift and go to state 46
    INTDIVIDE       shift and go to state 47
    MODULO          shift and go to state 48
    POW             shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    LT              shift and go to state 52
    GT              shift and go to state 53
    EQ              shift and go to state 54
    NE              shift and go to state 55
    LAND            shift and go to state 57
    BAND            shift and go to state 59
    BOR             shift and go to state 60

  ! PLUS            [ reduce using rule 113 (expr -> expr LOR expr .) ]
  ! MINUS           [ reduce using rule 113 (expr -> expr LOR expr .) ]
  ! MUL             [ reduce using rule 113 (expr -> expr LOR expr .) ]
  ! DIVIDE          [ reduce using rule 113 (expr -> expr LOR expr .) ]
  ! INTDIVIDE       [ reduce using rule 113 (expr -> expr LOR expr .) ]
  ! MODULO          [ reduce using rule 113 (expr -> expr LOR expr .) ]
  ! POW             [ reduce using rule 113 (expr -> expr LOR expr .) ]
  ! LE              [ reduce using rule 113 (expr -> expr LOR expr .) ]
  ! GE              [ reduce using rule 113 (expr -> expr LOR expr .) ]
  ! LT              [ reduce using rule 113 (expr -> expr LOR expr .) ]
  ! GT              [ reduce using rule 113 (expr -> expr LOR expr .) ]
  ! EQ              [ reduce using rule 113 (expr -> expr LOR expr .) ]
  ! NE              [ reduce using rule 113 (expr -> expr LOR expr .) ]
  ! LAND            [ reduce using rule 113 (expr -> expr LOR expr .) ]
  ! BAND            [ reduce using rule 113 (expr -> expr LOR expr .) ]
  ! BOR             [ reduce using rule 113 (expr -> expr LOR expr .) ]
  ! error           [ shift and go to state 56 ]
  ! LOR             [ shift and go to state 58 ]


state 120

    (115) expr -> expr BAND expr .
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

    SEMI            reduce using rule 115 (expr -> expr BAND expr .)
    error           reduce using rule 115 (expr -> expr BAND expr .)
    LAND            reduce using rule 115 (expr -> expr BAND expr .)
    LOR             reduce using rule 115 (expr -> expr BAND expr .)
    BAND            reduce using rule 115 (expr -> expr BAND expr .)
    BOR             reduce using rule 115 (expr -> expr BAND expr .)
    RPAREN          reduce using rule 115 (expr -> expr BAND expr .)
    COMMA           reduce using rule 115 (expr -> expr BAND expr .)
    RBRACKET        reduce using rule 115 (expr -> expr BAND expr .)
    RBRACE          reduce using rule 115 (expr -> expr BAND expr .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MUL             shift and go to state 45
    DIVIDE          shift and go to state 46
    INTDIVIDE       shift and go to state 47
    MODULO          shift and go to state 48
    POW             shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    LT              shift and go to state 52
    GT              shift and go to state 53
    EQ              shift and go to state 54
    NE              shift and go to state 55

  ! PLUS            [ reduce using rule 115 (expr -> expr BAND expr .) ]
  ! MINUS           [ reduce using rule 115 (expr -> expr BAND expr .) ]
  ! MUL             [ reduce using rule 115 (expr -> expr BAND expr .) ]
  ! DIVIDE          [ reduce using rule 115 (expr -> expr BAND expr .) ]
  ! INTDIVIDE       [ reduce using rule 115 (expr -> expr BAND expr .) ]
  ! MODULO          [ reduce using rule 115 (expr -> expr BAND expr .) ]
  ! POW             [ reduce using rule 115 (expr -> expr BAND expr .) ]
  ! LE              [ reduce using rule 115 (expr -> expr BAND expr .) ]
  ! GE              [ reduce using rule 115 (expr -> expr BAND expr .) ]
  ! LT              [ reduce using rule 115 (expr -> expr BAND expr .) ]
  ! GT              [ reduce using rule 115 (expr -> expr BAND expr .) ]
  ! EQ              [ reduce using rule 115 (expr -> expr BAND expr .) ]
  ! NE              [ reduce using rule 115 (expr -> expr BAND expr .) ]
  ! error           [ shift and go to state 56 ]
  ! LAND            [ shift and go to state 57 ]
  ! LOR             [ shift and go to state 58 ]
  ! BAND            [ shift and go to state 59 ]
  ! BOR             [ shift and go to state 60 ]


state 121

    (116) expr -> expr BOR expr .
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

    SEMI            reduce using rule 116 (expr -> expr BOR expr .)
    error           reduce using rule 116 (expr -> expr BOR expr .)
    LAND            reduce using rule 116 (expr -> expr BOR expr .)
    LOR             reduce using rule 116 (expr -> expr BOR expr .)
    BOR             reduce using rule 116 (expr -> expr BOR expr .)
    RPAREN          reduce using rule 116 (expr -> expr BOR expr .)
    COMMA           reduce using rule 116 (expr -> expr BOR expr .)
    RBRACKET        reduce using rule 116 (expr -> expr BOR expr .)
    RBRACE          reduce using rule 116 (expr -> expr BOR expr .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MUL             shift and go to state 45
    DIVIDE          shift and go to state 46
    INTDIVIDE       shift and go to state 47
    MODULO          shift and go to state 48
    POW             shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    LT              shift and go to state 52
    GT              shift and go to state 53
    EQ              shift and go to state 54
    NE              shift and go to state 55
    BAND            shift and go to state 59

  ! PLUS            [ reduce using rule 116 (expr -> expr BOR expr .) ]
  ! MINUS           [ reduce using rule 116 (expr -> expr BOR expr .) ]
  ! MUL             [ reduce using rule 116 (expr -> expr BOR expr .) ]
  ! DIVIDE          [ reduce using rule 116 (expr -> expr BOR expr .) ]
  ! INTDIVIDE       [ reduce using rule 116 (expr -> expr BOR expr .) ]
  ! MODULO          [ reduce using rule 116 (expr -> expr BOR expr .) ]
  ! POW             [ reduce using rule 116 (expr -> expr BOR expr .) ]
  ! LE              [ reduce using rule 116 (expr -> expr BOR expr .) ]
  ! GE              [ reduce using rule 116 (expr -> expr BOR expr .) ]
  ! LT              [ reduce using rule 116 (expr -> expr BOR expr .) ]
  ! GT              [ reduce using rule 116 (expr -> expr BOR expr .) ]
  ! EQ              [ reduce using rule 116 (expr -> expr BOR expr .) ]
  ! NE              [ reduce using rule 116 (expr -> expr BOR expr .) ]
  ! BAND            [ reduce using rule 116 (expr -> expr BOR expr .) ]
  ! error           [ shift and go to state 56 ]
  ! LAND            [ shift and go to state 57 ]
  ! LOR             [ shift and go to state 58 ]
  ! BOR             [ shift and go to state 60 ]


state 122

    (24) statement -> GOTO ID SEMI .

    BREAK           reduce using rule 24 (statement -> GOTO ID SEMI .)
    CONTINUE        reduce using rule 24 (statement -> GOTO ID SEMI .)
    GOTO            reduce using rule 24 (statement -> GOTO ID SEMI .)
    MINUS           reduce using rule 24 (statement -> GOTO ID SEMI .)
    LNOT            reduce using rule 24 (statement -> GOTO ID SEMI .)
    NULL            reduce using rule 24 (statement -> GOTO ID SEMI .)
    LPAREN          reduce using rule 24 (statement -> GOTO ID SEMI .)
    ID              reduce using rule 24 (statement -> GOTO ID SEMI .)
    error           reduce using rule 24 (statement -> GOTO ID SEMI .)
    RETURN          reduce using rule 24 (statement -> GOTO ID SEMI .)
    FUNCTION        reduce using rule 24 (statement -> GOTO ID SEMI .)
    STRUCTURE       reduce using rule 24 (statement -> GOTO ID SEMI .)
    WHILE           reduce using rule 24 (statement -> GOTO ID SEMI .)
    DO              reduce using rule 24 (statement -> GOTO ID SEMI .)
    IF              reduce using rule 24 (statement -> GOTO ID SEMI .)
    INTEGER         reduce using rule 24 (statement -> GOTO ID SEMI .)
    DOUBLE          reduce using rule 24 (statement -> GOTO ID SEMI .)
    BOOL            reduce using rule 24 (statement -> GOTO ID SEMI .)
    STRING          reduce using rule 24 (statement -> GOTO ID SEMI .)
    VOID            reduce using rule 24 (statement -> GOTO ID SEMI .)
    DATATYPE        reduce using rule 24 (statement -> GOTO ID SEMI .)
    $end            reduce using rule 24 (statement -> GOTO ID SEMI .)
    RBRACE          reduce using rule 24 (statement -> GOTO ID SEMI .)


state 123

    (131) expr -> ID id LBRACKET . INTEGER RBRACKET
    (133) expr -> ID id LBRACKET . INTEGER RBRACKET EQUALS LBRACE args RBRACE

    INTEGER         shift and go to state 179


state 124

    (65) var_declaration -> ID id EQUALS . LBRACE args RBRACE SEMI
    (66) var_declaration -> ID id EQUALS . expr SEMI
    (75) var_declaration -> ID id EQUALS . error args RBRACE SEMI
    (76) var_declaration -> ID id EQUALS . LBRACE error RBRACE SEMI
    (77) var_declaration -> ID id EQUALS . LBRACE args error SEMI
    (78) var_declaration -> ID id EQUALS . LBRACE args RBRACE error
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    LBRACE          shift and go to state 180
    error           shift and go to state 182
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    id                             shift and go to state 76
    expr                           shift and go to state 181
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 125

    (64) var_declaration -> ID id SEMI .

    BREAK           reduce using rule 64 (var_declaration -> ID id SEMI .)
    CONTINUE        reduce using rule 64 (var_declaration -> ID id SEMI .)
    GOTO            reduce using rule 64 (var_declaration -> ID id SEMI .)
    MINUS           reduce using rule 64 (var_declaration -> ID id SEMI .)
    LNOT            reduce using rule 64 (var_declaration -> ID id SEMI .)
    NULL            reduce using rule 64 (var_declaration -> ID id SEMI .)
    LPAREN          reduce using rule 64 (var_declaration -> ID id SEMI .)
    ID              reduce using rule 64 (var_declaration -> ID id SEMI .)
    error           reduce using rule 64 (var_declaration -> ID id SEMI .)
    RETURN          reduce using rule 64 (var_declaration -> ID id SEMI .)
    FUNCTION        reduce using rule 64 (var_declaration -> ID id SEMI .)
    STRUCTURE       reduce using rule 64 (var_declaration -> ID id SEMI .)
    WHILE           reduce using rule 64 (var_declaration -> ID id SEMI .)
    DO              reduce using rule 64 (var_declaration -> ID id SEMI .)
    IF              reduce using rule 64 (var_declaration -> ID id SEMI .)
    INTEGER         reduce using rule 64 (var_declaration -> ID id SEMI .)
    DOUBLE          reduce using rule 64 (var_declaration -> ID id SEMI .)
    BOOL            reduce using rule 64 (var_declaration -> ID id SEMI .)
    STRING          reduce using rule 64 (var_declaration -> ID id SEMI .)
    VOID            reduce using rule 64 (var_declaration -> ID id SEMI .)
    DATATYPE        reduce using rule 64 (var_declaration -> ID id SEMI .)
    $end            reduce using rule 64 (var_declaration -> ID id SEMI .)
    RBRACE          reduce using rule 64 (var_declaration -> ID id SEMI .)


state 126

    (74) var_declaration -> ID id error . LBRACE args RBRACE SEMI

    LBRACE          shift and go to state 183


state 127

    (84) assign -> ID EQUALS error . SEMI
    (87) assign -> ID EQUALS error . args RBRACE SEMI
    (137) expr -> error . LBRACKET RBRACKET id
    (58) args -> .
    (59) args -> . expr
    (60) args -> . args COMMA expr
    (61) args -> . args error expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

  ! shift/reduce conflict for error resolved as shift
    SEMI            shift and go to state 184
    LBRACKET        shift and go to state 81
    RBRACE          reduce using rule 58 (args -> .)
    COMMA           reduce using rule 58 (args -> .)
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

  ! error           [ reduce using rule 58 (args -> .) ]

    args                           shift and go to state 185
    id                             shift and go to state 76
    expr                           shift and go to state 135
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 128

    (85) assign -> ID EQUALS expr . error
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

    error           shift and go to state 186
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MUL             shift and go to state 45
    DIVIDE          shift and go to state 46
    INTDIVIDE       shift and go to state 47
    MODULO          shift and go to state 48
    POW             shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    LT              shift and go to state 52
    GT              shift and go to state 53
    EQ              shift and go to state 54
    NE              shift and go to state 55
    LAND            shift and go to state 57
    LOR             shift and go to state 58
    BAND            shift and go to state 59
    BOR             shift and go to state 60


state 129

    (88) assign -> ID EQUALS LBRACE . error RBRACE SEMI
    (89) assign -> ID EQUALS LBRACE . args error SEMI
    (90) assign -> ID EQUALS LBRACE . args RBRACE error
    (58) args -> .
    (59) args -> . expr
    (60) args -> . args COMMA expr
    (61) args -> . args error expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

  ! shift/reduce conflict for error resolved as shift
    error           shift and go to state 187
    RBRACE          reduce using rule 58 (args -> .)
    COMMA           reduce using rule 58 (args -> .)
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

  ! error           [ reduce using rule 58 (args -> .) ]

    args                           shift and go to state 188
    expr                           shift and go to state 135
    id                             shift and go to state 76
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 130

    (73) var_declaration -> ID error EQUALS . LBRACE args RBRACE SEMI

    LBRACE          shift and go to state 189


state 131

    (86) assign -> ID error LBRACE . args RBRACE SEMI
    (58) args -> .
    (59) args -> . expr
    (60) args -> . args COMMA expr
    (61) args -> . args error expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

  ! shift/reduce conflict for error resolved as shift
    RBRACE          reduce using rule 58 (args -> .)
    COMMA           reduce using rule 58 (args -> .)
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

  ! error           [ reduce using rule 58 (args -> .) ]

    args                           shift and go to state 190
    expr                           shift and go to state 135
    id                             shift and go to state 76
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 132

    (83) assign -> ID error expr . SEMI
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

    SEMI            shift and go to state 191
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MUL             shift and go to state 45
    DIVIDE          shift and go to state 46
    INTDIVIDE       shift and go to state 47
    MODULO          shift and go to state 48
    POW             shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    LT              shift and go to state 52
    GT              shift and go to state 53
    EQ              shift and go to state 54
    NE              shift and go to state 55
    error           shift and go to state 56
    LAND            shift and go to state 57
    LOR             shift and go to state 58
    BAND            shift and go to state 59
    BOR             shift and go to state 60


state 133

    (91) assign -> ID DOT ID . error expr SEMI
    (92) assign -> ID DOT ID . EQUALS error SEMI
    (93) assign -> ID DOT ID . EQUALS expr error

    error           shift and go to state 192
    EQUALS          shift and go to state 193


state 134

    (55) expr -> id LPAREN args . RPAREN
    (57) expr -> id LPAREN args . error
    (60) args -> args . COMMA expr
    (61) args -> args . error expr

    RPAREN          shift and go to state 194
    error           shift and go to state 195
    COMMA           shift and go to state 196


state 135

    (59) args -> expr .
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

  ! shift/reduce conflict for error resolved as shift
    RPAREN          reduce using rule 59 (args -> expr .)
    COMMA           reduce using rule 59 (args -> expr .)
    RBRACE          reduce using rule 59 (args -> expr .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MUL             shift and go to state 45
    DIVIDE          shift and go to state 46
    INTDIVIDE       shift and go to state 47
    MODULO          shift and go to state 48
    POW             shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    LT              shift and go to state 52
    GT              shift and go to state 53
    EQ              shift and go to state 54
    NE              shift and go to state 55
    error           shift and go to state 56
    LAND            shift and go to state 57
    LOR             shift and go to state 58
    BAND            shift and go to state 59
    BOR             shift and go to state 60

  ! error           [ reduce using rule 59 (args -> expr .) ]


state 136

    (56) expr -> id error args . RPAREN
    (60) args -> args . COMMA expr
    (61) args -> args . error expr

    RPAREN          shift and go to state 198
    COMMA           shift and go to state 196
    error           shift and go to state 197


state 137

    (138) expr -> id LBRACKET expr . RBRACKET
    (82) assign -> id LBRACKET expr . RBRACKET EQUALS expr SEMI
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

    RBRACKET        shift and go to state 199
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MUL             shift and go to state 45
    DIVIDE          shift and go to state 46
    INTDIVIDE       shift and go to state 47
    MODULO          shift and go to state 48
    POW             shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    LT              shift and go to state 52
    GT              shift and go to state 53
    EQ              shift and go to state 54
    NE              shift and go to state 55
    error           shift and go to state 56
    LAND            shift and go to state 57
    LOR             shift and go to state 58
    BAND            shift and go to state 59
    BOR             shift and go to state 60


state 138

    (139) expr -> id DOT ID .
    (81) assign -> id DOT ID . EQUALS expr SEMI

    SEMI            reduce using rule 139 (expr -> id DOT ID .)
    PLUS            reduce using rule 139 (expr -> id DOT ID .)
    MINUS           reduce using rule 139 (expr -> id DOT ID .)
    MUL             reduce using rule 139 (expr -> id DOT ID .)
    DIVIDE          reduce using rule 139 (expr -> id DOT ID .)
    INTDIVIDE       reduce using rule 139 (expr -> id DOT ID .)
    MODULO          reduce using rule 139 (expr -> id DOT ID .)
    POW             reduce using rule 139 (expr -> id DOT ID .)
    LE              reduce using rule 139 (expr -> id DOT ID .)
    GE              reduce using rule 139 (expr -> id DOT ID .)
    LT              reduce using rule 139 (expr -> id DOT ID .)
    GT              reduce using rule 139 (expr -> id DOT ID .)
    EQ              reduce using rule 139 (expr -> id DOT ID .)
    NE              reduce using rule 139 (expr -> id DOT ID .)
    error           reduce using rule 139 (expr -> id DOT ID .)
    LAND            reduce using rule 139 (expr -> id DOT ID .)
    LOR             reduce using rule 139 (expr -> id DOT ID .)
    BAND            reduce using rule 139 (expr -> id DOT ID .)
    BOR             reduce using rule 139 (expr -> id DOT ID .)
    EQUALS          shift and go to state 200


state 139

    (79) assign -> id EQUALS expr . SEMI
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

    SEMI            shift and go to state 201
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MUL             shift and go to state 45
    DIVIDE          shift and go to state 46
    INTDIVIDE       shift and go to state 47
    MODULO          shift and go to state 48
    POW             shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    LT              shift and go to state 52
    GT              shift and go to state 53
    EQ              shift and go to state 54
    NE              shift and go to state 55
    error           shift and go to state 56
    LAND            shift and go to state 57
    LOR             shift and go to state 58
    BAND            shift and go to state 59
    BOR             shift and go to state 60


state 140

    (80) assign -> id EQUALS LBRACE . args RBRACE SEMI
    (58) args -> .
    (59) args -> . expr
    (60) args -> . args COMMA expr
    (61) args -> . args error expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

  ! shift/reduce conflict for error resolved as shift
    RBRACE          reduce using rule 58 (args -> .)
    COMMA           reduce using rule 58 (args -> .)
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

  ! error           [ reduce using rule 58 (args -> .) ]

    id                             shift and go to state 76
    args                           shift and go to state 202
    expr                           shift and go to state 135
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 141

    (124) expr -> LPAREN expr RPAREN .

    SEMI            reduce using rule 124 (expr -> LPAREN expr RPAREN .)
    PLUS            reduce using rule 124 (expr -> LPAREN expr RPAREN .)
    MINUS           reduce using rule 124 (expr -> LPAREN expr RPAREN .)
    MUL             reduce using rule 124 (expr -> LPAREN expr RPAREN .)
    DIVIDE          reduce using rule 124 (expr -> LPAREN expr RPAREN .)
    INTDIVIDE       reduce using rule 124 (expr -> LPAREN expr RPAREN .)
    MODULO          reduce using rule 124 (expr -> LPAREN expr RPAREN .)
    POW             reduce using rule 124 (expr -> LPAREN expr RPAREN .)
    LE              reduce using rule 124 (expr -> LPAREN expr RPAREN .)
    GE              reduce using rule 124 (expr -> LPAREN expr RPAREN .)
    LT              reduce using rule 124 (expr -> LPAREN expr RPAREN .)
    GT              reduce using rule 124 (expr -> LPAREN expr RPAREN .)
    EQ              reduce using rule 124 (expr -> LPAREN expr RPAREN .)
    NE              reduce using rule 124 (expr -> LPAREN expr RPAREN .)
    error           reduce using rule 124 (expr -> LPAREN expr RPAREN .)
    LAND            reduce using rule 124 (expr -> LPAREN expr RPAREN .)
    LOR             reduce using rule 124 (expr -> LPAREN expr RPAREN .)
    BAND            reduce using rule 124 (expr -> LPAREN expr RPAREN .)
    BOR             reduce using rule 124 (expr -> LPAREN expr RPAREN .)
    RPAREN          reduce using rule 124 (expr -> LPAREN expr RPAREN .)
    COMMA           reduce using rule 124 (expr -> LPAREN expr RPAREN .)
    RBRACKET        reduce using rule 124 (expr -> LPAREN expr RPAREN .)
    RBRACE          reduce using rule 124 (expr -> LPAREN expr RPAREN .)


state 142

    (138) expr -> id LBRACKET . expr RBRACKET
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    id                             shift and go to state 76
    expr                           shift and go to state 203
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 143

    (139) expr -> id DOT . ID

    ID              shift and go to state 204


state 144

    (130) expr -> datatype id . LBRACKET INTEGER RBRACKET
    (132) expr -> datatype id . LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE

    LBRACKET        shift and go to state 153


state 145

    (134) expr -> datatype error . RBRACKET id

    RBRACKET        shift and go to state 159


state 146

    (131) expr -> ID id . LBRACKET INTEGER RBRACKET
    (133) expr -> ID id . LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE

    LBRACKET        shift and go to state 123


state 147

    (4) body_block -> error scope . RBRACE
    (13) scope -> scope . statement
    (15) statement -> . expr SEMI
    (16) statement -> . var_declaration
    (17) statement -> . return
    (18) statement -> . assign
    (19) statement -> . func_declaration
    (20) statement -> . struct_declaration
    (21) statement -> . while
    (22) statement -> . BREAK SEMI
    (23) statement -> . CONTINUE SEMI
    (24) statement -> . GOTO ID SEMI
    (25) statement -> . goto_mark
    (26) statement -> . if-else
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (62) var_declaration -> . datatype id EQUALS expr SEMI
    (63) var_declaration -> . datatype id SEMI
    (64) var_declaration -> . ID id SEMI
    (65) var_declaration -> . ID id EQUALS LBRACE args RBRACE SEMI
    (66) var_declaration -> . ID id EQUALS expr SEMI
    (67) var_declaration -> . datatype error EQUALS expr SEMI
    (68) var_declaration -> . datatype id error expr SEMI
    (69) var_declaration -> . datatype id EQUALS expr error
    (70) var_declaration -> . datatype id EQUALS error SEMI
    (71) var_declaration -> . datatype error SEMI
    (72) var_declaration -> . datatype id error
    (73) var_declaration -> . ID error EQUALS LBRACE args RBRACE SEMI
    (74) var_declaration -> . ID id error LBRACE args RBRACE SEMI
    (75) var_declaration -> . ID id EQUALS error args RBRACE SEMI
    (76) var_declaration -> . ID id EQUALS LBRACE error RBRACE SEMI
    (77) var_declaration -> . ID id EQUALS LBRACE args error SEMI
    (78) var_declaration -> . ID id EQUALS LBRACE args RBRACE error
    (94) return -> . RETURN expr SEMI
    (95) return -> . RETURN SEMI
    (96) return -> . RETURN error
    (79) assign -> . id EQUALS expr SEMI
    (80) assign -> . id EQUALS LBRACE args RBRACE SEMI
    (81) assign -> . id DOT ID EQUALS expr SEMI
    (82) assign -> . id LBRACKET expr RBRACKET EQUALS expr SEMI
    (83) assign -> . ID error expr SEMI
    (84) assign -> . ID EQUALS error SEMI
    (85) assign -> . ID EQUALS expr error
    (86) assign -> . ID error LBRACE args RBRACE SEMI
    (87) assign -> . ID EQUALS error args RBRACE SEMI
    (88) assign -> . ID EQUALS LBRACE error RBRACE SEMI
    (89) assign -> . ID EQUALS LBRACE args error SEMI
    (90) assign -> . ID EQUALS LBRACE args RBRACE error
    (91) assign -> . ID DOT ID error expr SEMI
    (92) assign -> . ID DOT ID EQUALS error SEMI
    (93) assign -> . ID DOT ID EQUALS expr error
    (7) func_declaration -> . FUNCTION datatype id LPAREN params RPAREN basic_block
    (8) func_declaration -> . error datatype id LPAREN params RPAREN body_block
    (9) func_declaration -> . FUNCTION error id LPAREN params RPAREN body_block
    (10) func_declaration -> . FUNCTION datatype error LPAREN params RPAREN body_block
    (11) func_declaration -> . FUNCTION datatype id error params RPAREN body_block
    (12) func_declaration -> . FUNCTION datatype id LPAREN params error body_block
    (38) struct_declaration -> . STRUCTURE id LBRACE struct_params RBRACE
    (39) struct_declaration -> . STRUCTURE error LBRACE struct_params RBRACE
    (40) struct_declaration -> . STRUCTURE id error struct_params RBRACE
    (41) struct_declaration -> . STRUCTURE id LBRACE struct_params error
    (27) while -> . WHILE conditional basic_block
    (28) while -> . DO basic_block WHILE conditional SEMI
    (29) while -> . error body_block WHILE conditional SEMI
    (30) while -> . DO body_block error conditional SEMI
    (31) while -> . DO body_block WHILE conditional error
    (140) goto_mark -> . ID COLON
    (32) if-else -> . IF conditional basic_block
    (33) if-else -> . IF conditional basic_block ELSE basic_block
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    RBRACE          shift and go to state 205
    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    GOTO            shift and go to state 13
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 14
    error           shift and go to state 19
    RETURN          shift and go to state 30
    FUNCTION        shift and go to state 31
    STRUCTURE       shift and go to state 32
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    statement                      shift and go to state 41
    expr                           shift and go to state 4
    var_declaration                shift and go to state 5
    return                         shift and go to state 6
    assign                         shift and go to state 7
    func_declaration               shift and go to state 8
    struct_declaration             shift and go to state 9
    while                          shift and go to state 10
    goto_mark                      shift and go to state 15
    if-else                        shift and go to state 16
    id                             shift and go to state 17
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 28

state 148

    (137) expr -> error LBRACKET RBRACKET . id
    (142) id -> . ID

    ID              shift and go to state 64

    id                             shift and go to state 206

state 149

    (8) func_declaration -> error datatype id . LPAREN params RPAREN body_block

    LPAREN          shift and go to state 207


state 150

    (29) while -> error body_block WHILE . conditional SEMI
    (34) conditional -> . LPAREN expr RPAREN
    (35) conditional -> . error expr RPAREN
    (36) conditional -> . LPAREN error RPAREN
    (37) conditional -> . LPAREN expr error

    LPAREN          shift and go to state 98
    error           shift and go to state 99

    conditional                    shift and go to state 208

state 151

    (5) body_block -> LBRACE error . RBRACE
    (137) expr -> error . LBRACKET RBRACKET id
    (8) func_declaration -> error . datatype id LPAREN params RPAREN body_block
    (29) while -> error . body_block WHILE conditional SEMI
    (141) datatype -> . DATATYPE
    (4) body_block -> . error scope RBRACE
    (5) body_block -> . LBRACE error RBRACE
    (6) body_block -> . LBRACE scope error

    RBRACE          shift and go to state 209
    LBRACKET        shift and go to state 81
    DATATYPE        shift and go to state 40
    error           shift and go to state 80
    LBRACE          shift and go to state 84

    datatype                       shift and go to state 82
    body_block                     shift and go to state 83

state 152

    (6) body_block -> LBRACE scope . error
    (13) scope -> scope . statement
    (15) statement -> . expr SEMI
    (16) statement -> . var_declaration
    (17) statement -> . return
    (18) statement -> . assign
    (19) statement -> . func_declaration
    (20) statement -> . struct_declaration
    (21) statement -> . while
    (22) statement -> . BREAK SEMI
    (23) statement -> . CONTINUE SEMI
    (24) statement -> . GOTO ID SEMI
    (25) statement -> . goto_mark
    (26) statement -> . if-else
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (62) var_declaration -> . datatype id EQUALS expr SEMI
    (63) var_declaration -> . datatype id SEMI
    (64) var_declaration -> . ID id SEMI
    (65) var_declaration -> . ID id EQUALS LBRACE args RBRACE SEMI
    (66) var_declaration -> . ID id EQUALS expr SEMI
    (67) var_declaration -> . datatype error EQUALS expr SEMI
    (68) var_declaration -> . datatype id error expr SEMI
    (69) var_declaration -> . datatype id EQUALS expr error
    (70) var_declaration -> . datatype id EQUALS error SEMI
    (71) var_declaration -> . datatype error SEMI
    (72) var_declaration -> . datatype id error
    (73) var_declaration -> . ID error EQUALS LBRACE args RBRACE SEMI
    (74) var_declaration -> . ID id error LBRACE args RBRACE SEMI
    (75) var_declaration -> . ID id EQUALS error args RBRACE SEMI
    (76) var_declaration -> . ID id EQUALS LBRACE error RBRACE SEMI
    (77) var_declaration -> . ID id EQUALS LBRACE args error SEMI
    (78) var_declaration -> . ID id EQUALS LBRACE args RBRACE error
    (94) return -> . RETURN expr SEMI
    (95) return -> . RETURN SEMI
    (96) return -> . RETURN error
    (79) assign -> . id EQUALS expr SEMI
    (80) assign -> . id EQUALS LBRACE args RBRACE SEMI
    (81) assign -> . id DOT ID EQUALS expr SEMI
    (82) assign -> . id LBRACKET expr RBRACKET EQUALS expr SEMI
    (83) assign -> . ID error expr SEMI
    (84) assign -> . ID EQUALS error SEMI
    (85) assign -> . ID EQUALS expr error
    (86) assign -> . ID error LBRACE args RBRACE SEMI
    (87) assign -> . ID EQUALS error args RBRACE SEMI
    (88) assign -> . ID EQUALS LBRACE error RBRACE SEMI
    (89) assign -> . ID EQUALS LBRACE args error SEMI
    (90) assign -> . ID EQUALS LBRACE args RBRACE error
    (91) assign -> . ID DOT ID error expr SEMI
    (92) assign -> . ID DOT ID EQUALS error SEMI
    (93) assign -> . ID DOT ID EQUALS expr error
    (7) func_declaration -> . FUNCTION datatype id LPAREN params RPAREN basic_block
    (8) func_declaration -> . error datatype id LPAREN params RPAREN body_block
    (9) func_declaration -> . FUNCTION error id LPAREN params RPAREN body_block
    (10) func_declaration -> . FUNCTION datatype error LPAREN params RPAREN body_block
    (11) func_declaration -> . FUNCTION datatype id error params RPAREN body_block
    (12) func_declaration -> . FUNCTION datatype id LPAREN params error body_block
    (38) struct_declaration -> . STRUCTURE id LBRACE struct_params RBRACE
    (39) struct_declaration -> . STRUCTURE error LBRACE struct_params RBRACE
    (40) struct_declaration -> . STRUCTURE id error struct_params RBRACE
    (41) struct_declaration -> . STRUCTURE id LBRACE struct_params error
    (27) while -> . WHILE conditional basic_block
    (28) while -> . DO basic_block WHILE conditional SEMI
    (29) while -> . error body_block WHILE conditional SEMI
    (30) while -> . DO body_block error conditional SEMI
    (31) while -> . DO body_block WHILE conditional error
    (140) goto_mark -> . ID COLON
    (32) if-else -> . IF conditional basic_block
    (33) if-else -> . IF conditional basic_block ELSE basic_block
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    error           shift and go to state 210
    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    GOTO            shift and go to state 13
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 14
    RETURN          shift and go to state 30
    FUNCTION        shift and go to state 31
    STRUCTURE       shift and go to state 32
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    statement                      shift and go to state 41
    expr                           shift and go to state 4
    var_declaration                shift and go to state 5
    return                         shift and go to state 6
    assign                         shift and go to state 7
    func_declaration               shift and go to state 8
    struct_declaration             shift and go to state 9
    while                          shift and go to state 10
    goto_mark                      shift and go to state 15
    if-else                        shift and go to state 16
    id                             shift and go to state 17
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 28

state 153

    (130) expr -> datatype id LBRACKET . INTEGER RBRACKET
    (132) expr -> datatype id LBRACKET . INTEGER RBRACKET EQUALS LBRACE args RBRACE

    INTEGER         shift and go to state 211


state 154

    (62) var_declaration -> datatype id EQUALS . expr SEMI
    (69) var_declaration -> datatype id EQUALS . expr error
    (70) var_declaration -> datatype id EQUALS . error SEMI
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    error           shift and go to state 213
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    datatype                       shift and go to state 78
    id                             shift and go to state 76
    expr                           shift and go to state 212
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26

state 155

    (63) var_declaration -> datatype id SEMI .

    BREAK           reduce using rule 63 (var_declaration -> datatype id SEMI .)
    CONTINUE        reduce using rule 63 (var_declaration -> datatype id SEMI .)
    GOTO            reduce using rule 63 (var_declaration -> datatype id SEMI .)
    MINUS           reduce using rule 63 (var_declaration -> datatype id SEMI .)
    LNOT            reduce using rule 63 (var_declaration -> datatype id SEMI .)
    NULL            reduce using rule 63 (var_declaration -> datatype id SEMI .)
    LPAREN          reduce using rule 63 (var_declaration -> datatype id SEMI .)
    ID              reduce using rule 63 (var_declaration -> datatype id SEMI .)
    error           reduce using rule 63 (var_declaration -> datatype id SEMI .)
    RETURN          reduce using rule 63 (var_declaration -> datatype id SEMI .)
    FUNCTION        reduce using rule 63 (var_declaration -> datatype id SEMI .)
    STRUCTURE       reduce using rule 63 (var_declaration -> datatype id SEMI .)
    WHILE           reduce using rule 63 (var_declaration -> datatype id SEMI .)
    DO              reduce using rule 63 (var_declaration -> datatype id SEMI .)
    IF              reduce using rule 63 (var_declaration -> datatype id SEMI .)
    INTEGER         reduce using rule 63 (var_declaration -> datatype id SEMI .)
    DOUBLE          reduce using rule 63 (var_declaration -> datatype id SEMI .)
    BOOL            reduce using rule 63 (var_declaration -> datatype id SEMI .)
    STRING          reduce using rule 63 (var_declaration -> datatype id SEMI .)
    VOID            reduce using rule 63 (var_declaration -> datatype id SEMI .)
    DATATYPE        reduce using rule 63 (var_declaration -> datatype id SEMI .)
    $end            reduce using rule 63 (var_declaration -> datatype id SEMI .)
    RBRACE          reduce using rule 63 (var_declaration -> datatype id SEMI .)


state 156

    (68) var_declaration -> datatype id error . expr SEMI
    (72) var_declaration -> datatype id error .
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LNOT resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for DATATYPE resolved as shift
    BREAK           reduce using rule 72 (var_declaration -> datatype id error .)
    CONTINUE        reduce using rule 72 (var_declaration -> datatype id error .)
    GOTO            reduce using rule 72 (var_declaration -> datatype id error .)
    RETURN          reduce using rule 72 (var_declaration -> datatype id error .)
    FUNCTION        reduce using rule 72 (var_declaration -> datatype id error .)
    STRUCTURE       reduce using rule 72 (var_declaration -> datatype id error .)
    WHILE           reduce using rule 72 (var_declaration -> datatype id error .)
    DO              reduce using rule 72 (var_declaration -> datatype id error .)
    IF              reduce using rule 72 (var_declaration -> datatype id error .)
    $end            reduce using rule 72 (var_declaration -> datatype id error .)
    RBRACE          reduce using rule 72 (var_declaration -> datatype id error .)
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

  ! MINUS           [ reduce using rule 72 (var_declaration -> datatype id error .) ]
  ! LNOT            [ reduce using rule 72 (var_declaration -> datatype id error .) ]
  ! NULL            [ reduce using rule 72 (var_declaration -> datatype id error .) ]
  ! LPAREN          [ reduce using rule 72 (var_declaration -> datatype id error .) ]
  ! ID              [ reduce using rule 72 (var_declaration -> datatype id error .) ]
  ! error           [ reduce using rule 72 (var_declaration -> datatype id error .) ]
  ! INTEGER         [ reduce using rule 72 (var_declaration -> datatype id error .) ]
  ! DOUBLE          [ reduce using rule 72 (var_declaration -> datatype id error .) ]
  ! BOOL            [ reduce using rule 72 (var_declaration -> datatype id error .) ]
  ! STRING          [ reduce using rule 72 (var_declaration -> datatype id error .) ]
  ! VOID            [ reduce using rule 72 (var_declaration -> datatype id error .) ]
  ! DATATYPE        [ reduce using rule 72 (var_declaration -> datatype id error .) ]

    datatype                       shift and go to state 78
    id                             shift and go to state 76
    expr                           shift and go to state 214
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26

state 157

    (135) expr -> datatype LBRACKET error . id
    (142) id -> . ID

    ID              shift and go to state 64

    id                             shift and go to state 215

state 158

    (136) expr -> datatype LBRACKET RBRACKET . error

    error           shift and go to state 216


state 159

    (134) expr -> datatype error RBRACKET . id
    (142) id -> . ID

    ID              shift and go to state 64

    id                             shift and go to state 217

state 160

    (67) var_declaration -> datatype error EQUALS . expr SEMI
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    datatype                       shift and go to state 78
    expr                           shift and go to state 218
    id                             shift and go to state 76
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26

state 161

    (71) var_declaration -> datatype error SEMI .

    BREAK           reduce using rule 71 (var_declaration -> datatype error SEMI .)
    CONTINUE        reduce using rule 71 (var_declaration -> datatype error SEMI .)
    GOTO            reduce using rule 71 (var_declaration -> datatype error SEMI .)
    MINUS           reduce using rule 71 (var_declaration -> datatype error SEMI .)
    LNOT            reduce using rule 71 (var_declaration -> datatype error SEMI .)
    NULL            reduce using rule 71 (var_declaration -> datatype error SEMI .)
    LPAREN          reduce using rule 71 (var_declaration -> datatype error SEMI .)
    ID              reduce using rule 71 (var_declaration -> datatype error SEMI .)
    error           reduce using rule 71 (var_declaration -> datatype error SEMI .)
    RETURN          reduce using rule 71 (var_declaration -> datatype error SEMI .)
    FUNCTION        reduce using rule 71 (var_declaration -> datatype error SEMI .)
    STRUCTURE       reduce using rule 71 (var_declaration -> datatype error SEMI .)
    WHILE           reduce using rule 71 (var_declaration -> datatype error SEMI .)
    DO              reduce using rule 71 (var_declaration -> datatype error SEMI .)
    IF              reduce using rule 71 (var_declaration -> datatype error SEMI .)
    INTEGER         reduce using rule 71 (var_declaration -> datatype error SEMI .)
    DOUBLE          reduce using rule 71 (var_declaration -> datatype error SEMI .)
    BOOL            reduce using rule 71 (var_declaration -> datatype error SEMI .)
    STRING          reduce using rule 71 (var_declaration -> datatype error SEMI .)
    VOID            reduce using rule 71 (var_declaration -> datatype error SEMI .)
    DATATYPE        reduce using rule 71 (var_declaration -> datatype error SEMI .)
    $end            reduce using rule 71 (var_declaration -> datatype error SEMI .)
    RBRACE          reduce using rule 71 (var_declaration -> datatype error SEMI .)


state 162

    (94) return -> RETURN expr SEMI .

    BREAK           reduce using rule 94 (return -> RETURN expr SEMI .)
    CONTINUE        reduce using rule 94 (return -> RETURN expr SEMI .)
    GOTO            reduce using rule 94 (return -> RETURN expr SEMI .)
    MINUS           reduce using rule 94 (return -> RETURN expr SEMI .)
    LNOT            reduce using rule 94 (return -> RETURN expr SEMI .)
    NULL            reduce using rule 94 (return -> RETURN expr SEMI .)
    LPAREN          reduce using rule 94 (return -> RETURN expr SEMI .)
    ID              reduce using rule 94 (return -> RETURN expr SEMI .)
    error           reduce using rule 94 (return -> RETURN expr SEMI .)
    RETURN          reduce using rule 94 (return -> RETURN expr SEMI .)
    FUNCTION        reduce using rule 94 (return -> RETURN expr SEMI .)
    STRUCTURE       reduce using rule 94 (return -> RETURN expr SEMI .)
    WHILE           reduce using rule 94 (return -> RETURN expr SEMI .)
    DO              reduce using rule 94 (return -> RETURN expr SEMI .)
    IF              reduce using rule 94 (return -> RETURN expr SEMI .)
    INTEGER         reduce using rule 94 (return -> RETURN expr SEMI .)
    DOUBLE          reduce using rule 94 (return -> RETURN expr SEMI .)
    BOOL            reduce using rule 94 (return -> RETURN expr SEMI .)
    STRING          reduce using rule 94 (return -> RETURN expr SEMI .)
    VOID            reduce using rule 94 (return -> RETURN expr SEMI .)
    DATATYPE        reduce using rule 94 (return -> RETURN expr SEMI .)
    $end            reduce using rule 94 (return -> RETURN expr SEMI .)
    RBRACE          reduce using rule 94 (return -> RETURN expr SEMI .)


state 163

    (7) func_declaration -> FUNCTION datatype id . LPAREN params RPAREN basic_block
    (11) func_declaration -> FUNCTION datatype id . error params RPAREN body_block
    (12) func_declaration -> FUNCTION datatype id . LPAREN params error body_block

    LPAREN          shift and go to state 219
    error           shift and go to state 220


state 164

    (10) func_declaration -> FUNCTION datatype error . LPAREN params RPAREN body_block

    LPAREN          shift and go to state 221


state 165

    (9) func_declaration -> FUNCTION error id . LPAREN params RPAREN body_block

    LPAREN          shift and go to state 222


state 166

    (38) struct_declaration -> STRUCTURE id LBRACE . struct_params RBRACE
    (41) struct_declaration -> STRUCTURE id LBRACE . struct_params error
    (42) struct_params -> . struct_param
    (43) struct_params -> . struct_params COMMA struct_param
    (44) struct_params -> . struct_params error struct_param
    (45) struct_param -> . DATATYPE ID
    (46) struct_param -> . error ID
    (47) struct_param -> . DATATYPE error

    DATATYPE        shift and go to state 226
    error           shift and go to state 224

    struct_params                  shift and go to state 223
    struct_param                   shift and go to state 225

state 167

    (40) struct_declaration -> STRUCTURE id error . struct_params RBRACE
    (42) struct_params -> . struct_param
    (43) struct_params -> . struct_params COMMA struct_param
    (44) struct_params -> . struct_params error struct_param
    (45) struct_param -> . DATATYPE ID
    (46) struct_param -> . error ID
    (47) struct_param -> . DATATYPE error

    DATATYPE        shift and go to state 226
    error           shift and go to state 224

    struct_params                  shift and go to state 227
    struct_param                   shift and go to state 225

state 168

    (39) struct_declaration -> STRUCTURE error LBRACE . struct_params RBRACE
    (42) struct_params -> . struct_param
    (43) struct_params -> . struct_params COMMA struct_param
    (44) struct_params -> . struct_params error struct_param
    (45) struct_param -> . DATATYPE ID
    (46) struct_param -> . error ID
    (47) struct_param -> . DATATYPE error

    DATATYPE        shift and go to state 226
    error           shift and go to state 224

    struct_params                  shift and go to state 228
    struct_param                   shift and go to state 225

state 169

    (27) while -> WHILE conditional basic_block .

    BREAK           reduce using rule 27 (while -> WHILE conditional basic_block .)
    CONTINUE        reduce using rule 27 (while -> WHILE conditional basic_block .)
    GOTO            reduce using rule 27 (while -> WHILE conditional basic_block .)
    MINUS           reduce using rule 27 (while -> WHILE conditional basic_block .)
    LNOT            reduce using rule 27 (while -> WHILE conditional basic_block .)
    NULL            reduce using rule 27 (while -> WHILE conditional basic_block .)
    LPAREN          reduce using rule 27 (while -> WHILE conditional basic_block .)
    ID              reduce using rule 27 (while -> WHILE conditional basic_block .)
    error           reduce using rule 27 (while -> WHILE conditional basic_block .)
    RETURN          reduce using rule 27 (while -> WHILE conditional basic_block .)
    FUNCTION        reduce using rule 27 (while -> WHILE conditional basic_block .)
    STRUCTURE       reduce using rule 27 (while -> WHILE conditional basic_block .)
    WHILE           reduce using rule 27 (while -> WHILE conditional basic_block .)
    DO              reduce using rule 27 (while -> WHILE conditional basic_block .)
    IF              reduce using rule 27 (while -> WHILE conditional basic_block .)
    INTEGER         reduce using rule 27 (while -> WHILE conditional basic_block .)
    DOUBLE          reduce using rule 27 (while -> WHILE conditional basic_block .)
    BOOL            reduce using rule 27 (while -> WHILE conditional basic_block .)
    STRING          reduce using rule 27 (while -> WHILE conditional basic_block .)
    VOID            reduce using rule 27 (while -> WHILE conditional basic_block .)
    DATATYPE        reduce using rule 27 (while -> WHILE conditional basic_block .)
    $end            reduce using rule 27 (while -> WHILE conditional basic_block .)
    RBRACE          reduce using rule 27 (while -> WHILE conditional basic_block .)


state 170

    (3) basic_block -> LBRACE . scope RBRACE
    (13) scope -> . scope statement
    (14) scope -> . statement
    (15) statement -> . expr SEMI
    (16) statement -> . var_declaration
    (17) statement -> . return
    (18) statement -> . assign
    (19) statement -> . func_declaration
    (20) statement -> . struct_declaration
    (21) statement -> . while
    (22) statement -> . BREAK SEMI
    (23) statement -> . CONTINUE SEMI
    (24) statement -> . GOTO ID SEMI
    (25) statement -> . goto_mark
    (26) statement -> . if-else
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (62) var_declaration -> . datatype id EQUALS expr SEMI
    (63) var_declaration -> . datatype id SEMI
    (64) var_declaration -> . ID id SEMI
    (65) var_declaration -> . ID id EQUALS LBRACE args RBRACE SEMI
    (66) var_declaration -> . ID id EQUALS expr SEMI
    (67) var_declaration -> . datatype error EQUALS expr SEMI
    (68) var_declaration -> . datatype id error expr SEMI
    (69) var_declaration -> . datatype id EQUALS expr error
    (70) var_declaration -> . datatype id EQUALS error SEMI
    (71) var_declaration -> . datatype error SEMI
    (72) var_declaration -> . datatype id error
    (73) var_declaration -> . ID error EQUALS LBRACE args RBRACE SEMI
    (74) var_declaration -> . ID id error LBRACE args RBRACE SEMI
    (75) var_declaration -> . ID id EQUALS error args RBRACE SEMI
    (76) var_declaration -> . ID id EQUALS LBRACE error RBRACE SEMI
    (77) var_declaration -> . ID id EQUALS LBRACE args error SEMI
    (78) var_declaration -> . ID id EQUALS LBRACE args RBRACE error
    (94) return -> . RETURN expr SEMI
    (95) return -> . RETURN SEMI
    (96) return -> . RETURN error
    (79) assign -> . id EQUALS expr SEMI
    (80) assign -> . id EQUALS LBRACE args RBRACE SEMI
    (81) assign -> . id DOT ID EQUALS expr SEMI
    (82) assign -> . id LBRACKET expr RBRACKET EQUALS expr SEMI
    (83) assign -> . ID error expr SEMI
    (84) assign -> . ID EQUALS error SEMI
    (85) assign -> . ID EQUALS expr error
    (86) assign -> . ID error LBRACE args RBRACE SEMI
    (87) assign -> . ID EQUALS error args RBRACE SEMI
    (88) assign -> . ID EQUALS LBRACE error RBRACE SEMI
    (89) assign -> . ID EQUALS LBRACE args error SEMI
    (90) assign -> . ID EQUALS LBRACE args RBRACE error
    (91) assign -> . ID DOT ID error expr SEMI
    (92) assign -> . ID DOT ID EQUALS error SEMI
    (93) assign -> . ID DOT ID EQUALS expr error
    (7) func_declaration -> . FUNCTION datatype id LPAREN params RPAREN basic_block
    (8) func_declaration -> . error datatype id LPAREN params RPAREN body_block
    (9) func_declaration -> . FUNCTION error id LPAREN params RPAREN body_block
    (10) func_declaration -> . FUNCTION datatype error LPAREN params RPAREN body_block
    (11) func_declaration -> . FUNCTION datatype id error params RPAREN body_block
    (12) func_declaration -> . FUNCTION datatype id LPAREN params error body_block
    (38) struct_declaration -> . STRUCTURE id LBRACE struct_params RBRACE
    (39) struct_declaration -> . STRUCTURE error LBRACE struct_params RBRACE
    (40) struct_declaration -> . STRUCTURE id error struct_params RBRACE
    (41) struct_declaration -> . STRUCTURE id LBRACE struct_params error
    (27) while -> . WHILE conditional basic_block
    (28) while -> . DO basic_block WHILE conditional SEMI
    (29) while -> . error body_block WHILE conditional SEMI
    (30) while -> . DO body_block error conditional SEMI
    (31) while -> . DO body_block WHILE conditional error
    (140) goto_mark -> . ID COLON
    (32) if-else -> . IF conditional basic_block
    (33) if-else -> . IF conditional basic_block ELSE basic_block
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    GOTO            shift and go to state 13
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 14
    error           shift and go to state 19
    RETURN          shift and go to state 30
    FUNCTION        shift and go to state 31
    STRUCTURE       shift and go to state 32
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    scope                          shift and go to state 229
    statement                      shift and go to state 3
    expr                           shift and go to state 4
    var_declaration                shift and go to state 5
    return                         shift and go to state 6
    assign                         shift and go to state 7
    func_declaration               shift and go to state 8
    struct_declaration             shift and go to state 9
    while                          shift and go to state 10
    goto_mark                      shift and go to state 15
    if-else                        shift and go to state 16
    id                             shift and go to state 17
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 28

state 171

    (34) conditional -> LPAREN expr . RPAREN
    (37) conditional -> LPAREN expr . error
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

    RPAREN          shift and go to state 230
    error           shift and go to state 231
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MUL             shift and go to state 45
    DIVIDE          shift and go to state 46
    INTDIVIDE       shift and go to state 47
    MODULO          shift and go to state 48
    POW             shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    LT              shift and go to state 52
    GT              shift and go to state 53
    EQ              shift and go to state 54
    NE              shift and go to state 55
    LAND            shift and go to state 57
    LOR             shift and go to state 58
    BAND            shift and go to state 59
    BOR             shift and go to state 60


state 172

    (36) conditional -> LPAREN error . RPAREN
    (137) expr -> error . LBRACKET RBRACKET id

    RPAREN          shift and go to state 232
    LBRACKET        shift and go to state 81


state 173

    (35) conditional -> error expr . RPAREN
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

    RPAREN          shift and go to state 233
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MUL             shift and go to state 45
    DIVIDE          shift and go to state 46
    INTDIVIDE       shift and go to state 47
    MODULO          shift and go to state 48
    POW             shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    LT              shift and go to state 52
    GT              shift and go to state 53
    EQ              shift and go to state 54
    NE              shift and go to state 55
    error           shift and go to state 56
    LAND            shift and go to state 57
    LOR             shift and go to state 58
    BAND            shift and go to state 59
    BOR             shift and go to state 60


state 174

    (28) while -> DO basic_block WHILE . conditional SEMI
    (34) conditional -> . LPAREN expr RPAREN
    (35) conditional -> . error expr RPAREN
    (36) conditional -> . LPAREN error RPAREN
    (37) conditional -> . LPAREN expr error

    LPAREN          shift and go to state 98
    error           shift and go to state 99

    conditional                    shift and go to state 234

state 175

    (30) while -> DO body_block error . conditional SEMI
    (34) conditional -> . LPAREN expr RPAREN
    (35) conditional -> . error expr RPAREN
    (36) conditional -> . LPAREN error RPAREN
    (37) conditional -> . LPAREN expr error

    LPAREN          shift and go to state 98
    error           shift and go to state 99

    conditional                    shift and go to state 235

state 176

    (31) while -> DO body_block WHILE . conditional error
    (34) conditional -> . LPAREN expr RPAREN
    (35) conditional -> . error expr RPAREN
    (36) conditional -> . LPAREN error RPAREN
    (37) conditional -> . LPAREN expr error

    LPAREN          shift and go to state 98
    error           shift and go to state 99

    conditional                    shift and go to state 236

state 177

    (3) basic_block -> LBRACE scope . RBRACE
    (6) body_block -> LBRACE scope . error
    (13) scope -> scope . statement
    (15) statement -> . expr SEMI
    (16) statement -> . var_declaration
    (17) statement -> . return
    (18) statement -> . assign
    (19) statement -> . func_declaration
    (20) statement -> . struct_declaration
    (21) statement -> . while
    (22) statement -> . BREAK SEMI
    (23) statement -> . CONTINUE SEMI
    (24) statement -> . GOTO ID SEMI
    (25) statement -> . goto_mark
    (26) statement -> . if-else
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (62) var_declaration -> . datatype id EQUALS expr SEMI
    (63) var_declaration -> . datatype id SEMI
    (64) var_declaration -> . ID id SEMI
    (65) var_declaration -> . ID id EQUALS LBRACE args RBRACE SEMI
    (66) var_declaration -> . ID id EQUALS expr SEMI
    (67) var_declaration -> . datatype error EQUALS expr SEMI
    (68) var_declaration -> . datatype id error expr SEMI
    (69) var_declaration -> . datatype id EQUALS expr error
    (70) var_declaration -> . datatype id EQUALS error SEMI
    (71) var_declaration -> . datatype error SEMI
    (72) var_declaration -> . datatype id error
    (73) var_declaration -> . ID error EQUALS LBRACE args RBRACE SEMI
    (74) var_declaration -> . ID id error LBRACE args RBRACE SEMI
    (75) var_declaration -> . ID id EQUALS error args RBRACE SEMI
    (76) var_declaration -> . ID id EQUALS LBRACE error RBRACE SEMI
    (77) var_declaration -> . ID id EQUALS LBRACE args error SEMI
    (78) var_declaration -> . ID id EQUALS LBRACE args RBRACE error
    (94) return -> . RETURN expr SEMI
    (95) return -> . RETURN SEMI
    (96) return -> . RETURN error
    (79) assign -> . id EQUALS expr SEMI
    (80) assign -> . id EQUALS LBRACE args RBRACE SEMI
    (81) assign -> . id DOT ID EQUALS expr SEMI
    (82) assign -> . id LBRACKET expr RBRACKET EQUALS expr SEMI
    (83) assign -> . ID error expr SEMI
    (84) assign -> . ID EQUALS error SEMI
    (85) assign -> . ID EQUALS expr error
    (86) assign -> . ID error LBRACE args RBRACE SEMI
    (87) assign -> . ID EQUALS error args RBRACE SEMI
    (88) assign -> . ID EQUALS LBRACE error RBRACE SEMI
    (89) assign -> . ID EQUALS LBRACE args error SEMI
    (90) assign -> . ID EQUALS LBRACE args RBRACE error
    (91) assign -> . ID DOT ID error expr SEMI
    (92) assign -> . ID DOT ID EQUALS error SEMI
    (93) assign -> . ID DOT ID EQUALS expr error
    (7) func_declaration -> . FUNCTION datatype id LPAREN params RPAREN basic_block
    (8) func_declaration -> . error datatype id LPAREN params RPAREN body_block
    (9) func_declaration -> . FUNCTION error id LPAREN params RPAREN body_block
    (10) func_declaration -> . FUNCTION datatype error LPAREN params RPAREN body_block
    (11) func_declaration -> . FUNCTION datatype id error params RPAREN body_block
    (12) func_declaration -> . FUNCTION datatype id LPAREN params error body_block
    (38) struct_declaration -> . STRUCTURE id LBRACE struct_params RBRACE
    (39) struct_declaration -> . STRUCTURE error LBRACE struct_params RBRACE
    (40) struct_declaration -> . STRUCTURE id error struct_params RBRACE
    (41) struct_declaration -> . STRUCTURE id LBRACE struct_params error
    (27) while -> . WHILE conditional basic_block
    (28) while -> . DO basic_block WHILE conditional SEMI
    (29) while -> . error body_block WHILE conditional SEMI
    (30) while -> . DO body_block error conditional SEMI
    (31) while -> . DO body_block WHILE conditional error
    (140) goto_mark -> . ID COLON
    (32) if-else -> . IF conditional basic_block
    (33) if-else -> . IF conditional basic_block ELSE basic_block
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    RBRACE          shift and go to state 237
    error           shift and go to state 210
    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    GOTO            shift and go to state 13
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 14
    RETURN          shift and go to state 30
    FUNCTION        shift and go to state 31
    STRUCTURE       shift and go to state 32
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    statement                      shift and go to state 41
    expr                           shift and go to state 4
    var_declaration                shift and go to state 5
    return                         shift and go to state 6
    assign                         shift and go to state 7
    func_declaration               shift and go to state 8
    struct_declaration             shift and go to state 9
    while                          shift and go to state 10
    goto_mark                      shift and go to state 15
    if-else                        shift and go to state 16
    id                             shift and go to state 17
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 28

state 178

    (32) if-else -> IF conditional basic_block .
    (33) if-else -> IF conditional basic_block . ELSE basic_block

    BREAK           reduce using rule 32 (if-else -> IF conditional basic_block .)
    CONTINUE        reduce using rule 32 (if-else -> IF conditional basic_block .)
    GOTO            reduce using rule 32 (if-else -> IF conditional basic_block .)
    MINUS           reduce using rule 32 (if-else -> IF conditional basic_block .)
    LNOT            reduce using rule 32 (if-else -> IF conditional basic_block .)
    NULL            reduce using rule 32 (if-else -> IF conditional basic_block .)
    LPAREN          reduce using rule 32 (if-else -> IF conditional basic_block .)
    ID              reduce using rule 32 (if-else -> IF conditional basic_block .)
    error           reduce using rule 32 (if-else -> IF conditional basic_block .)
    RETURN          reduce using rule 32 (if-else -> IF conditional basic_block .)
    FUNCTION        reduce using rule 32 (if-else -> IF conditional basic_block .)
    STRUCTURE       reduce using rule 32 (if-else -> IF conditional basic_block .)
    WHILE           reduce using rule 32 (if-else -> IF conditional basic_block .)
    DO              reduce using rule 32 (if-else -> IF conditional basic_block .)
    IF              reduce using rule 32 (if-else -> IF conditional basic_block .)
    INTEGER         reduce using rule 32 (if-else -> IF conditional basic_block .)
    DOUBLE          reduce using rule 32 (if-else -> IF conditional basic_block .)
    BOOL            reduce using rule 32 (if-else -> IF conditional basic_block .)
    STRING          reduce using rule 32 (if-else -> IF conditional basic_block .)
    VOID            reduce using rule 32 (if-else -> IF conditional basic_block .)
    DATATYPE        reduce using rule 32 (if-else -> IF conditional basic_block .)
    $end            reduce using rule 32 (if-else -> IF conditional basic_block .)
    RBRACE          reduce using rule 32 (if-else -> IF conditional basic_block .)
    ELSE            shift and go to state 238


state 179

    (131) expr -> ID id LBRACKET INTEGER . RBRACKET
    (133) expr -> ID id LBRACKET INTEGER . RBRACKET EQUALS LBRACE args RBRACE

    RBRACKET        shift and go to state 239


state 180

    (65) var_declaration -> ID id EQUALS LBRACE . args RBRACE SEMI
    (76) var_declaration -> ID id EQUALS LBRACE . error RBRACE SEMI
    (77) var_declaration -> ID id EQUALS LBRACE . args error SEMI
    (78) var_declaration -> ID id EQUALS LBRACE . args RBRACE error
    (58) args -> .
    (59) args -> . expr
    (60) args -> . args COMMA expr
    (61) args -> . args error expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

  ! shift/reduce conflict for error resolved as shift
    error           shift and go to state 241
    RBRACE          reduce using rule 58 (args -> .)
    COMMA           reduce using rule 58 (args -> .)
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

  ! error           [ reduce using rule 58 (args -> .) ]

    id                             shift and go to state 76
    args                           shift and go to state 240
    expr                           shift and go to state 135
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 181

    (66) var_declaration -> ID id EQUALS expr . SEMI
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

    SEMI            shift and go to state 242
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MUL             shift and go to state 45
    DIVIDE          shift and go to state 46
    INTDIVIDE       shift and go to state 47
    MODULO          shift and go to state 48
    POW             shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    LT              shift and go to state 52
    GT              shift and go to state 53
    EQ              shift and go to state 54
    NE              shift and go to state 55
    error           shift and go to state 56
    LAND            shift and go to state 57
    LOR             shift and go to state 58
    BAND            shift and go to state 59
    BOR             shift and go to state 60


state 182

    (75) var_declaration -> ID id EQUALS error . args RBRACE SEMI
    (137) expr -> error . LBRACKET RBRACKET id
    (58) args -> .
    (59) args -> . expr
    (60) args -> . args COMMA expr
    (61) args -> . args error expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

  ! shift/reduce conflict for error resolved as shift
    LBRACKET        shift and go to state 81
    RBRACE          reduce using rule 58 (args -> .)
    COMMA           reduce using rule 58 (args -> .)
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

  ! error           [ reduce using rule 58 (args -> .) ]

    id                             shift and go to state 76
    args                           shift and go to state 243
    expr                           shift and go to state 135
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 183

    (74) var_declaration -> ID id error LBRACE . args RBRACE SEMI
    (58) args -> .
    (59) args -> . expr
    (60) args -> . args COMMA expr
    (61) args -> . args error expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

  ! shift/reduce conflict for error resolved as shift
    RBRACE          reduce using rule 58 (args -> .)
    COMMA           reduce using rule 58 (args -> .)
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

  ! error           [ reduce using rule 58 (args -> .) ]

    id                             shift and go to state 76
    args                           shift and go to state 244
    expr                           shift and go to state 135
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 184

    (84) assign -> ID EQUALS error SEMI .

    BREAK           reduce using rule 84 (assign -> ID EQUALS error SEMI .)
    CONTINUE        reduce using rule 84 (assign -> ID EQUALS error SEMI .)
    GOTO            reduce using rule 84 (assign -> ID EQUALS error SEMI .)
    MINUS           reduce using rule 84 (assign -> ID EQUALS error SEMI .)
    LNOT            reduce using rule 84 (assign -> ID EQUALS error SEMI .)
    NULL            reduce using rule 84 (assign -> ID EQUALS error SEMI .)
    LPAREN          reduce using rule 84 (assign -> ID EQUALS error SEMI .)
    ID              reduce using rule 84 (assign -> ID EQUALS error SEMI .)
    error           reduce using rule 84 (assign -> ID EQUALS error SEMI .)
    RETURN          reduce using rule 84 (assign -> ID EQUALS error SEMI .)
    FUNCTION        reduce using rule 84 (assign -> ID EQUALS error SEMI .)
    STRUCTURE       reduce using rule 84 (assign -> ID EQUALS error SEMI .)
    WHILE           reduce using rule 84 (assign -> ID EQUALS error SEMI .)
    DO              reduce using rule 84 (assign -> ID EQUALS error SEMI .)
    IF              reduce using rule 84 (assign -> ID EQUALS error SEMI .)
    INTEGER         reduce using rule 84 (assign -> ID EQUALS error SEMI .)
    DOUBLE          reduce using rule 84 (assign -> ID EQUALS error SEMI .)
    BOOL            reduce using rule 84 (assign -> ID EQUALS error SEMI .)
    STRING          reduce using rule 84 (assign -> ID EQUALS error SEMI .)
    VOID            reduce using rule 84 (assign -> ID EQUALS error SEMI .)
    DATATYPE        reduce using rule 84 (assign -> ID EQUALS error SEMI .)
    $end            reduce using rule 84 (assign -> ID EQUALS error SEMI .)
    RBRACE          reduce using rule 84 (assign -> ID EQUALS error SEMI .)


state 185

    (87) assign -> ID EQUALS error args . RBRACE SEMI
    (60) args -> args . COMMA expr
    (61) args -> args . error expr

    RBRACE          shift and go to state 245
    COMMA           shift and go to state 196
    error           shift and go to state 197


state 186

    (85) assign -> ID EQUALS expr error .
    (110) expr -> expr error . expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LNOT resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for DATATYPE resolved as shift
    BREAK           reduce using rule 85 (assign -> ID EQUALS expr error .)
    CONTINUE        reduce using rule 85 (assign -> ID EQUALS expr error .)
    GOTO            reduce using rule 85 (assign -> ID EQUALS expr error .)
    RETURN          reduce using rule 85 (assign -> ID EQUALS expr error .)
    FUNCTION        reduce using rule 85 (assign -> ID EQUALS expr error .)
    STRUCTURE       reduce using rule 85 (assign -> ID EQUALS expr error .)
    WHILE           reduce using rule 85 (assign -> ID EQUALS expr error .)
    DO              reduce using rule 85 (assign -> ID EQUALS expr error .)
    IF              reduce using rule 85 (assign -> ID EQUALS expr error .)
    $end            reduce using rule 85 (assign -> ID EQUALS expr error .)
    RBRACE          reduce using rule 85 (assign -> ID EQUALS expr error .)
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

  ! MINUS           [ reduce using rule 85 (assign -> ID EQUALS expr error .) ]
  ! LNOT            [ reduce using rule 85 (assign -> ID EQUALS expr error .) ]
  ! NULL            [ reduce using rule 85 (assign -> ID EQUALS expr error .) ]
  ! LPAREN          [ reduce using rule 85 (assign -> ID EQUALS expr error .) ]
  ! ID              [ reduce using rule 85 (assign -> ID EQUALS expr error .) ]
  ! error           [ reduce using rule 85 (assign -> ID EQUALS expr error .) ]
  ! INTEGER         [ reduce using rule 85 (assign -> ID EQUALS expr error .) ]
  ! DOUBLE          [ reduce using rule 85 (assign -> ID EQUALS expr error .) ]
  ! BOOL            [ reduce using rule 85 (assign -> ID EQUALS expr error .) ]
  ! STRING          [ reduce using rule 85 (assign -> ID EQUALS expr error .) ]
  ! VOID            [ reduce using rule 85 (assign -> ID EQUALS expr error .) ]
  ! DATATYPE        [ reduce using rule 85 (assign -> ID EQUALS expr error .) ]

    expr                           shift and go to state 117
    id                             shift and go to state 76
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 187

    (88) assign -> ID EQUALS LBRACE error . RBRACE SEMI
    (137) expr -> error . LBRACKET RBRACKET id

    RBRACE          shift and go to state 246
    LBRACKET        shift and go to state 81


state 188

    (89) assign -> ID EQUALS LBRACE args . error SEMI
    (90) assign -> ID EQUALS LBRACE args . RBRACE error
    (60) args -> args . COMMA expr
    (61) args -> args . error expr

    error           shift and go to state 247
    RBRACE          shift and go to state 248
    COMMA           shift and go to state 196


state 189

    (73) var_declaration -> ID error EQUALS LBRACE . args RBRACE SEMI
    (58) args -> .
    (59) args -> . expr
    (60) args -> . args COMMA expr
    (61) args -> . args error expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

  ! shift/reduce conflict for error resolved as shift
    RBRACE          reduce using rule 58 (args -> .)
    COMMA           reduce using rule 58 (args -> .)
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

  ! error           [ reduce using rule 58 (args -> .) ]

    args                           shift and go to state 249
    expr                           shift and go to state 135
    id                             shift and go to state 76
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 190

    (86) assign -> ID error LBRACE args . RBRACE SEMI
    (60) args -> args . COMMA expr
    (61) args -> args . error expr

    RBRACE          shift and go to state 250
    COMMA           shift and go to state 196
    error           shift and go to state 197


state 191

    (83) assign -> ID error expr SEMI .

    BREAK           reduce using rule 83 (assign -> ID error expr SEMI .)
    CONTINUE        reduce using rule 83 (assign -> ID error expr SEMI .)
    GOTO            reduce using rule 83 (assign -> ID error expr SEMI .)
    MINUS           reduce using rule 83 (assign -> ID error expr SEMI .)
    LNOT            reduce using rule 83 (assign -> ID error expr SEMI .)
    NULL            reduce using rule 83 (assign -> ID error expr SEMI .)
    LPAREN          reduce using rule 83 (assign -> ID error expr SEMI .)
    ID              reduce using rule 83 (assign -> ID error expr SEMI .)
    error           reduce using rule 83 (assign -> ID error expr SEMI .)
    RETURN          reduce using rule 83 (assign -> ID error expr SEMI .)
    FUNCTION        reduce using rule 83 (assign -> ID error expr SEMI .)
    STRUCTURE       reduce using rule 83 (assign -> ID error expr SEMI .)
    WHILE           reduce using rule 83 (assign -> ID error expr SEMI .)
    DO              reduce using rule 83 (assign -> ID error expr SEMI .)
    IF              reduce using rule 83 (assign -> ID error expr SEMI .)
    INTEGER         reduce using rule 83 (assign -> ID error expr SEMI .)
    DOUBLE          reduce using rule 83 (assign -> ID error expr SEMI .)
    BOOL            reduce using rule 83 (assign -> ID error expr SEMI .)
    STRING          reduce using rule 83 (assign -> ID error expr SEMI .)
    VOID            reduce using rule 83 (assign -> ID error expr SEMI .)
    DATATYPE        reduce using rule 83 (assign -> ID error expr SEMI .)
    $end            reduce using rule 83 (assign -> ID error expr SEMI .)
    RBRACE          reduce using rule 83 (assign -> ID error expr SEMI .)


state 192

    (91) assign -> ID DOT ID error . expr SEMI
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    expr                           shift and go to state 251
    id                             shift and go to state 76
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 193

    (92) assign -> ID DOT ID EQUALS . error SEMI
    (93) assign -> ID DOT ID EQUALS . expr error
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    error           shift and go to state 252
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    expr                           shift and go to state 253
    id                             shift and go to state 76
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 194

    (55) expr -> id LPAREN args RPAREN .

    SEMI            reduce using rule 55 (expr -> id LPAREN args RPAREN .)
    PLUS            reduce using rule 55 (expr -> id LPAREN args RPAREN .)
    MINUS           reduce using rule 55 (expr -> id LPAREN args RPAREN .)
    MUL             reduce using rule 55 (expr -> id LPAREN args RPAREN .)
    DIVIDE          reduce using rule 55 (expr -> id LPAREN args RPAREN .)
    INTDIVIDE       reduce using rule 55 (expr -> id LPAREN args RPAREN .)
    MODULO          reduce using rule 55 (expr -> id LPAREN args RPAREN .)
    POW             reduce using rule 55 (expr -> id LPAREN args RPAREN .)
    LE              reduce using rule 55 (expr -> id LPAREN args RPAREN .)
    GE              reduce using rule 55 (expr -> id LPAREN args RPAREN .)
    LT              reduce using rule 55 (expr -> id LPAREN args RPAREN .)
    GT              reduce using rule 55 (expr -> id LPAREN args RPAREN .)
    EQ              reduce using rule 55 (expr -> id LPAREN args RPAREN .)
    NE              reduce using rule 55 (expr -> id LPAREN args RPAREN .)
    error           reduce using rule 55 (expr -> id LPAREN args RPAREN .)
    LAND            reduce using rule 55 (expr -> id LPAREN args RPAREN .)
    LOR             reduce using rule 55 (expr -> id LPAREN args RPAREN .)
    BAND            reduce using rule 55 (expr -> id LPAREN args RPAREN .)
    BOR             reduce using rule 55 (expr -> id LPAREN args RPAREN .)
    RPAREN          reduce using rule 55 (expr -> id LPAREN args RPAREN .)
    COMMA           reduce using rule 55 (expr -> id LPAREN args RPAREN .)
    RBRACKET        reduce using rule 55 (expr -> id LPAREN args RPAREN .)
    RBRACE          reduce using rule 55 (expr -> id LPAREN args RPAREN .)


state 195

    (57) expr -> id LPAREN args error .
    (61) args -> args error . expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for error resolved as shift
    SEMI            reduce using rule 57 (expr -> id LPAREN args error .)
    PLUS            reduce using rule 57 (expr -> id LPAREN args error .)
    MUL             reduce using rule 57 (expr -> id LPAREN args error .)
    DIVIDE          reduce using rule 57 (expr -> id LPAREN args error .)
    INTDIVIDE       reduce using rule 57 (expr -> id LPAREN args error .)
    MODULO          reduce using rule 57 (expr -> id LPAREN args error .)
    POW             reduce using rule 57 (expr -> id LPAREN args error .)
    LE              reduce using rule 57 (expr -> id LPAREN args error .)
    GE              reduce using rule 57 (expr -> id LPAREN args error .)
    LT              reduce using rule 57 (expr -> id LPAREN args error .)
    GT              reduce using rule 57 (expr -> id LPAREN args error .)
    EQ              reduce using rule 57 (expr -> id LPAREN args error .)
    NE              reduce using rule 57 (expr -> id LPAREN args error .)
    LAND            reduce using rule 57 (expr -> id LPAREN args error .)
    LOR             reduce using rule 57 (expr -> id LPAREN args error .)
    BAND            reduce using rule 57 (expr -> id LPAREN args error .)
    BOR             reduce using rule 57 (expr -> id LPAREN args error .)
    RPAREN          reduce using rule 57 (expr -> id LPAREN args error .)
    COMMA           reduce using rule 57 (expr -> id LPAREN args error .)
    RBRACKET        reduce using rule 57 (expr -> id LPAREN args error .)
    RBRACE          reduce using rule 57 (expr -> id LPAREN args error .)
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

  ! MINUS           [ reduce using rule 57 (expr -> id LPAREN args error .) ]
  ! error           [ reduce using rule 57 (expr -> id LPAREN args error .) ]

    id                             shift and go to state 76
    expr                           shift and go to state 254
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 196

    (60) args -> args COMMA . expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    expr                           shift and go to state 255
    id                             shift and go to state 76
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 197

    (61) args -> args error . expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    expr                           shift and go to state 254
    id                             shift and go to state 76
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 198

    (56) expr -> id error args RPAREN .

    SEMI            reduce using rule 56 (expr -> id error args RPAREN .)
    PLUS            reduce using rule 56 (expr -> id error args RPAREN .)
    MINUS           reduce using rule 56 (expr -> id error args RPAREN .)
    MUL             reduce using rule 56 (expr -> id error args RPAREN .)
    DIVIDE          reduce using rule 56 (expr -> id error args RPAREN .)
    INTDIVIDE       reduce using rule 56 (expr -> id error args RPAREN .)
    MODULO          reduce using rule 56 (expr -> id error args RPAREN .)
    POW             reduce using rule 56 (expr -> id error args RPAREN .)
    LE              reduce using rule 56 (expr -> id error args RPAREN .)
    GE              reduce using rule 56 (expr -> id error args RPAREN .)
    LT              reduce using rule 56 (expr -> id error args RPAREN .)
    GT              reduce using rule 56 (expr -> id error args RPAREN .)
    EQ              reduce using rule 56 (expr -> id error args RPAREN .)
    NE              reduce using rule 56 (expr -> id error args RPAREN .)
    error           reduce using rule 56 (expr -> id error args RPAREN .)
    LAND            reduce using rule 56 (expr -> id error args RPAREN .)
    LOR             reduce using rule 56 (expr -> id error args RPAREN .)
    BAND            reduce using rule 56 (expr -> id error args RPAREN .)
    BOR             reduce using rule 56 (expr -> id error args RPAREN .)
    RPAREN          reduce using rule 56 (expr -> id error args RPAREN .)
    COMMA           reduce using rule 56 (expr -> id error args RPAREN .)
    RBRACKET        reduce using rule 56 (expr -> id error args RPAREN .)
    RBRACE          reduce using rule 56 (expr -> id error args RPAREN .)


state 199

    (138) expr -> id LBRACKET expr RBRACKET .
    (82) assign -> id LBRACKET expr RBRACKET . EQUALS expr SEMI

    SEMI            reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    PLUS            reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    MINUS           reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    MUL             reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    DIVIDE          reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    INTDIVIDE       reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    MODULO          reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    POW             reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    LE              reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    GE              reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    LT              reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    GT              reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    EQ              reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    NE              reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    error           reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    LAND            reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    LOR             reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    BAND            reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    BOR             reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    EQUALS          shift and go to state 256


state 200

    (81) assign -> id DOT ID EQUALS . expr SEMI
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    id                             shift and go to state 76
    expr                           shift and go to state 257
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 201

    (79) assign -> id EQUALS expr SEMI .

    BREAK           reduce using rule 79 (assign -> id EQUALS expr SEMI .)
    CONTINUE        reduce using rule 79 (assign -> id EQUALS expr SEMI .)
    GOTO            reduce using rule 79 (assign -> id EQUALS expr SEMI .)
    MINUS           reduce using rule 79 (assign -> id EQUALS expr SEMI .)
    LNOT            reduce using rule 79 (assign -> id EQUALS expr SEMI .)
    NULL            reduce using rule 79 (assign -> id EQUALS expr SEMI .)
    LPAREN          reduce using rule 79 (assign -> id EQUALS expr SEMI .)
    ID              reduce using rule 79 (assign -> id EQUALS expr SEMI .)
    error           reduce using rule 79 (assign -> id EQUALS expr SEMI .)
    RETURN          reduce using rule 79 (assign -> id EQUALS expr SEMI .)
    FUNCTION        reduce using rule 79 (assign -> id EQUALS expr SEMI .)
    STRUCTURE       reduce using rule 79 (assign -> id EQUALS expr SEMI .)
    WHILE           reduce using rule 79 (assign -> id EQUALS expr SEMI .)
    DO              reduce using rule 79 (assign -> id EQUALS expr SEMI .)
    IF              reduce using rule 79 (assign -> id EQUALS expr SEMI .)
    INTEGER         reduce using rule 79 (assign -> id EQUALS expr SEMI .)
    DOUBLE          reduce using rule 79 (assign -> id EQUALS expr SEMI .)
    BOOL            reduce using rule 79 (assign -> id EQUALS expr SEMI .)
    STRING          reduce using rule 79 (assign -> id EQUALS expr SEMI .)
    VOID            reduce using rule 79 (assign -> id EQUALS expr SEMI .)
    DATATYPE        reduce using rule 79 (assign -> id EQUALS expr SEMI .)
    $end            reduce using rule 79 (assign -> id EQUALS expr SEMI .)
    RBRACE          reduce using rule 79 (assign -> id EQUALS expr SEMI .)


state 202

    (80) assign -> id EQUALS LBRACE args . RBRACE SEMI
    (60) args -> args . COMMA expr
    (61) args -> args . error expr

    RBRACE          shift and go to state 258
    COMMA           shift and go to state 196
    error           shift and go to state 197


state 203

    (138) expr -> id LBRACKET expr . RBRACKET
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

    RBRACKET        shift and go to state 259
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MUL             shift and go to state 45
    DIVIDE          shift and go to state 46
    INTDIVIDE       shift and go to state 47
    MODULO          shift and go to state 48
    POW             shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    LT              shift and go to state 52
    GT              shift and go to state 53
    EQ              shift and go to state 54
    NE              shift and go to state 55
    error           shift and go to state 56
    LAND            shift and go to state 57
    LOR             shift and go to state 58
    BAND            shift and go to state 59
    BOR             shift and go to state 60


state 204

    (139) expr -> id DOT ID .

    RPAREN          reduce using rule 139 (expr -> id DOT ID .)
    PLUS            reduce using rule 139 (expr -> id DOT ID .)
    MINUS           reduce using rule 139 (expr -> id DOT ID .)
    MUL             reduce using rule 139 (expr -> id DOT ID .)
    DIVIDE          reduce using rule 139 (expr -> id DOT ID .)
    INTDIVIDE       reduce using rule 139 (expr -> id DOT ID .)
    MODULO          reduce using rule 139 (expr -> id DOT ID .)
    POW             reduce using rule 139 (expr -> id DOT ID .)
    LE              reduce using rule 139 (expr -> id DOT ID .)
    GE              reduce using rule 139 (expr -> id DOT ID .)
    LT              reduce using rule 139 (expr -> id DOT ID .)
    GT              reduce using rule 139 (expr -> id DOT ID .)
    EQ              reduce using rule 139 (expr -> id DOT ID .)
    NE              reduce using rule 139 (expr -> id DOT ID .)
    error           reduce using rule 139 (expr -> id DOT ID .)
    LAND            reduce using rule 139 (expr -> id DOT ID .)
    LOR             reduce using rule 139 (expr -> id DOT ID .)
    BAND            reduce using rule 139 (expr -> id DOT ID .)
    BOR             reduce using rule 139 (expr -> id DOT ID .)
    SEMI            reduce using rule 139 (expr -> id DOT ID .)
    COMMA           reduce using rule 139 (expr -> id DOT ID .)
    RBRACKET        reduce using rule 139 (expr -> id DOT ID .)
    RBRACE          reduce using rule 139 (expr -> id DOT ID .)


state 205

    (4) body_block -> error scope RBRACE .

    WHILE           reduce using rule 4 (body_block -> error scope RBRACE .)
    error           reduce using rule 4 (body_block -> error scope RBRACE .)
    BREAK           reduce using rule 4 (body_block -> error scope RBRACE .)
    CONTINUE        reduce using rule 4 (body_block -> error scope RBRACE .)
    GOTO            reduce using rule 4 (body_block -> error scope RBRACE .)
    MINUS           reduce using rule 4 (body_block -> error scope RBRACE .)
    LNOT            reduce using rule 4 (body_block -> error scope RBRACE .)
    NULL            reduce using rule 4 (body_block -> error scope RBRACE .)
    LPAREN          reduce using rule 4 (body_block -> error scope RBRACE .)
    ID              reduce using rule 4 (body_block -> error scope RBRACE .)
    RETURN          reduce using rule 4 (body_block -> error scope RBRACE .)
    FUNCTION        reduce using rule 4 (body_block -> error scope RBRACE .)
    STRUCTURE       reduce using rule 4 (body_block -> error scope RBRACE .)
    DO              reduce using rule 4 (body_block -> error scope RBRACE .)
    IF              reduce using rule 4 (body_block -> error scope RBRACE .)
    INTEGER         reduce using rule 4 (body_block -> error scope RBRACE .)
    DOUBLE          reduce using rule 4 (body_block -> error scope RBRACE .)
    BOOL            reduce using rule 4 (body_block -> error scope RBRACE .)
    STRING          reduce using rule 4 (body_block -> error scope RBRACE .)
    VOID            reduce using rule 4 (body_block -> error scope RBRACE .)
    DATATYPE        reduce using rule 4 (body_block -> error scope RBRACE .)
    $end            reduce using rule 4 (body_block -> error scope RBRACE .)
    RBRACE          reduce using rule 4 (body_block -> error scope RBRACE .)


state 206

    (137) expr -> error LBRACKET RBRACKET id .

    SEMI            reduce using rule 137 (expr -> error LBRACKET RBRACKET id .)
    PLUS            reduce using rule 137 (expr -> error LBRACKET RBRACKET id .)
    MINUS           reduce using rule 137 (expr -> error LBRACKET RBRACKET id .)
    MUL             reduce using rule 137 (expr -> error LBRACKET RBRACKET id .)
    DIVIDE          reduce using rule 137 (expr -> error LBRACKET RBRACKET id .)
    INTDIVIDE       reduce using rule 137 (expr -> error LBRACKET RBRACKET id .)
    MODULO          reduce using rule 137 (expr -> error LBRACKET RBRACKET id .)
    POW             reduce using rule 137 (expr -> error LBRACKET RBRACKET id .)
    LE              reduce using rule 137 (expr -> error LBRACKET RBRACKET id .)
    GE              reduce using rule 137 (expr -> error LBRACKET RBRACKET id .)
    LT              reduce using rule 137 (expr -> error LBRACKET RBRACKET id .)
    GT              reduce using rule 137 (expr -> error LBRACKET RBRACKET id .)
    EQ              reduce using rule 137 (expr -> error LBRACKET RBRACKET id .)
    NE              reduce using rule 137 (expr -> error LBRACKET RBRACKET id .)
    error           reduce using rule 137 (expr -> error LBRACKET RBRACKET id .)
    LAND            reduce using rule 137 (expr -> error LBRACKET RBRACKET id .)
    LOR             reduce using rule 137 (expr -> error LBRACKET RBRACKET id .)
    BAND            reduce using rule 137 (expr -> error LBRACKET RBRACKET id .)
    BOR             reduce using rule 137 (expr -> error LBRACKET RBRACKET id .)
    RPAREN          reduce using rule 137 (expr -> error LBRACKET RBRACKET id .)
    COMMA           reduce using rule 137 (expr -> error LBRACKET RBRACKET id .)
    RBRACKET        reduce using rule 137 (expr -> error LBRACKET RBRACKET id .)
    RBRACE          reduce using rule 137 (expr -> error LBRACKET RBRACKET id .)


state 207

    (8) func_declaration -> error datatype id LPAREN . params RPAREN body_block
    (48) params -> .
    (49) params -> . param
    (50) params -> . params COMMA param
    (51) params -> . params error param
    (52) param -> . DATATYPE ID
    (53) param -> . error ID
    (54) param -> . DATATYPE error

  ! shift/reduce conflict for error resolved as shift
    RPAREN          reduce using rule 48 (params -> .)
    COMMA           reduce using rule 48 (params -> .)
    DATATYPE        shift and go to state 263
    error           shift and go to state 260

  ! error           [ reduce using rule 48 (params -> .) ]

    params                         shift and go to state 261
    param                          shift and go to state 262

state 208

    (29) while -> error body_block WHILE conditional . SEMI

    SEMI            shift and go to state 264


state 209

    (5) body_block -> LBRACE error RBRACE .

    WHILE           reduce using rule 5 (body_block -> LBRACE error RBRACE .)
    error           reduce using rule 5 (body_block -> LBRACE error RBRACE .)
    BREAK           reduce using rule 5 (body_block -> LBRACE error RBRACE .)
    CONTINUE        reduce using rule 5 (body_block -> LBRACE error RBRACE .)
    GOTO            reduce using rule 5 (body_block -> LBRACE error RBRACE .)
    MINUS           reduce using rule 5 (body_block -> LBRACE error RBRACE .)
    LNOT            reduce using rule 5 (body_block -> LBRACE error RBRACE .)
    NULL            reduce using rule 5 (body_block -> LBRACE error RBRACE .)
    LPAREN          reduce using rule 5 (body_block -> LBRACE error RBRACE .)
    ID              reduce using rule 5 (body_block -> LBRACE error RBRACE .)
    RETURN          reduce using rule 5 (body_block -> LBRACE error RBRACE .)
    FUNCTION        reduce using rule 5 (body_block -> LBRACE error RBRACE .)
    STRUCTURE       reduce using rule 5 (body_block -> LBRACE error RBRACE .)
    DO              reduce using rule 5 (body_block -> LBRACE error RBRACE .)
    IF              reduce using rule 5 (body_block -> LBRACE error RBRACE .)
    INTEGER         reduce using rule 5 (body_block -> LBRACE error RBRACE .)
    DOUBLE          reduce using rule 5 (body_block -> LBRACE error RBRACE .)
    BOOL            reduce using rule 5 (body_block -> LBRACE error RBRACE .)
    STRING          reduce using rule 5 (body_block -> LBRACE error RBRACE .)
    VOID            reduce using rule 5 (body_block -> LBRACE error RBRACE .)
    DATATYPE        reduce using rule 5 (body_block -> LBRACE error RBRACE .)
    $end            reduce using rule 5 (body_block -> LBRACE error RBRACE .)
    RBRACE          reduce using rule 5 (body_block -> LBRACE error RBRACE .)


state 210

    (6) body_block -> LBRACE scope error .
    (137) expr -> error . LBRACKET RBRACKET id
    (8) func_declaration -> error . datatype id LPAREN params RPAREN body_block
    (29) while -> error . body_block WHILE conditional SEMI
    (141) datatype -> . DATATYPE
    (4) body_block -> . error scope RBRACE
    (5) body_block -> . LBRACE error RBRACE
    (6) body_block -> . LBRACE scope error

  ! shift/reduce conflict for DATATYPE resolved as shift
  ! shift/reduce conflict for error resolved as shift
    WHILE           reduce using rule 6 (body_block -> LBRACE scope error .)
    BREAK           reduce using rule 6 (body_block -> LBRACE scope error .)
    CONTINUE        reduce using rule 6 (body_block -> LBRACE scope error .)
    GOTO            reduce using rule 6 (body_block -> LBRACE scope error .)
    MINUS           reduce using rule 6 (body_block -> LBRACE scope error .)
    LNOT            reduce using rule 6 (body_block -> LBRACE scope error .)
    NULL            reduce using rule 6 (body_block -> LBRACE scope error .)
    LPAREN          reduce using rule 6 (body_block -> LBRACE scope error .)
    ID              reduce using rule 6 (body_block -> LBRACE scope error .)
    RETURN          reduce using rule 6 (body_block -> LBRACE scope error .)
    FUNCTION        reduce using rule 6 (body_block -> LBRACE scope error .)
    STRUCTURE       reduce using rule 6 (body_block -> LBRACE scope error .)
    DO              reduce using rule 6 (body_block -> LBRACE scope error .)
    IF              reduce using rule 6 (body_block -> LBRACE scope error .)
    INTEGER         reduce using rule 6 (body_block -> LBRACE scope error .)
    DOUBLE          reduce using rule 6 (body_block -> LBRACE scope error .)
    BOOL            reduce using rule 6 (body_block -> LBRACE scope error .)
    STRING          reduce using rule 6 (body_block -> LBRACE scope error .)
    VOID            reduce using rule 6 (body_block -> LBRACE scope error .)
    $end            reduce using rule 6 (body_block -> LBRACE scope error .)
    RBRACE          reduce using rule 6 (body_block -> LBRACE scope error .)
    LBRACKET        shift and go to state 81
    DATATYPE        shift and go to state 40
    error           shift and go to state 80
    LBRACE          shift and go to state 84

  ! error           [ reduce using rule 6 (body_block -> LBRACE scope error .) ]
  ! DATATYPE        [ reduce using rule 6 (body_block -> LBRACE scope error .) ]

    datatype                       shift and go to state 82
    body_block                     shift and go to state 83

state 211

    (130) expr -> datatype id LBRACKET INTEGER . RBRACKET
    (132) expr -> datatype id LBRACKET INTEGER . RBRACKET EQUALS LBRACE args RBRACE

    RBRACKET        shift and go to state 265


state 212

    (62) var_declaration -> datatype id EQUALS expr . SEMI
    (69) var_declaration -> datatype id EQUALS expr . error
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

    SEMI            shift and go to state 266
    error           shift and go to state 267
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MUL             shift and go to state 45
    DIVIDE          shift and go to state 46
    INTDIVIDE       shift and go to state 47
    MODULO          shift and go to state 48
    POW             shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    LT              shift and go to state 52
    GT              shift and go to state 53
    EQ              shift and go to state 54
    NE              shift and go to state 55
    LAND            shift and go to state 57
    LOR             shift and go to state 58
    BAND            shift and go to state 59
    BOR             shift and go to state 60


state 213

    (70) var_declaration -> datatype id EQUALS error . SEMI
    (137) expr -> error . LBRACKET RBRACKET id

    SEMI            shift and go to state 268
    LBRACKET        shift and go to state 81


state 214

    (68) var_declaration -> datatype id error expr . SEMI
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

    SEMI            shift and go to state 269
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MUL             shift and go to state 45
    DIVIDE          shift and go to state 46
    INTDIVIDE       shift and go to state 47
    MODULO          shift and go to state 48
    POW             shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    LT              shift and go to state 52
    GT              shift and go to state 53
    EQ              shift and go to state 54
    NE              shift and go to state 55
    error           shift and go to state 56
    LAND            shift and go to state 57
    LOR             shift and go to state 58
    BAND            shift and go to state 59
    BOR             shift and go to state 60


state 215

    (135) expr -> datatype LBRACKET error id .

    SEMI            reduce using rule 135 (expr -> datatype LBRACKET error id .)
    PLUS            reduce using rule 135 (expr -> datatype LBRACKET error id .)
    MINUS           reduce using rule 135 (expr -> datatype LBRACKET error id .)
    MUL             reduce using rule 135 (expr -> datatype LBRACKET error id .)
    DIVIDE          reduce using rule 135 (expr -> datatype LBRACKET error id .)
    INTDIVIDE       reduce using rule 135 (expr -> datatype LBRACKET error id .)
    MODULO          reduce using rule 135 (expr -> datatype LBRACKET error id .)
    POW             reduce using rule 135 (expr -> datatype LBRACKET error id .)
    LE              reduce using rule 135 (expr -> datatype LBRACKET error id .)
    GE              reduce using rule 135 (expr -> datatype LBRACKET error id .)
    LT              reduce using rule 135 (expr -> datatype LBRACKET error id .)
    GT              reduce using rule 135 (expr -> datatype LBRACKET error id .)
    EQ              reduce using rule 135 (expr -> datatype LBRACKET error id .)
    NE              reduce using rule 135 (expr -> datatype LBRACKET error id .)
    error           reduce using rule 135 (expr -> datatype LBRACKET error id .)
    LAND            reduce using rule 135 (expr -> datatype LBRACKET error id .)
    LOR             reduce using rule 135 (expr -> datatype LBRACKET error id .)
    BAND            reduce using rule 135 (expr -> datatype LBRACKET error id .)
    BOR             reduce using rule 135 (expr -> datatype LBRACKET error id .)
    RPAREN          reduce using rule 135 (expr -> datatype LBRACKET error id .)
    COMMA           reduce using rule 135 (expr -> datatype LBRACKET error id .)
    RBRACKET        reduce using rule 135 (expr -> datatype LBRACKET error id .)
    RBRACE          reduce using rule 135 (expr -> datatype LBRACKET error id .)


state 216

    (136) expr -> datatype LBRACKET RBRACKET error .

    SEMI            reduce using rule 136 (expr -> datatype LBRACKET RBRACKET error .)
    PLUS            reduce using rule 136 (expr -> datatype LBRACKET RBRACKET error .)
    MINUS           reduce using rule 136 (expr -> datatype LBRACKET RBRACKET error .)
    MUL             reduce using rule 136 (expr -> datatype LBRACKET RBRACKET error .)
    DIVIDE          reduce using rule 136 (expr -> datatype LBRACKET RBRACKET error .)
    INTDIVIDE       reduce using rule 136 (expr -> datatype LBRACKET RBRACKET error .)
    MODULO          reduce using rule 136 (expr -> datatype LBRACKET RBRACKET error .)
    POW             reduce using rule 136 (expr -> datatype LBRACKET RBRACKET error .)
    LE              reduce using rule 136 (expr -> datatype LBRACKET RBRACKET error .)
    GE              reduce using rule 136 (expr -> datatype LBRACKET RBRACKET error .)
    LT              reduce using rule 136 (expr -> datatype LBRACKET RBRACKET error .)
    GT              reduce using rule 136 (expr -> datatype LBRACKET RBRACKET error .)
    EQ              reduce using rule 136 (expr -> datatype LBRACKET RBRACKET error .)
    NE              reduce using rule 136 (expr -> datatype LBRACKET RBRACKET error .)
    error           reduce using rule 136 (expr -> datatype LBRACKET RBRACKET error .)
    LAND            reduce using rule 136 (expr -> datatype LBRACKET RBRACKET error .)
    LOR             reduce using rule 136 (expr -> datatype LBRACKET RBRACKET error .)
    BAND            reduce using rule 136 (expr -> datatype LBRACKET RBRACKET error .)
    BOR             reduce using rule 136 (expr -> datatype LBRACKET RBRACKET error .)
    RPAREN          reduce using rule 136 (expr -> datatype LBRACKET RBRACKET error .)
    COMMA           reduce using rule 136 (expr -> datatype LBRACKET RBRACKET error .)
    RBRACKET        reduce using rule 136 (expr -> datatype LBRACKET RBRACKET error .)
    RBRACE          reduce using rule 136 (expr -> datatype LBRACKET RBRACKET error .)


state 217

    (134) expr -> datatype error RBRACKET id .

    SEMI            reduce using rule 134 (expr -> datatype error RBRACKET id .)
    PLUS            reduce using rule 134 (expr -> datatype error RBRACKET id .)
    MINUS           reduce using rule 134 (expr -> datatype error RBRACKET id .)
    MUL             reduce using rule 134 (expr -> datatype error RBRACKET id .)
    DIVIDE          reduce using rule 134 (expr -> datatype error RBRACKET id .)
    INTDIVIDE       reduce using rule 134 (expr -> datatype error RBRACKET id .)
    MODULO          reduce using rule 134 (expr -> datatype error RBRACKET id .)
    POW             reduce using rule 134 (expr -> datatype error RBRACKET id .)
    LE              reduce using rule 134 (expr -> datatype error RBRACKET id .)
    GE              reduce using rule 134 (expr -> datatype error RBRACKET id .)
    LT              reduce using rule 134 (expr -> datatype error RBRACKET id .)
    GT              reduce using rule 134 (expr -> datatype error RBRACKET id .)
    EQ              reduce using rule 134 (expr -> datatype error RBRACKET id .)
    NE              reduce using rule 134 (expr -> datatype error RBRACKET id .)
    error           reduce using rule 134 (expr -> datatype error RBRACKET id .)
    LAND            reduce using rule 134 (expr -> datatype error RBRACKET id .)
    LOR             reduce using rule 134 (expr -> datatype error RBRACKET id .)
    BAND            reduce using rule 134 (expr -> datatype error RBRACKET id .)
    BOR             reduce using rule 134 (expr -> datatype error RBRACKET id .)
    RPAREN          reduce using rule 134 (expr -> datatype error RBRACKET id .)
    COMMA           reduce using rule 134 (expr -> datatype error RBRACKET id .)
    RBRACKET        reduce using rule 134 (expr -> datatype error RBRACKET id .)
    RBRACE          reduce using rule 134 (expr -> datatype error RBRACKET id .)


state 218

    (67) var_declaration -> datatype error EQUALS expr . SEMI
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

    SEMI            shift and go to state 270
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MUL             shift and go to state 45
    DIVIDE          shift and go to state 46
    INTDIVIDE       shift and go to state 47
    MODULO          shift and go to state 48
    POW             shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    LT              shift and go to state 52
    GT              shift and go to state 53
    EQ              shift and go to state 54
    NE              shift and go to state 55
    error           shift and go to state 56
    LAND            shift and go to state 57
    LOR             shift and go to state 58
    BAND            shift and go to state 59
    BOR             shift and go to state 60


state 219

    (7) func_declaration -> FUNCTION datatype id LPAREN . params RPAREN basic_block
    (12) func_declaration -> FUNCTION datatype id LPAREN . params error body_block
    (48) params -> .
    (49) params -> . param
    (50) params -> . params COMMA param
    (51) params -> . params error param
    (52) param -> . DATATYPE ID
    (53) param -> . error ID
    (54) param -> . DATATYPE error

  ! shift/reduce conflict for error resolved as shift
    RPAREN          reduce using rule 48 (params -> .)
    COMMA           reduce using rule 48 (params -> .)
    DATATYPE        shift and go to state 263
    error           shift and go to state 260

  ! error           [ reduce using rule 48 (params -> .) ]

    params                         shift and go to state 271
    param                          shift and go to state 262

state 220

    (11) func_declaration -> FUNCTION datatype id error . params RPAREN body_block
    (48) params -> .
    (49) params -> . param
    (50) params -> . params COMMA param
    (51) params -> . params error param
    (52) param -> . DATATYPE ID
    (53) param -> . error ID
    (54) param -> . DATATYPE error

  ! shift/reduce conflict for error resolved as shift
    RPAREN          reduce using rule 48 (params -> .)
    COMMA           reduce using rule 48 (params -> .)
    DATATYPE        shift and go to state 263
    error           shift and go to state 260

  ! error           [ reduce using rule 48 (params -> .) ]

    params                         shift and go to state 272
    param                          shift and go to state 262

state 221

    (10) func_declaration -> FUNCTION datatype error LPAREN . params RPAREN body_block
    (48) params -> .
    (49) params -> . param
    (50) params -> . params COMMA param
    (51) params -> . params error param
    (52) param -> . DATATYPE ID
    (53) param -> . error ID
    (54) param -> . DATATYPE error

  ! shift/reduce conflict for error resolved as shift
    RPAREN          reduce using rule 48 (params -> .)
    COMMA           reduce using rule 48 (params -> .)
    DATATYPE        shift and go to state 263
    error           shift and go to state 260

  ! error           [ reduce using rule 48 (params -> .) ]

    params                         shift and go to state 273
    param                          shift and go to state 262

state 222

    (9) func_declaration -> FUNCTION error id LPAREN . params RPAREN body_block
    (48) params -> .
    (49) params -> . param
    (50) params -> . params COMMA param
    (51) params -> . params error param
    (52) param -> . DATATYPE ID
    (53) param -> . error ID
    (54) param -> . DATATYPE error

  ! shift/reduce conflict for error resolved as shift
    RPAREN          reduce using rule 48 (params -> .)
    COMMA           reduce using rule 48 (params -> .)
    DATATYPE        shift and go to state 263
    error           shift and go to state 260

  ! error           [ reduce using rule 48 (params -> .) ]

    params                         shift and go to state 274
    param                          shift and go to state 262

state 223

    (38) struct_declaration -> STRUCTURE id LBRACE struct_params . RBRACE
    (41) struct_declaration -> STRUCTURE id LBRACE struct_params . error
    (43) struct_params -> struct_params . COMMA struct_param
    (44) struct_params -> struct_params . error struct_param

    RBRACE          shift and go to state 275
    error           shift and go to state 276
    COMMA           shift and go to state 277


state 224

    (46) struct_param -> error . ID

    ID              shift and go to state 278


state 225

    (42) struct_params -> struct_param .

    RBRACE          reduce using rule 42 (struct_params -> struct_param .)
    error           reduce using rule 42 (struct_params -> struct_param .)
    COMMA           reduce using rule 42 (struct_params -> struct_param .)


state 226

    (45) struct_param -> DATATYPE . ID
    (47) struct_param -> DATATYPE . error

    ID              shift and go to state 279
    error           shift and go to state 280


state 227

    (40) struct_declaration -> STRUCTURE id error struct_params . RBRACE
    (43) struct_params -> struct_params . COMMA struct_param
    (44) struct_params -> struct_params . error struct_param

    RBRACE          shift and go to state 282
    COMMA           shift and go to state 277
    error           shift and go to state 281


state 228

    (39) struct_declaration -> STRUCTURE error LBRACE struct_params . RBRACE
    (43) struct_params -> struct_params . COMMA struct_param
    (44) struct_params -> struct_params . error struct_param

    RBRACE          shift and go to state 283
    COMMA           shift and go to state 277
    error           shift and go to state 281


state 229

    (3) basic_block -> LBRACE scope . RBRACE
    (13) scope -> scope . statement
    (15) statement -> . expr SEMI
    (16) statement -> . var_declaration
    (17) statement -> . return
    (18) statement -> . assign
    (19) statement -> . func_declaration
    (20) statement -> . struct_declaration
    (21) statement -> . while
    (22) statement -> . BREAK SEMI
    (23) statement -> . CONTINUE SEMI
    (24) statement -> . GOTO ID SEMI
    (25) statement -> . goto_mark
    (26) statement -> . if-else
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (62) var_declaration -> . datatype id EQUALS expr SEMI
    (63) var_declaration -> . datatype id SEMI
    (64) var_declaration -> . ID id SEMI
    (65) var_declaration -> . ID id EQUALS LBRACE args RBRACE SEMI
    (66) var_declaration -> . ID id EQUALS expr SEMI
    (67) var_declaration -> . datatype error EQUALS expr SEMI
    (68) var_declaration -> . datatype id error expr SEMI
    (69) var_declaration -> . datatype id EQUALS expr error
    (70) var_declaration -> . datatype id EQUALS error SEMI
    (71) var_declaration -> . datatype error SEMI
    (72) var_declaration -> . datatype id error
    (73) var_declaration -> . ID error EQUALS LBRACE args RBRACE SEMI
    (74) var_declaration -> . ID id error LBRACE args RBRACE SEMI
    (75) var_declaration -> . ID id EQUALS error args RBRACE SEMI
    (76) var_declaration -> . ID id EQUALS LBRACE error RBRACE SEMI
    (77) var_declaration -> . ID id EQUALS LBRACE args error SEMI
    (78) var_declaration -> . ID id EQUALS LBRACE args RBRACE error
    (94) return -> . RETURN expr SEMI
    (95) return -> . RETURN SEMI
    (96) return -> . RETURN error
    (79) assign -> . id EQUALS expr SEMI
    (80) assign -> . id EQUALS LBRACE args RBRACE SEMI
    (81) assign -> . id DOT ID EQUALS expr SEMI
    (82) assign -> . id LBRACKET expr RBRACKET EQUALS expr SEMI
    (83) assign -> . ID error expr SEMI
    (84) assign -> . ID EQUALS error SEMI
    (85) assign -> . ID EQUALS expr error
    (86) assign -> . ID error LBRACE args RBRACE SEMI
    (87) assign -> . ID EQUALS error args RBRACE SEMI
    (88) assign -> . ID EQUALS LBRACE error RBRACE SEMI
    (89) assign -> . ID EQUALS LBRACE args error SEMI
    (90) assign -> . ID EQUALS LBRACE args RBRACE error
    (91) assign -> . ID DOT ID error expr SEMI
    (92) assign -> . ID DOT ID EQUALS error SEMI
    (93) assign -> . ID DOT ID EQUALS expr error
    (7) func_declaration -> . FUNCTION datatype id LPAREN params RPAREN basic_block
    (8) func_declaration -> . error datatype id LPAREN params RPAREN body_block
    (9) func_declaration -> . FUNCTION error id LPAREN params RPAREN body_block
    (10) func_declaration -> . FUNCTION datatype error LPAREN params RPAREN body_block
    (11) func_declaration -> . FUNCTION datatype id error params RPAREN body_block
    (12) func_declaration -> . FUNCTION datatype id LPAREN params error body_block
    (38) struct_declaration -> . STRUCTURE id LBRACE struct_params RBRACE
    (39) struct_declaration -> . STRUCTURE error LBRACE struct_params RBRACE
    (40) struct_declaration -> . STRUCTURE id error struct_params RBRACE
    (41) struct_declaration -> . STRUCTURE id LBRACE struct_params error
    (27) while -> . WHILE conditional basic_block
    (28) while -> . DO basic_block WHILE conditional SEMI
    (29) while -> . error body_block WHILE conditional SEMI
    (30) while -> . DO body_block error conditional SEMI
    (31) while -> . DO body_block WHILE conditional error
    (140) goto_mark -> . ID COLON
    (32) if-else -> . IF conditional basic_block
    (33) if-else -> . IF conditional basic_block ELSE basic_block
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    RBRACE          shift and go to state 237
    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    GOTO            shift and go to state 13
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 14
    error           shift and go to state 19
    RETURN          shift and go to state 30
    FUNCTION        shift and go to state 31
    STRUCTURE       shift and go to state 32
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    statement                      shift and go to state 41
    expr                           shift and go to state 4
    var_declaration                shift and go to state 5
    return                         shift and go to state 6
    assign                         shift and go to state 7
    func_declaration               shift and go to state 8
    struct_declaration             shift and go to state 9
    while                          shift and go to state 10
    goto_mark                      shift and go to state 15
    if-else                        shift and go to state 16
    id                             shift and go to state 17
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 28

state 230

    (34) conditional -> LPAREN expr RPAREN .

    LBRACE          reduce using rule 34 (conditional -> LPAREN expr RPAREN .)
    SEMI            reduce using rule 34 (conditional -> LPAREN expr RPAREN .)
    error           reduce using rule 34 (conditional -> LPAREN expr RPAREN .)


state 231

    (37) conditional -> LPAREN expr error .
    (110) expr -> expr error . expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

  ! shift/reduce conflict for error resolved as shift
    LBRACE          reduce using rule 37 (conditional -> LPAREN expr error .)
    SEMI            reduce using rule 37 (conditional -> LPAREN expr error .)
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

  ! error           [ reduce using rule 37 (conditional -> LPAREN expr error .) ]

    expr                           shift and go to state 117
    id                             shift and go to state 76
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 232

    (36) conditional -> LPAREN error RPAREN .

    LBRACE          reduce using rule 36 (conditional -> LPAREN error RPAREN .)
    SEMI            reduce using rule 36 (conditional -> LPAREN error RPAREN .)
    error           reduce using rule 36 (conditional -> LPAREN error RPAREN .)


state 233

    (35) conditional -> error expr RPAREN .

    LBRACE          reduce using rule 35 (conditional -> error expr RPAREN .)
    SEMI            reduce using rule 35 (conditional -> error expr RPAREN .)
    error           reduce using rule 35 (conditional -> error expr RPAREN .)


state 234

    (28) while -> DO basic_block WHILE conditional . SEMI

    SEMI            shift and go to state 284


state 235

    (30) while -> DO body_block error conditional . SEMI

    SEMI            shift and go to state 285


state 236

    (31) while -> DO body_block WHILE conditional . error

    error           shift and go to state 286


state 237

    (3) basic_block -> LBRACE scope RBRACE .

    WHILE           reduce using rule 3 (basic_block -> LBRACE scope RBRACE .)
    BREAK           reduce using rule 3 (basic_block -> LBRACE scope RBRACE .)
    CONTINUE        reduce using rule 3 (basic_block -> LBRACE scope RBRACE .)
    GOTO            reduce using rule 3 (basic_block -> LBRACE scope RBRACE .)
    MINUS           reduce using rule 3 (basic_block -> LBRACE scope RBRACE .)
    LNOT            reduce using rule 3 (basic_block -> LBRACE scope RBRACE .)
    NULL            reduce using rule 3 (basic_block -> LBRACE scope RBRACE .)
    LPAREN          reduce using rule 3 (basic_block -> LBRACE scope RBRACE .)
    ID              reduce using rule 3 (basic_block -> LBRACE scope RBRACE .)
    error           reduce using rule 3 (basic_block -> LBRACE scope RBRACE .)
    RETURN          reduce using rule 3 (basic_block -> LBRACE scope RBRACE .)
    FUNCTION        reduce using rule 3 (basic_block -> LBRACE scope RBRACE .)
    STRUCTURE       reduce using rule 3 (basic_block -> LBRACE scope RBRACE .)
    DO              reduce using rule 3 (basic_block -> LBRACE scope RBRACE .)
    IF              reduce using rule 3 (basic_block -> LBRACE scope RBRACE .)
    INTEGER         reduce using rule 3 (basic_block -> LBRACE scope RBRACE .)
    DOUBLE          reduce using rule 3 (basic_block -> LBRACE scope RBRACE .)
    BOOL            reduce using rule 3 (basic_block -> LBRACE scope RBRACE .)
    STRING          reduce using rule 3 (basic_block -> LBRACE scope RBRACE .)
    VOID            reduce using rule 3 (basic_block -> LBRACE scope RBRACE .)
    DATATYPE        reduce using rule 3 (basic_block -> LBRACE scope RBRACE .)
    $end            reduce using rule 3 (basic_block -> LBRACE scope RBRACE .)
    RBRACE          reduce using rule 3 (basic_block -> LBRACE scope RBRACE .)
    ELSE            reduce using rule 3 (basic_block -> LBRACE scope RBRACE .)


state 238

    (33) if-else -> IF conditional basic_block ELSE . basic_block
    (3) basic_block -> . LBRACE scope RBRACE

    LBRACE          shift and go to state 170

    basic_block                    shift and go to state 287

state 239

    (131) expr -> ID id LBRACKET INTEGER RBRACKET .
    (133) expr -> ID id LBRACKET INTEGER RBRACKET . EQUALS LBRACE args RBRACE

    SEMI            reduce using rule 131 (expr -> ID id LBRACKET INTEGER RBRACKET .)
    PLUS            reduce using rule 131 (expr -> ID id LBRACKET INTEGER RBRACKET .)
    MINUS           reduce using rule 131 (expr -> ID id LBRACKET INTEGER RBRACKET .)
    MUL             reduce using rule 131 (expr -> ID id LBRACKET INTEGER RBRACKET .)
    DIVIDE          reduce using rule 131 (expr -> ID id LBRACKET INTEGER RBRACKET .)
    INTDIVIDE       reduce using rule 131 (expr -> ID id LBRACKET INTEGER RBRACKET .)
    MODULO          reduce using rule 131 (expr -> ID id LBRACKET INTEGER RBRACKET .)
    POW             reduce using rule 131 (expr -> ID id LBRACKET INTEGER RBRACKET .)
    LE              reduce using rule 131 (expr -> ID id LBRACKET INTEGER RBRACKET .)
    GE              reduce using rule 131 (expr -> ID id LBRACKET INTEGER RBRACKET .)
    LT              reduce using rule 131 (expr -> ID id LBRACKET INTEGER RBRACKET .)
    GT              reduce using rule 131 (expr -> ID id LBRACKET INTEGER RBRACKET .)
    EQ              reduce using rule 131 (expr -> ID id LBRACKET INTEGER RBRACKET .)
    NE              reduce using rule 131 (expr -> ID id LBRACKET INTEGER RBRACKET .)
    error           reduce using rule 131 (expr -> ID id LBRACKET INTEGER RBRACKET .)
    LAND            reduce using rule 131 (expr -> ID id LBRACKET INTEGER RBRACKET .)
    LOR             reduce using rule 131 (expr -> ID id LBRACKET INTEGER RBRACKET .)
    BAND            reduce using rule 131 (expr -> ID id LBRACKET INTEGER RBRACKET .)
    BOR             reduce using rule 131 (expr -> ID id LBRACKET INTEGER RBRACKET .)
    RPAREN          reduce using rule 131 (expr -> ID id LBRACKET INTEGER RBRACKET .)
    COMMA           reduce using rule 131 (expr -> ID id LBRACKET INTEGER RBRACKET .)
    RBRACKET        reduce using rule 131 (expr -> ID id LBRACKET INTEGER RBRACKET .)
    RBRACE          reduce using rule 131 (expr -> ID id LBRACKET INTEGER RBRACKET .)
    EQUALS          shift and go to state 288


state 240

    (65) var_declaration -> ID id EQUALS LBRACE args . RBRACE SEMI
    (77) var_declaration -> ID id EQUALS LBRACE args . error SEMI
    (78) var_declaration -> ID id EQUALS LBRACE args . RBRACE error
    (60) args -> args . COMMA expr
    (61) args -> args . error expr

    RBRACE          shift and go to state 289
    error           shift and go to state 290
    COMMA           shift and go to state 196


state 241

    (76) var_declaration -> ID id EQUALS LBRACE error . RBRACE SEMI
    (137) expr -> error . LBRACKET RBRACKET id

    RBRACE          shift and go to state 291
    LBRACKET        shift and go to state 81


state 242

    (66) var_declaration -> ID id EQUALS expr SEMI .

    BREAK           reduce using rule 66 (var_declaration -> ID id EQUALS expr SEMI .)
    CONTINUE        reduce using rule 66 (var_declaration -> ID id EQUALS expr SEMI .)
    GOTO            reduce using rule 66 (var_declaration -> ID id EQUALS expr SEMI .)
    MINUS           reduce using rule 66 (var_declaration -> ID id EQUALS expr SEMI .)
    LNOT            reduce using rule 66 (var_declaration -> ID id EQUALS expr SEMI .)
    NULL            reduce using rule 66 (var_declaration -> ID id EQUALS expr SEMI .)
    LPAREN          reduce using rule 66 (var_declaration -> ID id EQUALS expr SEMI .)
    ID              reduce using rule 66 (var_declaration -> ID id EQUALS expr SEMI .)
    error           reduce using rule 66 (var_declaration -> ID id EQUALS expr SEMI .)
    RETURN          reduce using rule 66 (var_declaration -> ID id EQUALS expr SEMI .)
    FUNCTION        reduce using rule 66 (var_declaration -> ID id EQUALS expr SEMI .)
    STRUCTURE       reduce using rule 66 (var_declaration -> ID id EQUALS expr SEMI .)
    WHILE           reduce using rule 66 (var_declaration -> ID id EQUALS expr SEMI .)
    DO              reduce using rule 66 (var_declaration -> ID id EQUALS expr SEMI .)
    IF              reduce using rule 66 (var_declaration -> ID id EQUALS expr SEMI .)
    INTEGER         reduce using rule 66 (var_declaration -> ID id EQUALS expr SEMI .)
    DOUBLE          reduce using rule 66 (var_declaration -> ID id EQUALS expr SEMI .)
    BOOL            reduce using rule 66 (var_declaration -> ID id EQUALS expr SEMI .)
    STRING          reduce using rule 66 (var_declaration -> ID id EQUALS expr SEMI .)
    VOID            reduce using rule 66 (var_declaration -> ID id EQUALS expr SEMI .)
    DATATYPE        reduce using rule 66 (var_declaration -> ID id EQUALS expr SEMI .)
    $end            reduce using rule 66 (var_declaration -> ID id EQUALS expr SEMI .)
    RBRACE          reduce using rule 66 (var_declaration -> ID id EQUALS expr SEMI .)


state 243

    (75) var_declaration -> ID id EQUALS error args . RBRACE SEMI
    (60) args -> args . COMMA expr
    (61) args -> args . error expr

    RBRACE          shift and go to state 292
    COMMA           shift and go to state 196
    error           shift and go to state 197


state 244

    (74) var_declaration -> ID id error LBRACE args . RBRACE SEMI
    (60) args -> args . COMMA expr
    (61) args -> args . error expr

    RBRACE          shift and go to state 293
    COMMA           shift and go to state 196
    error           shift and go to state 197


state 245

    (87) assign -> ID EQUALS error args RBRACE . SEMI

    SEMI            shift and go to state 294


state 246

    (88) assign -> ID EQUALS LBRACE error RBRACE . SEMI

    SEMI            shift and go to state 295


state 247

    (89) assign -> ID EQUALS LBRACE args error . SEMI
    (61) args -> args error . expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    SEMI            shift and go to state 296
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    expr                           shift and go to state 254
    id                             shift and go to state 76
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 248

    (90) assign -> ID EQUALS LBRACE args RBRACE . error

    error           shift and go to state 297


state 249

    (73) var_declaration -> ID error EQUALS LBRACE args . RBRACE SEMI
    (60) args -> args . COMMA expr
    (61) args -> args . error expr

    RBRACE          shift and go to state 298
    COMMA           shift and go to state 196
    error           shift and go to state 197


state 250

    (86) assign -> ID error LBRACE args RBRACE . SEMI

    SEMI            shift and go to state 299


state 251

    (91) assign -> ID DOT ID error expr . SEMI
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

    SEMI            shift and go to state 300
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MUL             shift and go to state 45
    DIVIDE          shift and go to state 46
    INTDIVIDE       shift and go to state 47
    MODULO          shift and go to state 48
    POW             shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    LT              shift and go to state 52
    GT              shift and go to state 53
    EQ              shift and go to state 54
    NE              shift and go to state 55
    error           shift and go to state 56
    LAND            shift and go to state 57
    LOR             shift and go to state 58
    BAND            shift and go to state 59
    BOR             shift and go to state 60


state 252

    (92) assign -> ID DOT ID EQUALS error . SEMI
    (137) expr -> error . LBRACKET RBRACKET id

    SEMI            shift and go to state 301
    LBRACKET        shift and go to state 81


state 253

    (93) assign -> ID DOT ID EQUALS expr . error
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

    error           shift and go to state 302
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MUL             shift and go to state 45
    DIVIDE          shift and go to state 46
    INTDIVIDE       shift and go to state 47
    MODULO          shift and go to state 48
    POW             shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    LT              shift and go to state 52
    GT              shift and go to state 53
    EQ              shift and go to state 54
    NE              shift and go to state 55
    LAND            shift and go to state 57
    LOR             shift and go to state 58
    BAND            shift and go to state 59
    BOR             shift and go to state 60


state 254

    (61) args -> args error expr .
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

  ! shift/reduce conflict for error resolved as shift
    RPAREN          reduce using rule 61 (args -> args error expr .)
    COMMA           reduce using rule 61 (args -> args error expr .)
    RBRACE          reduce using rule 61 (args -> args error expr .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MUL             shift and go to state 45
    DIVIDE          shift and go to state 46
    INTDIVIDE       shift and go to state 47
    MODULO          shift and go to state 48
    POW             shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    LT              shift and go to state 52
    GT              shift and go to state 53
    EQ              shift and go to state 54
    NE              shift and go to state 55
    error           shift and go to state 56
    LAND            shift and go to state 57
    LOR             shift and go to state 58
    BAND            shift and go to state 59
    BOR             shift and go to state 60

  ! error           [ reduce using rule 61 (args -> args error expr .) ]


state 255

    (60) args -> args COMMA expr .
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

    RPAREN          reduce using rule 60 (args -> args COMMA expr .)
    error           reduce using rule 60 (args -> args COMMA expr .)
    COMMA           reduce using rule 60 (args -> args COMMA expr .)
    RBRACE          reduce using rule 60 (args -> args COMMA expr .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MUL             shift and go to state 45
    DIVIDE          shift and go to state 46
    INTDIVIDE       shift and go to state 47
    MODULO          shift and go to state 48
    POW             shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    LT              shift and go to state 52
    GT              shift and go to state 53
    EQ              shift and go to state 54
    NE              shift and go to state 55
    LAND            shift and go to state 57
    LOR             shift and go to state 58
    BAND            shift and go to state 59
    BOR             shift and go to state 60

  ! error           [ shift and go to state 56 ]


state 256

    (82) assign -> id LBRACKET expr RBRACKET EQUALS . expr SEMI
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    id                             shift and go to state 76
    expr                           shift and go to state 303
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 257

    (81) assign -> id DOT ID EQUALS expr . SEMI
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

    SEMI            shift and go to state 304
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MUL             shift and go to state 45
    DIVIDE          shift and go to state 46
    INTDIVIDE       shift and go to state 47
    MODULO          shift and go to state 48
    POW             shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    LT              shift and go to state 52
    GT              shift and go to state 53
    EQ              shift and go to state 54
    NE              shift and go to state 55
    error           shift and go to state 56
    LAND            shift and go to state 57
    LOR             shift and go to state 58
    BAND            shift and go to state 59
    BOR             shift and go to state 60


state 258

    (80) assign -> id EQUALS LBRACE args RBRACE . SEMI

    SEMI            shift and go to state 305


state 259

    (138) expr -> id LBRACKET expr RBRACKET .

    RPAREN          reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    PLUS            reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    MINUS           reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    MUL             reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    DIVIDE          reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    INTDIVIDE       reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    MODULO          reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    POW             reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    LE              reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    GE              reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    LT              reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    GT              reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    EQ              reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    NE              reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    error           reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    LAND            reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    LOR             reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    BAND            reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    BOR             reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    SEMI            reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    COMMA           reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    RBRACKET        reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)
    RBRACE          reduce using rule 138 (expr -> id LBRACKET expr RBRACKET .)


state 260

    (53) param -> error . ID

    ID              shift and go to state 306


state 261

    (8) func_declaration -> error datatype id LPAREN params . RPAREN body_block
    (50) params -> params . COMMA param
    (51) params -> params . error param

    RPAREN          shift and go to state 308
    COMMA           shift and go to state 309
    error           shift and go to state 307


state 262

    (49) params -> param .

    RPAREN          reduce using rule 49 (params -> param .)
    COMMA           reduce using rule 49 (params -> param .)
    error           reduce using rule 49 (params -> param .)


state 263

    (52) param -> DATATYPE . ID
    (54) param -> DATATYPE . error

    ID              shift and go to state 310
    error           shift and go to state 311


state 264

    (29) while -> error body_block WHILE conditional SEMI .

    BREAK           reduce using rule 29 (while -> error body_block WHILE conditional SEMI .)
    CONTINUE        reduce using rule 29 (while -> error body_block WHILE conditional SEMI .)
    GOTO            reduce using rule 29 (while -> error body_block WHILE conditional SEMI .)
    MINUS           reduce using rule 29 (while -> error body_block WHILE conditional SEMI .)
    LNOT            reduce using rule 29 (while -> error body_block WHILE conditional SEMI .)
    NULL            reduce using rule 29 (while -> error body_block WHILE conditional SEMI .)
    LPAREN          reduce using rule 29 (while -> error body_block WHILE conditional SEMI .)
    ID              reduce using rule 29 (while -> error body_block WHILE conditional SEMI .)
    error           reduce using rule 29 (while -> error body_block WHILE conditional SEMI .)
    RETURN          reduce using rule 29 (while -> error body_block WHILE conditional SEMI .)
    FUNCTION        reduce using rule 29 (while -> error body_block WHILE conditional SEMI .)
    STRUCTURE       reduce using rule 29 (while -> error body_block WHILE conditional SEMI .)
    WHILE           reduce using rule 29 (while -> error body_block WHILE conditional SEMI .)
    DO              reduce using rule 29 (while -> error body_block WHILE conditional SEMI .)
    IF              reduce using rule 29 (while -> error body_block WHILE conditional SEMI .)
    INTEGER         reduce using rule 29 (while -> error body_block WHILE conditional SEMI .)
    DOUBLE          reduce using rule 29 (while -> error body_block WHILE conditional SEMI .)
    BOOL            reduce using rule 29 (while -> error body_block WHILE conditional SEMI .)
    STRING          reduce using rule 29 (while -> error body_block WHILE conditional SEMI .)
    VOID            reduce using rule 29 (while -> error body_block WHILE conditional SEMI .)
    DATATYPE        reduce using rule 29 (while -> error body_block WHILE conditional SEMI .)
    $end            reduce using rule 29 (while -> error body_block WHILE conditional SEMI .)
    RBRACE          reduce using rule 29 (while -> error body_block WHILE conditional SEMI .)


state 265

    (130) expr -> datatype id LBRACKET INTEGER RBRACKET .
    (132) expr -> datatype id LBRACKET INTEGER RBRACKET . EQUALS LBRACE args RBRACE

    SEMI            reduce using rule 130 (expr -> datatype id LBRACKET INTEGER RBRACKET .)
    PLUS            reduce using rule 130 (expr -> datatype id LBRACKET INTEGER RBRACKET .)
    MINUS           reduce using rule 130 (expr -> datatype id LBRACKET INTEGER RBRACKET .)
    MUL             reduce using rule 130 (expr -> datatype id LBRACKET INTEGER RBRACKET .)
    DIVIDE          reduce using rule 130 (expr -> datatype id LBRACKET INTEGER RBRACKET .)
    INTDIVIDE       reduce using rule 130 (expr -> datatype id LBRACKET INTEGER RBRACKET .)
    MODULO          reduce using rule 130 (expr -> datatype id LBRACKET INTEGER RBRACKET .)
    POW             reduce using rule 130 (expr -> datatype id LBRACKET INTEGER RBRACKET .)
    LE              reduce using rule 130 (expr -> datatype id LBRACKET INTEGER RBRACKET .)
    GE              reduce using rule 130 (expr -> datatype id LBRACKET INTEGER RBRACKET .)
    LT              reduce using rule 130 (expr -> datatype id LBRACKET INTEGER RBRACKET .)
    GT              reduce using rule 130 (expr -> datatype id LBRACKET INTEGER RBRACKET .)
    EQ              reduce using rule 130 (expr -> datatype id LBRACKET INTEGER RBRACKET .)
    NE              reduce using rule 130 (expr -> datatype id LBRACKET INTEGER RBRACKET .)
    error           reduce using rule 130 (expr -> datatype id LBRACKET INTEGER RBRACKET .)
    LAND            reduce using rule 130 (expr -> datatype id LBRACKET INTEGER RBRACKET .)
    LOR             reduce using rule 130 (expr -> datatype id LBRACKET INTEGER RBRACKET .)
    BAND            reduce using rule 130 (expr -> datatype id LBRACKET INTEGER RBRACKET .)
    BOR             reduce using rule 130 (expr -> datatype id LBRACKET INTEGER RBRACKET .)
    RPAREN          reduce using rule 130 (expr -> datatype id LBRACKET INTEGER RBRACKET .)
    COMMA           reduce using rule 130 (expr -> datatype id LBRACKET INTEGER RBRACKET .)
    RBRACKET        reduce using rule 130 (expr -> datatype id LBRACKET INTEGER RBRACKET .)
    RBRACE          reduce using rule 130 (expr -> datatype id LBRACKET INTEGER RBRACKET .)
    EQUALS          shift and go to state 312


state 266

    (62) var_declaration -> datatype id EQUALS expr SEMI .

    BREAK           reduce using rule 62 (var_declaration -> datatype id EQUALS expr SEMI .)
    CONTINUE        reduce using rule 62 (var_declaration -> datatype id EQUALS expr SEMI .)
    GOTO            reduce using rule 62 (var_declaration -> datatype id EQUALS expr SEMI .)
    MINUS           reduce using rule 62 (var_declaration -> datatype id EQUALS expr SEMI .)
    LNOT            reduce using rule 62 (var_declaration -> datatype id EQUALS expr SEMI .)
    NULL            reduce using rule 62 (var_declaration -> datatype id EQUALS expr SEMI .)
    LPAREN          reduce using rule 62 (var_declaration -> datatype id EQUALS expr SEMI .)
    ID              reduce using rule 62 (var_declaration -> datatype id EQUALS expr SEMI .)
    error           reduce using rule 62 (var_declaration -> datatype id EQUALS expr SEMI .)
    RETURN          reduce using rule 62 (var_declaration -> datatype id EQUALS expr SEMI .)
    FUNCTION        reduce using rule 62 (var_declaration -> datatype id EQUALS expr SEMI .)
    STRUCTURE       reduce using rule 62 (var_declaration -> datatype id EQUALS expr SEMI .)
    WHILE           reduce using rule 62 (var_declaration -> datatype id EQUALS expr SEMI .)
    DO              reduce using rule 62 (var_declaration -> datatype id EQUALS expr SEMI .)
    IF              reduce using rule 62 (var_declaration -> datatype id EQUALS expr SEMI .)
    INTEGER         reduce using rule 62 (var_declaration -> datatype id EQUALS expr SEMI .)
    DOUBLE          reduce using rule 62 (var_declaration -> datatype id EQUALS expr SEMI .)
    BOOL            reduce using rule 62 (var_declaration -> datatype id EQUALS expr SEMI .)
    STRING          reduce using rule 62 (var_declaration -> datatype id EQUALS expr SEMI .)
    VOID            reduce using rule 62 (var_declaration -> datatype id EQUALS expr SEMI .)
    DATATYPE        reduce using rule 62 (var_declaration -> datatype id EQUALS expr SEMI .)
    $end            reduce using rule 62 (var_declaration -> datatype id EQUALS expr SEMI .)
    RBRACE          reduce using rule 62 (var_declaration -> datatype id EQUALS expr SEMI .)


state 267

    (69) var_declaration -> datatype id EQUALS expr error .
    (110) expr -> expr error . expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LNOT resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for DATATYPE resolved as shift
    BREAK           reduce using rule 69 (var_declaration -> datatype id EQUALS expr error .)
    CONTINUE        reduce using rule 69 (var_declaration -> datatype id EQUALS expr error .)
    GOTO            reduce using rule 69 (var_declaration -> datatype id EQUALS expr error .)
    RETURN          reduce using rule 69 (var_declaration -> datatype id EQUALS expr error .)
    FUNCTION        reduce using rule 69 (var_declaration -> datatype id EQUALS expr error .)
    STRUCTURE       reduce using rule 69 (var_declaration -> datatype id EQUALS expr error .)
    WHILE           reduce using rule 69 (var_declaration -> datatype id EQUALS expr error .)
    DO              reduce using rule 69 (var_declaration -> datatype id EQUALS expr error .)
    IF              reduce using rule 69 (var_declaration -> datatype id EQUALS expr error .)
    $end            reduce using rule 69 (var_declaration -> datatype id EQUALS expr error .)
    RBRACE          reduce using rule 69 (var_declaration -> datatype id EQUALS expr error .)
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

  ! MINUS           [ reduce using rule 69 (var_declaration -> datatype id EQUALS expr error .) ]
  ! LNOT            [ reduce using rule 69 (var_declaration -> datatype id EQUALS expr error .) ]
  ! NULL            [ reduce using rule 69 (var_declaration -> datatype id EQUALS expr error .) ]
  ! LPAREN          [ reduce using rule 69 (var_declaration -> datatype id EQUALS expr error .) ]
  ! ID              [ reduce using rule 69 (var_declaration -> datatype id EQUALS expr error .) ]
  ! error           [ reduce using rule 69 (var_declaration -> datatype id EQUALS expr error .) ]
  ! INTEGER         [ reduce using rule 69 (var_declaration -> datatype id EQUALS expr error .) ]
  ! DOUBLE          [ reduce using rule 69 (var_declaration -> datatype id EQUALS expr error .) ]
  ! BOOL            [ reduce using rule 69 (var_declaration -> datatype id EQUALS expr error .) ]
  ! STRING          [ reduce using rule 69 (var_declaration -> datatype id EQUALS expr error .) ]
  ! VOID            [ reduce using rule 69 (var_declaration -> datatype id EQUALS expr error .) ]
  ! DATATYPE        [ reduce using rule 69 (var_declaration -> datatype id EQUALS expr error .) ]

    datatype                       shift and go to state 78
    id                             shift and go to state 76
    expr                           shift and go to state 117
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26

state 268

    (70) var_declaration -> datatype id EQUALS error SEMI .

    BREAK           reduce using rule 70 (var_declaration -> datatype id EQUALS error SEMI .)
    CONTINUE        reduce using rule 70 (var_declaration -> datatype id EQUALS error SEMI .)
    GOTO            reduce using rule 70 (var_declaration -> datatype id EQUALS error SEMI .)
    MINUS           reduce using rule 70 (var_declaration -> datatype id EQUALS error SEMI .)
    LNOT            reduce using rule 70 (var_declaration -> datatype id EQUALS error SEMI .)
    NULL            reduce using rule 70 (var_declaration -> datatype id EQUALS error SEMI .)
    LPAREN          reduce using rule 70 (var_declaration -> datatype id EQUALS error SEMI .)
    ID              reduce using rule 70 (var_declaration -> datatype id EQUALS error SEMI .)
    error           reduce using rule 70 (var_declaration -> datatype id EQUALS error SEMI .)
    RETURN          reduce using rule 70 (var_declaration -> datatype id EQUALS error SEMI .)
    FUNCTION        reduce using rule 70 (var_declaration -> datatype id EQUALS error SEMI .)
    STRUCTURE       reduce using rule 70 (var_declaration -> datatype id EQUALS error SEMI .)
    WHILE           reduce using rule 70 (var_declaration -> datatype id EQUALS error SEMI .)
    DO              reduce using rule 70 (var_declaration -> datatype id EQUALS error SEMI .)
    IF              reduce using rule 70 (var_declaration -> datatype id EQUALS error SEMI .)
    INTEGER         reduce using rule 70 (var_declaration -> datatype id EQUALS error SEMI .)
    DOUBLE          reduce using rule 70 (var_declaration -> datatype id EQUALS error SEMI .)
    BOOL            reduce using rule 70 (var_declaration -> datatype id EQUALS error SEMI .)
    STRING          reduce using rule 70 (var_declaration -> datatype id EQUALS error SEMI .)
    VOID            reduce using rule 70 (var_declaration -> datatype id EQUALS error SEMI .)
    DATATYPE        reduce using rule 70 (var_declaration -> datatype id EQUALS error SEMI .)
    $end            reduce using rule 70 (var_declaration -> datatype id EQUALS error SEMI .)
    RBRACE          reduce using rule 70 (var_declaration -> datatype id EQUALS error SEMI .)


state 269

    (68) var_declaration -> datatype id error expr SEMI .

    BREAK           reduce using rule 68 (var_declaration -> datatype id error expr SEMI .)
    CONTINUE        reduce using rule 68 (var_declaration -> datatype id error expr SEMI .)
    GOTO            reduce using rule 68 (var_declaration -> datatype id error expr SEMI .)
    MINUS           reduce using rule 68 (var_declaration -> datatype id error expr SEMI .)
    LNOT            reduce using rule 68 (var_declaration -> datatype id error expr SEMI .)
    NULL            reduce using rule 68 (var_declaration -> datatype id error expr SEMI .)
    LPAREN          reduce using rule 68 (var_declaration -> datatype id error expr SEMI .)
    ID              reduce using rule 68 (var_declaration -> datatype id error expr SEMI .)
    error           reduce using rule 68 (var_declaration -> datatype id error expr SEMI .)
    RETURN          reduce using rule 68 (var_declaration -> datatype id error expr SEMI .)
    FUNCTION        reduce using rule 68 (var_declaration -> datatype id error expr SEMI .)
    STRUCTURE       reduce using rule 68 (var_declaration -> datatype id error expr SEMI .)
    WHILE           reduce using rule 68 (var_declaration -> datatype id error expr SEMI .)
    DO              reduce using rule 68 (var_declaration -> datatype id error expr SEMI .)
    IF              reduce using rule 68 (var_declaration -> datatype id error expr SEMI .)
    INTEGER         reduce using rule 68 (var_declaration -> datatype id error expr SEMI .)
    DOUBLE          reduce using rule 68 (var_declaration -> datatype id error expr SEMI .)
    BOOL            reduce using rule 68 (var_declaration -> datatype id error expr SEMI .)
    STRING          reduce using rule 68 (var_declaration -> datatype id error expr SEMI .)
    VOID            reduce using rule 68 (var_declaration -> datatype id error expr SEMI .)
    DATATYPE        reduce using rule 68 (var_declaration -> datatype id error expr SEMI .)
    $end            reduce using rule 68 (var_declaration -> datatype id error expr SEMI .)
    RBRACE          reduce using rule 68 (var_declaration -> datatype id error expr SEMI .)


state 270

    (67) var_declaration -> datatype error EQUALS expr SEMI .

    BREAK           reduce using rule 67 (var_declaration -> datatype error EQUALS expr SEMI .)
    CONTINUE        reduce using rule 67 (var_declaration -> datatype error EQUALS expr SEMI .)
    GOTO            reduce using rule 67 (var_declaration -> datatype error EQUALS expr SEMI .)
    MINUS           reduce using rule 67 (var_declaration -> datatype error EQUALS expr SEMI .)
    LNOT            reduce using rule 67 (var_declaration -> datatype error EQUALS expr SEMI .)
    NULL            reduce using rule 67 (var_declaration -> datatype error EQUALS expr SEMI .)
    LPAREN          reduce using rule 67 (var_declaration -> datatype error EQUALS expr SEMI .)
    ID              reduce using rule 67 (var_declaration -> datatype error EQUALS expr SEMI .)
    error           reduce using rule 67 (var_declaration -> datatype error EQUALS expr SEMI .)
    RETURN          reduce using rule 67 (var_declaration -> datatype error EQUALS expr SEMI .)
    FUNCTION        reduce using rule 67 (var_declaration -> datatype error EQUALS expr SEMI .)
    STRUCTURE       reduce using rule 67 (var_declaration -> datatype error EQUALS expr SEMI .)
    WHILE           reduce using rule 67 (var_declaration -> datatype error EQUALS expr SEMI .)
    DO              reduce using rule 67 (var_declaration -> datatype error EQUALS expr SEMI .)
    IF              reduce using rule 67 (var_declaration -> datatype error EQUALS expr SEMI .)
    INTEGER         reduce using rule 67 (var_declaration -> datatype error EQUALS expr SEMI .)
    DOUBLE          reduce using rule 67 (var_declaration -> datatype error EQUALS expr SEMI .)
    BOOL            reduce using rule 67 (var_declaration -> datatype error EQUALS expr SEMI .)
    STRING          reduce using rule 67 (var_declaration -> datatype error EQUALS expr SEMI .)
    VOID            reduce using rule 67 (var_declaration -> datatype error EQUALS expr SEMI .)
    DATATYPE        reduce using rule 67 (var_declaration -> datatype error EQUALS expr SEMI .)
    $end            reduce using rule 67 (var_declaration -> datatype error EQUALS expr SEMI .)
    RBRACE          reduce using rule 67 (var_declaration -> datatype error EQUALS expr SEMI .)


state 271

    (7) func_declaration -> FUNCTION datatype id LPAREN params . RPAREN basic_block
    (12) func_declaration -> FUNCTION datatype id LPAREN params . error body_block
    (50) params -> params . COMMA param
    (51) params -> params . error param

    RPAREN          shift and go to state 313
    error           shift and go to state 314
    COMMA           shift and go to state 309


state 272

    (11) func_declaration -> FUNCTION datatype id error params . RPAREN body_block
    (50) params -> params . COMMA param
    (51) params -> params . error param

    RPAREN          shift and go to state 315
    COMMA           shift and go to state 309
    error           shift and go to state 307


state 273

    (10) func_declaration -> FUNCTION datatype error LPAREN params . RPAREN body_block
    (50) params -> params . COMMA param
    (51) params -> params . error param

    RPAREN          shift and go to state 316
    COMMA           shift and go to state 309
    error           shift and go to state 307


state 274

    (9) func_declaration -> FUNCTION error id LPAREN params . RPAREN body_block
    (50) params -> params . COMMA param
    (51) params -> params . error param

    RPAREN          shift and go to state 317
    COMMA           shift and go to state 309
    error           shift and go to state 307


state 275

    (38) struct_declaration -> STRUCTURE id LBRACE struct_params RBRACE .

    BREAK           reduce using rule 38 (struct_declaration -> STRUCTURE id LBRACE struct_params RBRACE .)
    CONTINUE        reduce using rule 38 (struct_declaration -> STRUCTURE id LBRACE struct_params RBRACE .)
    GOTO            reduce using rule 38 (struct_declaration -> STRUCTURE id LBRACE struct_params RBRACE .)
    MINUS           reduce using rule 38 (struct_declaration -> STRUCTURE id LBRACE struct_params RBRACE .)
    LNOT            reduce using rule 38 (struct_declaration -> STRUCTURE id LBRACE struct_params RBRACE .)
    NULL            reduce using rule 38 (struct_declaration -> STRUCTURE id LBRACE struct_params RBRACE .)
    LPAREN          reduce using rule 38 (struct_declaration -> STRUCTURE id LBRACE struct_params RBRACE .)
    ID              reduce using rule 38 (struct_declaration -> STRUCTURE id LBRACE struct_params RBRACE .)
    error           reduce using rule 38 (struct_declaration -> STRUCTURE id LBRACE struct_params RBRACE .)
    RETURN          reduce using rule 38 (struct_declaration -> STRUCTURE id LBRACE struct_params RBRACE .)
    FUNCTION        reduce using rule 38 (struct_declaration -> STRUCTURE id LBRACE struct_params RBRACE .)
    STRUCTURE       reduce using rule 38 (struct_declaration -> STRUCTURE id LBRACE struct_params RBRACE .)
    WHILE           reduce using rule 38 (struct_declaration -> STRUCTURE id LBRACE struct_params RBRACE .)
    DO              reduce using rule 38 (struct_declaration -> STRUCTURE id LBRACE struct_params RBRACE .)
    IF              reduce using rule 38 (struct_declaration -> STRUCTURE id LBRACE struct_params RBRACE .)
    INTEGER         reduce using rule 38 (struct_declaration -> STRUCTURE id LBRACE struct_params RBRACE .)
    DOUBLE          reduce using rule 38 (struct_declaration -> STRUCTURE id LBRACE struct_params RBRACE .)
    BOOL            reduce using rule 38 (struct_declaration -> STRUCTURE id LBRACE struct_params RBRACE .)
    STRING          reduce using rule 38 (struct_declaration -> STRUCTURE id LBRACE struct_params RBRACE .)
    VOID            reduce using rule 38 (struct_declaration -> STRUCTURE id LBRACE struct_params RBRACE .)
    DATATYPE        reduce using rule 38 (struct_declaration -> STRUCTURE id LBRACE struct_params RBRACE .)
    $end            reduce using rule 38 (struct_declaration -> STRUCTURE id LBRACE struct_params RBRACE .)
    RBRACE          reduce using rule 38 (struct_declaration -> STRUCTURE id LBRACE struct_params RBRACE .)


state 276

    (41) struct_declaration -> STRUCTURE id LBRACE struct_params error .
    (44) struct_params -> struct_params error . struct_param
    (45) struct_param -> . DATATYPE ID
    (46) struct_param -> . error ID
    (47) struct_param -> . DATATYPE error

  ! shift/reduce conflict for DATATYPE resolved as shift
  ! shift/reduce conflict for error resolved as shift
    BREAK           reduce using rule 41 (struct_declaration -> STRUCTURE id LBRACE struct_params error .)
    CONTINUE        reduce using rule 41 (struct_declaration -> STRUCTURE id LBRACE struct_params error .)
    GOTO            reduce using rule 41 (struct_declaration -> STRUCTURE id LBRACE struct_params error .)
    MINUS           reduce using rule 41 (struct_declaration -> STRUCTURE id LBRACE struct_params error .)
    LNOT            reduce using rule 41 (struct_declaration -> STRUCTURE id LBRACE struct_params error .)
    NULL            reduce using rule 41 (struct_declaration -> STRUCTURE id LBRACE struct_params error .)
    LPAREN          reduce using rule 41 (struct_declaration -> STRUCTURE id LBRACE struct_params error .)
    ID              reduce using rule 41 (struct_declaration -> STRUCTURE id LBRACE struct_params error .)
    RETURN          reduce using rule 41 (struct_declaration -> STRUCTURE id LBRACE struct_params error .)
    FUNCTION        reduce using rule 41 (struct_declaration -> STRUCTURE id LBRACE struct_params error .)
    STRUCTURE       reduce using rule 41 (struct_declaration -> STRUCTURE id LBRACE struct_params error .)
    WHILE           reduce using rule 41 (struct_declaration -> STRUCTURE id LBRACE struct_params error .)
    DO              reduce using rule 41 (struct_declaration -> STRUCTURE id LBRACE struct_params error .)
    IF              reduce using rule 41 (struct_declaration -> STRUCTURE id LBRACE struct_params error .)
    INTEGER         reduce using rule 41 (struct_declaration -> STRUCTURE id LBRACE struct_params error .)
    DOUBLE          reduce using rule 41 (struct_declaration -> STRUCTURE id LBRACE struct_params error .)
    BOOL            reduce using rule 41 (struct_declaration -> STRUCTURE id LBRACE struct_params error .)
    STRING          reduce using rule 41 (struct_declaration -> STRUCTURE id LBRACE struct_params error .)
    VOID            reduce using rule 41 (struct_declaration -> STRUCTURE id LBRACE struct_params error .)
    $end            reduce using rule 41 (struct_declaration -> STRUCTURE id LBRACE struct_params error .)
    RBRACE          reduce using rule 41 (struct_declaration -> STRUCTURE id LBRACE struct_params error .)
    DATATYPE        shift and go to state 226
    error           shift and go to state 224

  ! error           [ reduce using rule 41 (struct_declaration -> STRUCTURE id LBRACE struct_params error .) ]
  ! DATATYPE        [ reduce using rule 41 (struct_declaration -> STRUCTURE id LBRACE struct_params error .) ]

    struct_param                   shift and go to state 318

state 277

    (43) struct_params -> struct_params COMMA . struct_param
    (45) struct_param -> . DATATYPE ID
    (46) struct_param -> . error ID
    (47) struct_param -> . DATATYPE error

    DATATYPE        shift and go to state 226
    error           shift and go to state 224

    struct_param                   shift and go to state 319

state 278

    (46) struct_param -> error ID .

    RBRACE          reduce using rule 46 (struct_param -> error ID .)
    error           reduce using rule 46 (struct_param -> error ID .)
    COMMA           reduce using rule 46 (struct_param -> error ID .)


state 279

    (45) struct_param -> DATATYPE ID .

    RBRACE          reduce using rule 45 (struct_param -> DATATYPE ID .)
    error           reduce using rule 45 (struct_param -> DATATYPE ID .)
    COMMA           reduce using rule 45 (struct_param -> DATATYPE ID .)


state 280

    (47) struct_param -> DATATYPE error .

    RBRACE          reduce using rule 47 (struct_param -> DATATYPE error .)
    error           reduce using rule 47 (struct_param -> DATATYPE error .)
    COMMA           reduce using rule 47 (struct_param -> DATATYPE error .)


state 281

    (44) struct_params -> struct_params error . struct_param
    (45) struct_param -> . DATATYPE ID
    (46) struct_param -> . error ID
    (47) struct_param -> . DATATYPE error

    DATATYPE        shift and go to state 226
    error           shift and go to state 224

    struct_param                   shift and go to state 318

state 282

    (40) struct_declaration -> STRUCTURE id error struct_params RBRACE .

    BREAK           reduce using rule 40 (struct_declaration -> STRUCTURE id error struct_params RBRACE .)
    CONTINUE        reduce using rule 40 (struct_declaration -> STRUCTURE id error struct_params RBRACE .)
    GOTO            reduce using rule 40 (struct_declaration -> STRUCTURE id error struct_params RBRACE .)
    MINUS           reduce using rule 40 (struct_declaration -> STRUCTURE id error struct_params RBRACE .)
    LNOT            reduce using rule 40 (struct_declaration -> STRUCTURE id error struct_params RBRACE .)
    NULL            reduce using rule 40 (struct_declaration -> STRUCTURE id error struct_params RBRACE .)
    LPAREN          reduce using rule 40 (struct_declaration -> STRUCTURE id error struct_params RBRACE .)
    ID              reduce using rule 40 (struct_declaration -> STRUCTURE id error struct_params RBRACE .)
    error           reduce using rule 40 (struct_declaration -> STRUCTURE id error struct_params RBRACE .)
    RETURN          reduce using rule 40 (struct_declaration -> STRUCTURE id error struct_params RBRACE .)
    FUNCTION        reduce using rule 40 (struct_declaration -> STRUCTURE id error struct_params RBRACE .)
    STRUCTURE       reduce using rule 40 (struct_declaration -> STRUCTURE id error struct_params RBRACE .)
    WHILE           reduce using rule 40 (struct_declaration -> STRUCTURE id error struct_params RBRACE .)
    DO              reduce using rule 40 (struct_declaration -> STRUCTURE id error struct_params RBRACE .)
    IF              reduce using rule 40 (struct_declaration -> STRUCTURE id error struct_params RBRACE .)
    INTEGER         reduce using rule 40 (struct_declaration -> STRUCTURE id error struct_params RBRACE .)
    DOUBLE          reduce using rule 40 (struct_declaration -> STRUCTURE id error struct_params RBRACE .)
    BOOL            reduce using rule 40 (struct_declaration -> STRUCTURE id error struct_params RBRACE .)
    STRING          reduce using rule 40 (struct_declaration -> STRUCTURE id error struct_params RBRACE .)
    VOID            reduce using rule 40 (struct_declaration -> STRUCTURE id error struct_params RBRACE .)
    DATATYPE        reduce using rule 40 (struct_declaration -> STRUCTURE id error struct_params RBRACE .)
    $end            reduce using rule 40 (struct_declaration -> STRUCTURE id error struct_params RBRACE .)
    RBRACE          reduce using rule 40 (struct_declaration -> STRUCTURE id error struct_params RBRACE .)


state 283

    (39) struct_declaration -> STRUCTURE error LBRACE struct_params RBRACE .

    BREAK           reduce using rule 39 (struct_declaration -> STRUCTURE error LBRACE struct_params RBRACE .)
    CONTINUE        reduce using rule 39 (struct_declaration -> STRUCTURE error LBRACE struct_params RBRACE .)
    GOTO            reduce using rule 39 (struct_declaration -> STRUCTURE error LBRACE struct_params RBRACE .)
    MINUS           reduce using rule 39 (struct_declaration -> STRUCTURE error LBRACE struct_params RBRACE .)
    LNOT            reduce using rule 39 (struct_declaration -> STRUCTURE error LBRACE struct_params RBRACE .)
    NULL            reduce using rule 39 (struct_declaration -> STRUCTURE error LBRACE struct_params RBRACE .)
    LPAREN          reduce using rule 39 (struct_declaration -> STRUCTURE error LBRACE struct_params RBRACE .)
    ID              reduce using rule 39 (struct_declaration -> STRUCTURE error LBRACE struct_params RBRACE .)
    error           reduce using rule 39 (struct_declaration -> STRUCTURE error LBRACE struct_params RBRACE .)
    RETURN          reduce using rule 39 (struct_declaration -> STRUCTURE error LBRACE struct_params RBRACE .)
    FUNCTION        reduce using rule 39 (struct_declaration -> STRUCTURE error LBRACE struct_params RBRACE .)
    STRUCTURE       reduce using rule 39 (struct_declaration -> STRUCTURE error LBRACE struct_params RBRACE .)
    WHILE           reduce using rule 39 (struct_declaration -> STRUCTURE error LBRACE struct_params RBRACE .)
    DO              reduce using rule 39 (struct_declaration -> STRUCTURE error LBRACE struct_params RBRACE .)
    IF              reduce using rule 39 (struct_declaration -> STRUCTURE error LBRACE struct_params RBRACE .)
    INTEGER         reduce using rule 39 (struct_declaration -> STRUCTURE error LBRACE struct_params RBRACE .)
    DOUBLE          reduce using rule 39 (struct_declaration -> STRUCTURE error LBRACE struct_params RBRACE .)
    BOOL            reduce using rule 39 (struct_declaration -> STRUCTURE error LBRACE struct_params RBRACE .)
    STRING          reduce using rule 39 (struct_declaration -> STRUCTURE error LBRACE struct_params RBRACE .)
    VOID            reduce using rule 39 (struct_declaration -> STRUCTURE error LBRACE struct_params RBRACE .)
    DATATYPE        reduce using rule 39 (struct_declaration -> STRUCTURE error LBRACE struct_params RBRACE .)
    $end            reduce using rule 39 (struct_declaration -> STRUCTURE error LBRACE struct_params RBRACE .)
    RBRACE          reduce using rule 39 (struct_declaration -> STRUCTURE error LBRACE struct_params RBRACE .)


state 284

    (28) while -> DO basic_block WHILE conditional SEMI .

    BREAK           reduce using rule 28 (while -> DO basic_block WHILE conditional SEMI .)
    CONTINUE        reduce using rule 28 (while -> DO basic_block WHILE conditional SEMI .)
    GOTO            reduce using rule 28 (while -> DO basic_block WHILE conditional SEMI .)
    MINUS           reduce using rule 28 (while -> DO basic_block WHILE conditional SEMI .)
    LNOT            reduce using rule 28 (while -> DO basic_block WHILE conditional SEMI .)
    NULL            reduce using rule 28 (while -> DO basic_block WHILE conditional SEMI .)
    LPAREN          reduce using rule 28 (while -> DO basic_block WHILE conditional SEMI .)
    ID              reduce using rule 28 (while -> DO basic_block WHILE conditional SEMI .)
    error           reduce using rule 28 (while -> DO basic_block WHILE conditional SEMI .)
    RETURN          reduce using rule 28 (while -> DO basic_block WHILE conditional SEMI .)
    FUNCTION        reduce using rule 28 (while -> DO basic_block WHILE conditional SEMI .)
    STRUCTURE       reduce using rule 28 (while -> DO basic_block WHILE conditional SEMI .)
    WHILE           reduce using rule 28 (while -> DO basic_block WHILE conditional SEMI .)
    DO              reduce using rule 28 (while -> DO basic_block WHILE conditional SEMI .)
    IF              reduce using rule 28 (while -> DO basic_block WHILE conditional SEMI .)
    INTEGER         reduce using rule 28 (while -> DO basic_block WHILE conditional SEMI .)
    DOUBLE          reduce using rule 28 (while -> DO basic_block WHILE conditional SEMI .)
    BOOL            reduce using rule 28 (while -> DO basic_block WHILE conditional SEMI .)
    STRING          reduce using rule 28 (while -> DO basic_block WHILE conditional SEMI .)
    VOID            reduce using rule 28 (while -> DO basic_block WHILE conditional SEMI .)
    DATATYPE        reduce using rule 28 (while -> DO basic_block WHILE conditional SEMI .)
    $end            reduce using rule 28 (while -> DO basic_block WHILE conditional SEMI .)
    RBRACE          reduce using rule 28 (while -> DO basic_block WHILE conditional SEMI .)


state 285

    (30) while -> DO body_block error conditional SEMI .

    BREAK           reduce using rule 30 (while -> DO body_block error conditional SEMI .)
    CONTINUE        reduce using rule 30 (while -> DO body_block error conditional SEMI .)
    GOTO            reduce using rule 30 (while -> DO body_block error conditional SEMI .)
    MINUS           reduce using rule 30 (while -> DO body_block error conditional SEMI .)
    LNOT            reduce using rule 30 (while -> DO body_block error conditional SEMI .)
    NULL            reduce using rule 30 (while -> DO body_block error conditional SEMI .)
    LPAREN          reduce using rule 30 (while -> DO body_block error conditional SEMI .)
    ID              reduce using rule 30 (while -> DO body_block error conditional SEMI .)
    error           reduce using rule 30 (while -> DO body_block error conditional SEMI .)
    RETURN          reduce using rule 30 (while -> DO body_block error conditional SEMI .)
    FUNCTION        reduce using rule 30 (while -> DO body_block error conditional SEMI .)
    STRUCTURE       reduce using rule 30 (while -> DO body_block error conditional SEMI .)
    WHILE           reduce using rule 30 (while -> DO body_block error conditional SEMI .)
    DO              reduce using rule 30 (while -> DO body_block error conditional SEMI .)
    IF              reduce using rule 30 (while -> DO body_block error conditional SEMI .)
    INTEGER         reduce using rule 30 (while -> DO body_block error conditional SEMI .)
    DOUBLE          reduce using rule 30 (while -> DO body_block error conditional SEMI .)
    BOOL            reduce using rule 30 (while -> DO body_block error conditional SEMI .)
    STRING          reduce using rule 30 (while -> DO body_block error conditional SEMI .)
    VOID            reduce using rule 30 (while -> DO body_block error conditional SEMI .)
    DATATYPE        reduce using rule 30 (while -> DO body_block error conditional SEMI .)
    $end            reduce using rule 30 (while -> DO body_block error conditional SEMI .)
    RBRACE          reduce using rule 30 (while -> DO body_block error conditional SEMI .)


state 286

    (31) while -> DO body_block WHILE conditional error .

    BREAK           reduce using rule 31 (while -> DO body_block WHILE conditional error .)
    CONTINUE        reduce using rule 31 (while -> DO body_block WHILE conditional error .)
    GOTO            reduce using rule 31 (while -> DO body_block WHILE conditional error .)
    MINUS           reduce using rule 31 (while -> DO body_block WHILE conditional error .)
    LNOT            reduce using rule 31 (while -> DO body_block WHILE conditional error .)
    NULL            reduce using rule 31 (while -> DO body_block WHILE conditional error .)
    LPAREN          reduce using rule 31 (while -> DO body_block WHILE conditional error .)
    ID              reduce using rule 31 (while -> DO body_block WHILE conditional error .)
    error           reduce using rule 31 (while -> DO body_block WHILE conditional error .)
    RETURN          reduce using rule 31 (while -> DO body_block WHILE conditional error .)
    FUNCTION        reduce using rule 31 (while -> DO body_block WHILE conditional error .)
    STRUCTURE       reduce using rule 31 (while -> DO body_block WHILE conditional error .)
    WHILE           reduce using rule 31 (while -> DO body_block WHILE conditional error .)
    DO              reduce using rule 31 (while -> DO body_block WHILE conditional error .)
    IF              reduce using rule 31 (while -> DO body_block WHILE conditional error .)
    INTEGER         reduce using rule 31 (while -> DO body_block WHILE conditional error .)
    DOUBLE          reduce using rule 31 (while -> DO body_block WHILE conditional error .)
    BOOL            reduce using rule 31 (while -> DO body_block WHILE conditional error .)
    STRING          reduce using rule 31 (while -> DO body_block WHILE conditional error .)
    VOID            reduce using rule 31 (while -> DO body_block WHILE conditional error .)
    DATATYPE        reduce using rule 31 (while -> DO body_block WHILE conditional error .)
    $end            reduce using rule 31 (while -> DO body_block WHILE conditional error .)
    RBRACE          reduce using rule 31 (while -> DO body_block WHILE conditional error .)


state 287

    (33) if-else -> IF conditional basic_block ELSE basic_block .

    BREAK           reduce using rule 33 (if-else -> IF conditional basic_block ELSE basic_block .)
    CONTINUE        reduce using rule 33 (if-else -> IF conditional basic_block ELSE basic_block .)
    GOTO            reduce using rule 33 (if-else -> IF conditional basic_block ELSE basic_block .)
    MINUS           reduce using rule 33 (if-else -> IF conditional basic_block ELSE basic_block .)
    LNOT            reduce using rule 33 (if-else -> IF conditional basic_block ELSE basic_block .)
    NULL            reduce using rule 33 (if-else -> IF conditional basic_block ELSE basic_block .)
    LPAREN          reduce using rule 33 (if-else -> IF conditional basic_block ELSE basic_block .)
    ID              reduce using rule 33 (if-else -> IF conditional basic_block ELSE basic_block .)
    error           reduce using rule 33 (if-else -> IF conditional basic_block ELSE basic_block .)
    RETURN          reduce using rule 33 (if-else -> IF conditional basic_block ELSE basic_block .)
    FUNCTION        reduce using rule 33 (if-else -> IF conditional basic_block ELSE basic_block .)
    STRUCTURE       reduce using rule 33 (if-else -> IF conditional basic_block ELSE basic_block .)
    WHILE           reduce using rule 33 (if-else -> IF conditional basic_block ELSE basic_block .)
    DO              reduce using rule 33 (if-else -> IF conditional basic_block ELSE basic_block .)
    IF              reduce using rule 33 (if-else -> IF conditional basic_block ELSE basic_block .)
    INTEGER         reduce using rule 33 (if-else -> IF conditional basic_block ELSE basic_block .)
    DOUBLE          reduce using rule 33 (if-else -> IF conditional basic_block ELSE basic_block .)
    BOOL            reduce using rule 33 (if-else -> IF conditional basic_block ELSE basic_block .)
    STRING          reduce using rule 33 (if-else -> IF conditional basic_block ELSE basic_block .)
    VOID            reduce using rule 33 (if-else -> IF conditional basic_block ELSE basic_block .)
    DATATYPE        reduce using rule 33 (if-else -> IF conditional basic_block ELSE basic_block .)
    $end            reduce using rule 33 (if-else -> IF conditional basic_block ELSE basic_block .)
    RBRACE          reduce using rule 33 (if-else -> IF conditional basic_block ELSE basic_block .)


state 288

    (133) expr -> ID id LBRACKET INTEGER RBRACKET EQUALS . LBRACE args RBRACE

    LBRACE          shift and go to state 320


state 289

    (65) var_declaration -> ID id EQUALS LBRACE args RBRACE . SEMI
    (78) var_declaration -> ID id EQUALS LBRACE args RBRACE . error

    SEMI            shift and go to state 321
    error           shift and go to state 322


state 290

    (77) var_declaration -> ID id EQUALS LBRACE args error . SEMI
    (61) args -> args error . expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    SEMI            shift and go to state 323
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    id                             shift and go to state 76
    expr                           shift and go to state 254
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 291

    (76) var_declaration -> ID id EQUALS LBRACE error RBRACE . SEMI

    SEMI            shift and go to state 324


state 292

    (75) var_declaration -> ID id EQUALS error args RBRACE . SEMI

    SEMI            shift and go to state 325


state 293

    (74) var_declaration -> ID id error LBRACE args RBRACE . SEMI

    SEMI            shift and go to state 326


state 294

    (87) assign -> ID EQUALS error args RBRACE SEMI .

    BREAK           reduce using rule 87 (assign -> ID EQUALS error args RBRACE SEMI .)
    CONTINUE        reduce using rule 87 (assign -> ID EQUALS error args RBRACE SEMI .)
    GOTO            reduce using rule 87 (assign -> ID EQUALS error args RBRACE SEMI .)
    MINUS           reduce using rule 87 (assign -> ID EQUALS error args RBRACE SEMI .)
    LNOT            reduce using rule 87 (assign -> ID EQUALS error args RBRACE SEMI .)
    NULL            reduce using rule 87 (assign -> ID EQUALS error args RBRACE SEMI .)
    LPAREN          reduce using rule 87 (assign -> ID EQUALS error args RBRACE SEMI .)
    ID              reduce using rule 87 (assign -> ID EQUALS error args RBRACE SEMI .)
    error           reduce using rule 87 (assign -> ID EQUALS error args RBRACE SEMI .)
    RETURN          reduce using rule 87 (assign -> ID EQUALS error args RBRACE SEMI .)
    FUNCTION        reduce using rule 87 (assign -> ID EQUALS error args RBRACE SEMI .)
    STRUCTURE       reduce using rule 87 (assign -> ID EQUALS error args RBRACE SEMI .)
    WHILE           reduce using rule 87 (assign -> ID EQUALS error args RBRACE SEMI .)
    DO              reduce using rule 87 (assign -> ID EQUALS error args RBRACE SEMI .)
    IF              reduce using rule 87 (assign -> ID EQUALS error args RBRACE SEMI .)
    INTEGER         reduce using rule 87 (assign -> ID EQUALS error args RBRACE SEMI .)
    DOUBLE          reduce using rule 87 (assign -> ID EQUALS error args RBRACE SEMI .)
    BOOL            reduce using rule 87 (assign -> ID EQUALS error args RBRACE SEMI .)
    STRING          reduce using rule 87 (assign -> ID EQUALS error args RBRACE SEMI .)
    VOID            reduce using rule 87 (assign -> ID EQUALS error args RBRACE SEMI .)
    DATATYPE        reduce using rule 87 (assign -> ID EQUALS error args RBRACE SEMI .)
    $end            reduce using rule 87 (assign -> ID EQUALS error args RBRACE SEMI .)
    RBRACE          reduce using rule 87 (assign -> ID EQUALS error args RBRACE SEMI .)


state 295

    (88) assign -> ID EQUALS LBRACE error RBRACE SEMI .

    BREAK           reduce using rule 88 (assign -> ID EQUALS LBRACE error RBRACE SEMI .)
    CONTINUE        reduce using rule 88 (assign -> ID EQUALS LBRACE error RBRACE SEMI .)
    GOTO            reduce using rule 88 (assign -> ID EQUALS LBRACE error RBRACE SEMI .)
    MINUS           reduce using rule 88 (assign -> ID EQUALS LBRACE error RBRACE SEMI .)
    LNOT            reduce using rule 88 (assign -> ID EQUALS LBRACE error RBRACE SEMI .)
    NULL            reduce using rule 88 (assign -> ID EQUALS LBRACE error RBRACE SEMI .)
    LPAREN          reduce using rule 88 (assign -> ID EQUALS LBRACE error RBRACE SEMI .)
    ID              reduce using rule 88 (assign -> ID EQUALS LBRACE error RBRACE SEMI .)
    error           reduce using rule 88 (assign -> ID EQUALS LBRACE error RBRACE SEMI .)
    RETURN          reduce using rule 88 (assign -> ID EQUALS LBRACE error RBRACE SEMI .)
    FUNCTION        reduce using rule 88 (assign -> ID EQUALS LBRACE error RBRACE SEMI .)
    STRUCTURE       reduce using rule 88 (assign -> ID EQUALS LBRACE error RBRACE SEMI .)
    WHILE           reduce using rule 88 (assign -> ID EQUALS LBRACE error RBRACE SEMI .)
    DO              reduce using rule 88 (assign -> ID EQUALS LBRACE error RBRACE SEMI .)
    IF              reduce using rule 88 (assign -> ID EQUALS LBRACE error RBRACE SEMI .)
    INTEGER         reduce using rule 88 (assign -> ID EQUALS LBRACE error RBRACE SEMI .)
    DOUBLE          reduce using rule 88 (assign -> ID EQUALS LBRACE error RBRACE SEMI .)
    BOOL            reduce using rule 88 (assign -> ID EQUALS LBRACE error RBRACE SEMI .)
    STRING          reduce using rule 88 (assign -> ID EQUALS LBRACE error RBRACE SEMI .)
    VOID            reduce using rule 88 (assign -> ID EQUALS LBRACE error RBRACE SEMI .)
    DATATYPE        reduce using rule 88 (assign -> ID EQUALS LBRACE error RBRACE SEMI .)
    $end            reduce using rule 88 (assign -> ID EQUALS LBRACE error RBRACE SEMI .)
    RBRACE          reduce using rule 88 (assign -> ID EQUALS LBRACE error RBRACE SEMI .)


state 296

    (89) assign -> ID EQUALS LBRACE args error SEMI .

    BREAK           reduce using rule 89 (assign -> ID EQUALS LBRACE args error SEMI .)
    CONTINUE        reduce using rule 89 (assign -> ID EQUALS LBRACE args error SEMI .)
    GOTO            reduce using rule 89 (assign -> ID EQUALS LBRACE args error SEMI .)
    MINUS           reduce using rule 89 (assign -> ID EQUALS LBRACE args error SEMI .)
    LNOT            reduce using rule 89 (assign -> ID EQUALS LBRACE args error SEMI .)
    NULL            reduce using rule 89 (assign -> ID EQUALS LBRACE args error SEMI .)
    LPAREN          reduce using rule 89 (assign -> ID EQUALS LBRACE args error SEMI .)
    ID              reduce using rule 89 (assign -> ID EQUALS LBRACE args error SEMI .)
    error           reduce using rule 89 (assign -> ID EQUALS LBRACE args error SEMI .)
    RETURN          reduce using rule 89 (assign -> ID EQUALS LBRACE args error SEMI .)
    FUNCTION        reduce using rule 89 (assign -> ID EQUALS LBRACE args error SEMI .)
    STRUCTURE       reduce using rule 89 (assign -> ID EQUALS LBRACE args error SEMI .)
    WHILE           reduce using rule 89 (assign -> ID EQUALS LBRACE args error SEMI .)
    DO              reduce using rule 89 (assign -> ID EQUALS LBRACE args error SEMI .)
    IF              reduce using rule 89 (assign -> ID EQUALS LBRACE args error SEMI .)
    INTEGER         reduce using rule 89 (assign -> ID EQUALS LBRACE args error SEMI .)
    DOUBLE          reduce using rule 89 (assign -> ID EQUALS LBRACE args error SEMI .)
    BOOL            reduce using rule 89 (assign -> ID EQUALS LBRACE args error SEMI .)
    STRING          reduce using rule 89 (assign -> ID EQUALS LBRACE args error SEMI .)
    VOID            reduce using rule 89 (assign -> ID EQUALS LBRACE args error SEMI .)
    DATATYPE        reduce using rule 89 (assign -> ID EQUALS LBRACE args error SEMI .)
    $end            reduce using rule 89 (assign -> ID EQUALS LBRACE args error SEMI .)
    RBRACE          reduce using rule 89 (assign -> ID EQUALS LBRACE args error SEMI .)


state 297

    (90) assign -> ID EQUALS LBRACE args RBRACE error .

    BREAK           reduce using rule 90 (assign -> ID EQUALS LBRACE args RBRACE error .)
    CONTINUE        reduce using rule 90 (assign -> ID EQUALS LBRACE args RBRACE error .)
    GOTO            reduce using rule 90 (assign -> ID EQUALS LBRACE args RBRACE error .)
    MINUS           reduce using rule 90 (assign -> ID EQUALS LBRACE args RBRACE error .)
    LNOT            reduce using rule 90 (assign -> ID EQUALS LBRACE args RBRACE error .)
    NULL            reduce using rule 90 (assign -> ID EQUALS LBRACE args RBRACE error .)
    LPAREN          reduce using rule 90 (assign -> ID EQUALS LBRACE args RBRACE error .)
    ID              reduce using rule 90 (assign -> ID EQUALS LBRACE args RBRACE error .)
    error           reduce using rule 90 (assign -> ID EQUALS LBRACE args RBRACE error .)
    RETURN          reduce using rule 90 (assign -> ID EQUALS LBRACE args RBRACE error .)
    FUNCTION        reduce using rule 90 (assign -> ID EQUALS LBRACE args RBRACE error .)
    STRUCTURE       reduce using rule 90 (assign -> ID EQUALS LBRACE args RBRACE error .)
    WHILE           reduce using rule 90 (assign -> ID EQUALS LBRACE args RBRACE error .)
    DO              reduce using rule 90 (assign -> ID EQUALS LBRACE args RBRACE error .)
    IF              reduce using rule 90 (assign -> ID EQUALS LBRACE args RBRACE error .)
    INTEGER         reduce using rule 90 (assign -> ID EQUALS LBRACE args RBRACE error .)
    DOUBLE          reduce using rule 90 (assign -> ID EQUALS LBRACE args RBRACE error .)
    BOOL            reduce using rule 90 (assign -> ID EQUALS LBRACE args RBRACE error .)
    STRING          reduce using rule 90 (assign -> ID EQUALS LBRACE args RBRACE error .)
    VOID            reduce using rule 90 (assign -> ID EQUALS LBRACE args RBRACE error .)
    DATATYPE        reduce using rule 90 (assign -> ID EQUALS LBRACE args RBRACE error .)
    $end            reduce using rule 90 (assign -> ID EQUALS LBRACE args RBRACE error .)
    RBRACE          reduce using rule 90 (assign -> ID EQUALS LBRACE args RBRACE error .)


state 298

    (73) var_declaration -> ID error EQUALS LBRACE args RBRACE . SEMI

    SEMI            shift and go to state 327


state 299

    (86) assign -> ID error LBRACE args RBRACE SEMI .

    BREAK           reduce using rule 86 (assign -> ID error LBRACE args RBRACE SEMI .)
    CONTINUE        reduce using rule 86 (assign -> ID error LBRACE args RBRACE SEMI .)
    GOTO            reduce using rule 86 (assign -> ID error LBRACE args RBRACE SEMI .)
    MINUS           reduce using rule 86 (assign -> ID error LBRACE args RBRACE SEMI .)
    LNOT            reduce using rule 86 (assign -> ID error LBRACE args RBRACE SEMI .)
    NULL            reduce using rule 86 (assign -> ID error LBRACE args RBRACE SEMI .)
    LPAREN          reduce using rule 86 (assign -> ID error LBRACE args RBRACE SEMI .)
    ID              reduce using rule 86 (assign -> ID error LBRACE args RBRACE SEMI .)
    error           reduce using rule 86 (assign -> ID error LBRACE args RBRACE SEMI .)
    RETURN          reduce using rule 86 (assign -> ID error LBRACE args RBRACE SEMI .)
    FUNCTION        reduce using rule 86 (assign -> ID error LBRACE args RBRACE SEMI .)
    STRUCTURE       reduce using rule 86 (assign -> ID error LBRACE args RBRACE SEMI .)
    WHILE           reduce using rule 86 (assign -> ID error LBRACE args RBRACE SEMI .)
    DO              reduce using rule 86 (assign -> ID error LBRACE args RBRACE SEMI .)
    IF              reduce using rule 86 (assign -> ID error LBRACE args RBRACE SEMI .)
    INTEGER         reduce using rule 86 (assign -> ID error LBRACE args RBRACE SEMI .)
    DOUBLE          reduce using rule 86 (assign -> ID error LBRACE args RBRACE SEMI .)
    BOOL            reduce using rule 86 (assign -> ID error LBRACE args RBRACE SEMI .)
    STRING          reduce using rule 86 (assign -> ID error LBRACE args RBRACE SEMI .)
    VOID            reduce using rule 86 (assign -> ID error LBRACE args RBRACE SEMI .)
    DATATYPE        reduce using rule 86 (assign -> ID error LBRACE args RBRACE SEMI .)
    $end            reduce using rule 86 (assign -> ID error LBRACE args RBRACE SEMI .)
    RBRACE          reduce using rule 86 (assign -> ID error LBRACE args RBRACE SEMI .)


state 300

    (91) assign -> ID DOT ID error expr SEMI .

    BREAK           reduce using rule 91 (assign -> ID DOT ID error expr SEMI .)
    CONTINUE        reduce using rule 91 (assign -> ID DOT ID error expr SEMI .)
    GOTO            reduce using rule 91 (assign -> ID DOT ID error expr SEMI .)
    MINUS           reduce using rule 91 (assign -> ID DOT ID error expr SEMI .)
    LNOT            reduce using rule 91 (assign -> ID DOT ID error expr SEMI .)
    NULL            reduce using rule 91 (assign -> ID DOT ID error expr SEMI .)
    LPAREN          reduce using rule 91 (assign -> ID DOT ID error expr SEMI .)
    ID              reduce using rule 91 (assign -> ID DOT ID error expr SEMI .)
    error           reduce using rule 91 (assign -> ID DOT ID error expr SEMI .)
    RETURN          reduce using rule 91 (assign -> ID DOT ID error expr SEMI .)
    FUNCTION        reduce using rule 91 (assign -> ID DOT ID error expr SEMI .)
    STRUCTURE       reduce using rule 91 (assign -> ID DOT ID error expr SEMI .)
    WHILE           reduce using rule 91 (assign -> ID DOT ID error expr SEMI .)
    DO              reduce using rule 91 (assign -> ID DOT ID error expr SEMI .)
    IF              reduce using rule 91 (assign -> ID DOT ID error expr SEMI .)
    INTEGER         reduce using rule 91 (assign -> ID DOT ID error expr SEMI .)
    DOUBLE          reduce using rule 91 (assign -> ID DOT ID error expr SEMI .)
    BOOL            reduce using rule 91 (assign -> ID DOT ID error expr SEMI .)
    STRING          reduce using rule 91 (assign -> ID DOT ID error expr SEMI .)
    VOID            reduce using rule 91 (assign -> ID DOT ID error expr SEMI .)
    DATATYPE        reduce using rule 91 (assign -> ID DOT ID error expr SEMI .)
    $end            reduce using rule 91 (assign -> ID DOT ID error expr SEMI .)
    RBRACE          reduce using rule 91 (assign -> ID DOT ID error expr SEMI .)


state 301

    (92) assign -> ID DOT ID EQUALS error SEMI .

    BREAK           reduce using rule 92 (assign -> ID DOT ID EQUALS error SEMI .)
    CONTINUE        reduce using rule 92 (assign -> ID DOT ID EQUALS error SEMI .)
    GOTO            reduce using rule 92 (assign -> ID DOT ID EQUALS error SEMI .)
    MINUS           reduce using rule 92 (assign -> ID DOT ID EQUALS error SEMI .)
    LNOT            reduce using rule 92 (assign -> ID DOT ID EQUALS error SEMI .)
    NULL            reduce using rule 92 (assign -> ID DOT ID EQUALS error SEMI .)
    LPAREN          reduce using rule 92 (assign -> ID DOT ID EQUALS error SEMI .)
    ID              reduce using rule 92 (assign -> ID DOT ID EQUALS error SEMI .)
    error           reduce using rule 92 (assign -> ID DOT ID EQUALS error SEMI .)
    RETURN          reduce using rule 92 (assign -> ID DOT ID EQUALS error SEMI .)
    FUNCTION        reduce using rule 92 (assign -> ID DOT ID EQUALS error SEMI .)
    STRUCTURE       reduce using rule 92 (assign -> ID DOT ID EQUALS error SEMI .)
    WHILE           reduce using rule 92 (assign -> ID DOT ID EQUALS error SEMI .)
    DO              reduce using rule 92 (assign -> ID DOT ID EQUALS error SEMI .)
    IF              reduce using rule 92 (assign -> ID DOT ID EQUALS error SEMI .)
    INTEGER         reduce using rule 92 (assign -> ID DOT ID EQUALS error SEMI .)
    DOUBLE          reduce using rule 92 (assign -> ID DOT ID EQUALS error SEMI .)
    BOOL            reduce using rule 92 (assign -> ID DOT ID EQUALS error SEMI .)
    STRING          reduce using rule 92 (assign -> ID DOT ID EQUALS error SEMI .)
    VOID            reduce using rule 92 (assign -> ID DOT ID EQUALS error SEMI .)
    DATATYPE        reduce using rule 92 (assign -> ID DOT ID EQUALS error SEMI .)
    $end            reduce using rule 92 (assign -> ID DOT ID EQUALS error SEMI .)
    RBRACE          reduce using rule 92 (assign -> ID DOT ID EQUALS error SEMI .)


state 302

    (93) assign -> ID DOT ID EQUALS expr error .
    (110) expr -> expr error . expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LNOT resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for DATATYPE resolved as shift
    BREAK           reduce using rule 93 (assign -> ID DOT ID EQUALS expr error .)
    CONTINUE        reduce using rule 93 (assign -> ID DOT ID EQUALS expr error .)
    GOTO            reduce using rule 93 (assign -> ID DOT ID EQUALS expr error .)
    RETURN          reduce using rule 93 (assign -> ID DOT ID EQUALS expr error .)
    FUNCTION        reduce using rule 93 (assign -> ID DOT ID EQUALS expr error .)
    STRUCTURE       reduce using rule 93 (assign -> ID DOT ID EQUALS expr error .)
    WHILE           reduce using rule 93 (assign -> ID DOT ID EQUALS expr error .)
    DO              reduce using rule 93 (assign -> ID DOT ID EQUALS expr error .)
    IF              reduce using rule 93 (assign -> ID DOT ID EQUALS expr error .)
    $end            reduce using rule 93 (assign -> ID DOT ID EQUALS expr error .)
    RBRACE          reduce using rule 93 (assign -> ID DOT ID EQUALS expr error .)
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

  ! MINUS           [ reduce using rule 93 (assign -> ID DOT ID EQUALS expr error .) ]
  ! LNOT            [ reduce using rule 93 (assign -> ID DOT ID EQUALS expr error .) ]
  ! NULL            [ reduce using rule 93 (assign -> ID DOT ID EQUALS expr error .) ]
  ! LPAREN          [ reduce using rule 93 (assign -> ID DOT ID EQUALS expr error .) ]
  ! ID              [ reduce using rule 93 (assign -> ID DOT ID EQUALS expr error .) ]
  ! error           [ reduce using rule 93 (assign -> ID DOT ID EQUALS expr error .) ]
  ! INTEGER         [ reduce using rule 93 (assign -> ID DOT ID EQUALS expr error .) ]
  ! DOUBLE          [ reduce using rule 93 (assign -> ID DOT ID EQUALS expr error .) ]
  ! BOOL            [ reduce using rule 93 (assign -> ID DOT ID EQUALS expr error .) ]
  ! STRING          [ reduce using rule 93 (assign -> ID DOT ID EQUALS expr error .) ]
  ! VOID            [ reduce using rule 93 (assign -> ID DOT ID EQUALS expr error .) ]
  ! DATATYPE        [ reduce using rule 93 (assign -> ID DOT ID EQUALS expr error .) ]

    expr                           shift and go to state 117
    id                             shift and go to state 76
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 303

    (82) assign -> id LBRACKET expr RBRACKET EQUALS expr . SEMI
    (97) expr -> expr . PLUS expr
    (98) expr -> expr . MINUS expr
    (99) expr -> expr . MUL expr
    (100) expr -> expr . DIVIDE expr
    (101) expr -> expr . INTDIVIDE expr
    (102) expr -> expr . MODULO expr
    (103) expr -> expr . POW expr
    (104) expr -> expr . LE expr
    (105) expr -> expr . GE expr
    (106) expr -> expr . LT expr
    (107) expr -> expr . GT expr
    (108) expr -> expr . EQ expr
    (109) expr -> expr . NE expr
    (110) expr -> expr . error expr
    (112) expr -> expr . LAND expr
    (113) expr -> expr . LOR expr
    (115) expr -> expr . BAND expr
    (116) expr -> expr . BOR expr

    SEMI            shift and go to state 328
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MUL             shift and go to state 45
    DIVIDE          shift and go to state 46
    INTDIVIDE       shift and go to state 47
    MODULO          shift and go to state 48
    POW             shift and go to state 49
    LE              shift and go to state 50
    GE              shift and go to state 51
    LT              shift and go to state 52
    GT              shift and go to state 53
    EQ              shift and go to state 54
    NE              shift and go to state 55
    error           shift and go to state 56
    LAND            shift and go to state 57
    LOR             shift and go to state 58
    BAND            shift and go to state 59
    BOR             shift and go to state 60


state 304

    (81) assign -> id DOT ID EQUALS expr SEMI .

    BREAK           reduce using rule 81 (assign -> id DOT ID EQUALS expr SEMI .)
    CONTINUE        reduce using rule 81 (assign -> id DOT ID EQUALS expr SEMI .)
    GOTO            reduce using rule 81 (assign -> id DOT ID EQUALS expr SEMI .)
    MINUS           reduce using rule 81 (assign -> id DOT ID EQUALS expr SEMI .)
    LNOT            reduce using rule 81 (assign -> id DOT ID EQUALS expr SEMI .)
    NULL            reduce using rule 81 (assign -> id DOT ID EQUALS expr SEMI .)
    LPAREN          reduce using rule 81 (assign -> id DOT ID EQUALS expr SEMI .)
    ID              reduce using rule 81 (assign -> id DOT ID EQUALS expr SEMI .)
    error           reduce using rule 81 (assign -> id DOT ID EQUALS expr SEMI .)
    RETURN          reduce using rule 81 (assign -> id DOT ID EQUALS expr SEMI .)
    FUNCTION        reduce using rule 81 (assign -> id DOT ID EQUALS expr SEMI .)
    STRUCTURE       reduce using rule 81 (assign -> id DOT ID EQUALS expr SEMI .)
    WHILE           reduce using rule 81 (assign -> id DOT ID EQUALS expr SEMI .)
    DO              reduce using rule 81 (assign -> id DOT ID EQUALS expr SEMI .)
    IF              reduce using rule 81 (assign -> id DOT ID EQUALS expr SEMI .)
    INTEGER         reduce using rule 81 (assign -> id DOT ID EQUALS expr SEMI .)
    DOUBLE          reduce using rule 81 (assign -> id DOT ID EQUALS expr SEMI .)
    BOOL            reduce using rule 81 (assign -> id DOT ID EQUALS expr SEMI .)
    STRING          reduce using rule 81 (assign -> id DOT ID EQUALS expr SEMI .)
    VOID            reduce using rule 81 (assign -> id DOT ID EQUALS expr SEMI .)
    DATATYPE        reduce using rule 81 (assign -> id DOT ID EQUALS expr SEMI .)
    $end            reduce using rule 81 (assign -> id DOT ID EQUALS expr SEMI .)
    RBRACE          reduce using rule 81 (assign -> id DOT ID EQUALS expr SEMI .)


state 305

    (80) assign -> id EQUALS LBRACE args RBRACE SEMI .

    BREAK           reduce using rule 80 (assign -> id EQUALS LBRACE args RBRACE SEMI .)
    CONTINUE        reduce using rule 80 (assign -> id EQUALS LBRACE args RBRACE SEMI .)
    GOTO            reduce using rule 80 (assign -> id EQUALS LBRACE args RBRACE SEMI .)
    MINUS           reduce using rule 80 (assign -> id EQUALS LBRACE args RBRACE SEMI .)
    LNOT            reduce using rule 80 (assign -> id EQUALS LBRACE args RBRACE SEMI .)
    NULL            reduce using rule 80 (assign -> id EQUALS LBRACE args RBRACE SEMI .)
    LPAREN          reduce using rule 80 (assign -> id EQUALS LBRACE args RBRACE SEMI .)
    ID              reduce using rule 80 (assign -> id EQUALS LBRACE args RBRACE SEMI .)
    error           reduce using rule 80 (assign -> id EQUALS LBRACE args RBRACE SEMI .)
    RETURN          reduce using rule 80 (assign -> id EQUALS LBRACE args RBRACE SEMI .)
    FUNCTION        reduce using rule 80 (assign -> id EQUALS LBRACE args RBRACE SEMI .)
    STRUCTURE       reduce using rule 80 (assign -> id EQUALS LBRACE args RBRACE SEMI .)
    WHILE           reduce using rule 80 (assign -> id EQUALS LBRACE args RBRACE SEMI .)
    DO              reduce using rule 80 (assign -> id EQUALS LBRACE args RBRACE SEMI .)
    IF              reduce using rule 80 (assign -> id EQUALS LBRACE args RBRACE SEMI .)
    INTEGER         reduce using rule 80 (assign -> id EQUALS LBRACE args RBRACE SEMI .)
    DOUBLE          reduce using rule 80 (assign -> id EQUALS LBRACE args RBRACE SEMI .)
    BOOL            reduce using rule 80 (assign -> id EQUALS LBRACE args RBRACE SEMI .)
    STRING          reduce using rule 80 (assign -> id EQUALS LBRACE args RBRACE SEMI .)
    VOID            reduce using rule 80 (assign -> id EQUALS LBRACE args RBRACE SEMI .)
    DATATYPE        reduce using rule 80 (assign -> id EQUALS LBRACE args RBRACE SEMI .)
    $end            reduce using rule 80 (assign -> id EQUALS LBRACE args RBRACE SEMI .)
    RBRACE          reduce using rule 80 (assign -> id EQUALS LBRACE args RBRACE SEMI .)


state 306

    (53) param -> error ID .

    RPAREN          reduce using rule 53 (param -> error ID .)
    COMMA           reduce using rule 53 (param -> error ID .)
    error           reduce using rule 53 (param -> error ID .)


state 307

    (51) params -> params error . param
    (52) param -> . DATATYPE ID
    (53) param -> . error ID
    (54) param -> . DATATYPE error

    DATATYPE        shift and go to state 263
    error           shift and go to state 260

    param                          shift and go to state 329

state 308

    (8) func_declaration -> error datatype id LPAREN params RPAREN . body_block
    (4) body_block -> . error scope RBRACE
    (5) body_block -> . LBRACE error RBRACE
    (6) body_block -> . LBRACE scope error

    error           shift and go to state 80
    LBRACE          shift and go to state 84

    body_block                     shift and go to state 330

state 309

    (50) params -> params COMMA . param
    (52) param -> . DATATYPE ID
    (53) param -> . error ID
    (54) param -> . DATATYPE error

    DATATYPE        shift and go to state 263
    error           shift and go to state 260

    param                          shift and go to state 331

state 310

    (52) param -> DATATYPE ID .

    RPAREN          reduce using rule 52 (param -> DATATYPE ID .)
    COMMA           reduce using rule 52 (param -> DATATYPE ID .)
    error           reduce using rule 52 (param -> DATATYPE ID .)


state 311

    (54) param -> DATATYPE error .

    RPAREN          reduce using rule 54 (param -> DATATYPE error .)
    COMMA           reduce using rule 54 (param -> DATATYPE error .)
    error           reduce using rule 54 (param -> DATATYPE error .)


state 312

    (132) expr -> datatype id LBRACKET INTEGER RBRACKET EQUALS . LBRACE args RBRACE

    LBRACE          shift and go to state 332


state 313

    (7) func_declaration -> FUNCTION datatype id LPAREN params RPAREN . basic_block
    (3) basic_block -> . LBRACE scope RBRACE

    LBRACE          shift and go to state 170

    basic_block                    shift and go to state 333

state 314

    (12) func_declaration -> FUNCTION datatype id LPAREN params error . body_block
    (51) params -> params error . param
    (4) body_block -> . error scope RBRACE
    (5) body_block -> . LBRACE error RBRACE
    (6) body_block -> . LBRACE scope error
    (52) param -> . DATATYPE ID
    (53) param -> . error ID
    (54) param -> . DATATYPE error

    error           shift and go to state 334
    LBRACE          shift and go to state 84
    DATATYPE        shift and go to state 263

    body_block                     shift and go to state 335
    param                          shift and go to state 329

state 315

    (11) func_declaration -> FUNCTION datatype id error params RPAREN . body_block
    (4) body_block -> . error scope RBRACE
    (5) body_block -> . LBRACE error RBRACE
    (6) body_block -> . LBRACE scope error

    error           shift and go to state 80
    LBRACE          shift and go to state 84

    body_block                     shift and go to state 336

state 316

    (10) func_declaration -> FUNCTION datatype error LPAREN params RPAREN . body_block
    (4) body_block -> . error scope RBRACE
    (5) body_block -> . LBRACE error RBRACE
    (6) body_block -> . LBRACE scope error

    error           shift and go to state 80
    LBRACE          shift and go to state 84

    body_block                     shift and go to state 337

state 317

    (9) func_declaration -> FUNCTION error id LPAREN params RPAREN . body_block
    (4) body_block -> . error scope RBRACE
    (5) body_block -> . LBRACE error RBRACE
    (6) body_block -> . LBRACE scope error

    error           shift and go to state 80
    LBRACE          shift and go to state 84

    body_block                     shift and go to state 338

state 318

    (44) struct_params -> struct_params error struct_param .

    RBRACE          reduce using rule 44 (struct_params -> struct_params error struct_param .)
    error           reduce using rule 44 (struct_params -> struct_params error struct_param .)
    COMMA           reduce using rule 44 (struct_params -> struct_params error struct_param .)


state 319

    (43) struct_params -> struct_params COMMA struct_param .

    RBRACE          reduce using rule 43 (struct_params -> struct_params COMMA struct_param .)
    error           reduce using rule 43 (struct_params -> struct_params COMMA struct_param .)
    COMMA           reduce using rule 43 (struct_params -> struct_params COMMA struct_param .)


state 320

    (133) expr -> ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE . args RBRACE
    (58) args -> .
    (59) args -> . expr
    (60) args -> . args COMMA expr
    (61) args -> . args error expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

  ! shift/reduce conflict for error resolved as shift
    RBRACE          reduce using rule 58 (args -> .)
    COMMA           reduce using rule 58 (args -> .)
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

  ! error           [ reduce using rule 58 (args -> .) ]

    id                             shift and go to state 76
    args                           shift and go to state 339
    expr                           shift and go to state 135
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 78

state 321

    (65) var_declaration -> ID id EQUALS LBRACE args RBRACE SEMI .

    BREAK           reduce using rule 65 (var_declaration -> ID id EQUALS LBRACE args RBRACE SEMI .)
    CONTINUE        reduce using rule 65 (var_declaration -> ID id EQUALS LBRACE args RBRACE SEMI .)
    GOTO            reduce using rule 65 (var_declaration -> ID id EQUALS LBRACE args RBRACE SEMI .)
    MINUS           reduce using rule 65 (var_declaration -> ID id EQUALS LBRACE args RBRACE SEMI .)
    LNOT            reduce using rule 65 (var_declaration -> ID id EQUALS LBRACE args RBRACE SEMI .)
    NULL            reduce using rule 65 (var_declaration -> ID id EQUALS LBRACE args RBRACE SEMI .)
    LPAREN          reduce using rule 65 (var_declaration -> ID id EQUALS LBRACE args RBRACE SEMI .)
    ID              reduce using rule 65 (var_declaration -> ID id EQUALS LBRACE args RBRACE SEMI .)
    error           reduce using rule 65 (var_declaration -> ID id EQUALS LBRACE args RBRACE SEMI .)
    RETURN          reduce using rule 65 (var_declaration -> ID id EQUALS LBRACE args RBRACE SEMI .)
    FUNCTION        reduce using rule 65 (var_declaration -> ID id EQUALS LBRACE args RBRACE SEMI .)
    STRUCTURE       reduce using rule 65 (var_declaration -> ID id EQUALS LBRACE args RBRACE SEMI .)
    WHILE           reduce using rule 65 (var_declaration -> ID id EQUALS LBRACE args RBRACE SEMI .)
    DO              reduce using rule 65 (var_declaration -> ID id EQUALS LBRACE args RBRACE SEMI .)
    IF              reduce using rule 65 (var_declaration -> ID id EQUALS LBRACE args RBRACE SEMI .)
    INTEGER         reduce using rule 65 (var_declaration -> ID id EQUALS LBRACE args RBRACE SEMI .)
    DOUBLE          reduce using rule 65 (var_declaration -> ID id EQUALS LBRACE args RBRACE SEMI .)
    BOOL            reduce using rule 65 (var_declaration -> ID id EQUALS LBRACE args RBRACE SEMI .)
    STRING          reduce using rule 65 (var_declaration -> ID id EQUALS LBRACE args RBRACE SEMI .)
    VOID            reduce using rule 65 (var_declaration -> ID id EQUALS LBRACE args RBRACE SEMI .)
    DATATYPE        reduce using rule 65 (var_declaration -> ID id EQUALS LBRACE args RBRACE SEMI .)
    $end            reduce using rule 65 (var_declaration -> ID id EQUALS LBRACE args RBRACE SEMI .)
    RBRACE          reduce using rule 65 (var_declaration -> ID id EQUALS LBRACE args RBRACE SEMI .)


state 322

    (78) var_declaration -> ID id EQUALS LBRACE args RBRACE error .

    BREAK           reduce using rule 78 (var_declaration -> ID id EQUALS LBRACE args RBRACE error .)
    CONTINUE        reduce using rule 78 (var_declaration -> ID id EQUALS LBRACE args RBRACE error .)
    GOTO            reduce using rule 78 (var_declaration -> ID id EQUALS LBRACE args RBRACE error .)
    MINUS           reduce using rule 78 (var_declaration -> ID id EQUALS LBRACE args RBRACE error .)
    LNOT            reduce using rule 78 (var_declaration -> ID id EQUALS LBRACE args RBRACE error .)
    NULL            reduce using rule 78 (var_declaration -> ID id EQUALS LBRACE args RBRACE error .)
    LPAREN          reduce using rule 78 (var_declaration -> ID id EQUALS LBRACE args RBRACE error .)
    ID              reduce using rule 78 (var_declaration -> ID id EQUALS LBRACE args RBRACE error .)
    error           reduce using rule 78 (var_declaration -> ID id EQUALS LBRACE args RBRACE error .)
    RETURN          reduce using rule 78 (var_declaration -> ID id EQUALS LBRACE args RBRACE error .)
    FUNCTION        reduce using rule 78 (var_declaration -> ID id EQUALS LBRACE args RBRACE error .)
    STRUCTURE       reduce using rule 78 (var_declaration -> ID id EQUALS LBRACE args RBRACE error .)
    WHILE           reduce using rule 78 (var_declaration -> ID id EQUALS LBRACE args RBRACE error .)
    DO              reduce using rule 78 (var_declaration -> ID id EQUALS LBRACE args RBRACE error .)
    IF              reduce using rule 78 (var_declaration -> ID id EQUALS LBRACE args RBRACE error .)
    INTEGER         reduce using rule 78 (var_declaration -> ID id EQUALS LBRACE args RBRACE error .)
    DOUBLE          reduce using rule 78 (var_declaration -> ID id EQUALS LBRACE args RBRACE error .)
    BOOL            reduce using rule 78 (var_declaration -> ID id EQUALS LBRACE args RBRACE error .)
    STRING          reduce using rule 78 (var_declaration -> ID id EQUALS LBRACE args RBRACE error .)
    VOID            reduce using rule 78 (var_declaration -> ID id EQUALS LBRACE args RBRACE error .)
    DATATYPE        reduce using rule 78 (var_declaration -> ID id EQUALS LBRACE args RBRACE error .)
    $end            reduce using rule 78 (var_declaration -> ID id EQUALS LBRACE args RBRACE error .)
    RBRACE          reduce using rule 78 (var_declaration -> ID id EQUALS LBRACE args RBRACE error .)


state 323

    (77) var_declaration -> ID id EQUALS LBRACE args error SEMI .

    BREAK           reduce using rule 77 (var_declaration -> ID id EQUALS LBRACE args error SEMI .)
    CONTINUE        reduce using rule 77 (var_declaration -> ID id EQUALS LBRACE args error SEMI .)
    GOTO            reduce using rule 77 (var_declaration -> ID id EQUALS LBRACE args error SEMI .)
    MINUS           reduce using rule 77 (var_declaration -> ID id EQUALS LBRACE args error SEMI .)
    LNOT            reduce using rule 77 (var_declaration -> ID id EQUALS LBRACE args error SEMI .)
    NULL            reduce using rule 77 (var_declaration -> ID id EQUALS LBRACE args error SEMI .)
    LPAREN          reduce using rule 77 (var_declaration -> ID id EQUALS LBRACE args error SEMI .)
    ID              reduce using rule 77 (var_declaration -> ID id EQUALS LBRACE args error SEMI .)
    error           reduce using rule 77 (var_declaration -> ID id EQUALS LBRACE args error SEMI .)
    RETURN          reduce using rule 77 (var_declaration -> ID id EQUALS LBRACE args error SEMI .)
    FUNCTION        reduce using rule 77 (var_declaration -> ID id EQUALS LBRACE args error SEMI .)
    STRUCTURE       reduce using rule 77 (var_declaration -> ID id EQUALS LBRACE args error SEMI .)
    WHILE           reduce using rule 77 (var_declaration -> ID id EQUALS LBRACE args error SEMI .)
    DO              reduce using rule 77 (var_declaration -> ID id EQUALS LBRACE args error SEMI .)
    IF              reduce using rule 77 (var_declaration -> ID id EQUALS LBRACE args error SEMI .)
    INTEGER         reduce using rule 77 (var_declaration -> ID id EQUALS LBRACE args error SEMI .)
    DOUBLE          reduce using rule 77 (var_declaration -> ID id EQUALS LBRACE args error SEMI .)
    BOOL            reduce using rule 77 (var_declaration -> ID id EQUALS LBRACE args error SEMI .)
    STRING          reduce using rule 77 (var_declaration -> ID id EQUALS LBRACE args error SEMI .)
    VOID            reduce using rule 77 (var_declaration -> ID id EQUALS LBRACE args error SEMI .)
    DATATYPE        reduce using rule 77 (var_declaration -> ID id EQUALS LBRACE args error SEMI .)
    $end            reduce using rule 77 (var_declaration -> ID id EQUALS LBRACE args error SEMI .)
    RBRACE          reduce using rule 77 (var_declaration -> ID id EQUALS LBRACE args error SEMI .)


state 324

    (76) var_declaration -> ID id EQUALS LBRACE error RBRACE SEMI .

    BREAK           reduce using rule 76 (var_declaration -> ID id EQUALS LBRACE error RBRACE SEMI .)
    CONTINUE        reduce using rule 76 (var_declaration -> ID id EQUALS LBRACE error RBRACE SEMI .)
    GOTO            reduce using rule 76 (var_declaration -> ID id EQUALS LBRACE error RBRACE SEMI .)
    MINUS           reduce using rule 76 (var_declaration -> ID id EQUALS LBRACE error RBRACE SEMI .)
    LNOT            reduce using rule 76 (var_declaration -> ID id EQUALS LBRACE error RBRACE SEMI .)
    NULL            reduce using rule 76 (var_declaration -> ID id EQUALS LBRACE error RBRACE SEMI .)
    LPAREN          reduce using rule 76 (var_declaration -> ID id EQUALS LBRACE error RBRACE SEMI .)
    ID              reduce using rule 76 (var_declaration -> ID id EQUALS LBRACE error RBRACE SEMI .)
    error           reduce using rule 76 (var_declaration -> ID id EQUALS LBRACE error RBRACE SEMI .)
    RETURN          reduce using rule 76 (var_declaration -> ID id EQUALS LBRACE error RBRACE SEMI .)
    FUNCTION        reduce using rule 76 (var_declaration -> ID id EQUALS LBRACE error RBRACE SEMI .)
    STRUCTURE       reduce using rule 76 (var_declaration -> ID id EQUALS LBRACE error RBRACE SEMI .)
    WHILE           reduce using rule 76 (var_declaration -> ID id EQUALS LBRACE error RBRACE SEMI .)
    DO              reduce using rule 76 (var_declaration -> ID id EQUALS LBRACE error RBRACE SEMI .)
    IF              reduce using rule 76 (var_declaration -> ID id EQUALS LBRACE error RBRACE SEMI .)
    INTEGER         reduce using rule 76 (var_declaration -> ID id EQUALS LBRACE error RBRACE SEMI .)
    DOUBLE          reduce using rule 76 (var_declaration -> ID id EQUALS LBRACE error RBRACE SEMI .)
    BOOL            reduce using rule 76 (var_declaration -> ID id EQUALS LBRACE error RBRACE SEMI .)
    STRING          reduce using rule 76 (var_declaration -> ID id EQUALS LBRACE error RBRACE SEMI .)
    VOID            reduce using rule 76 (var_declaration -> ID id EQUALS LBRACE error RBRACE SEMI .)
    DATATYPE        reduce using rule 76 (var_declaration -> ID id EQUALS LBRACE error RBRACE SEMI .)
    $end            reduce using rule 76 (var_declaration -> ID id EQUALS LBRACE error RBRACE SEMI .)
    RBRACE          reduce using rule 76 (var_declaration -> ID id EQUALS LBRACE error RBRACE SEMI .)


state 325

    (75) var_declaration -> ID id EQUALS error args RBRACE SEMI .

    BREAK           reduce using rule 75 (var_declaration -> ID id EQUALS error args RBRACE SEMI .)
    CONTINUE        reduce using rule 75 (var_declaration -> ID id EQUALS error args RBRACE SEMI .)
    GOTO            reduce using rule 75 (var_declaration -> ID id EQUALS error args RBRACE SEMI .)
    MINUS           reduce using rule 75 (var_declaration -> ID id EQUALS error args RBRACE SEMI .)
    LNOT            reduce using rule 75 (var_declaration -> ID id EQUALS error args RBRACE SEMI .)
    NULL            reduce using rule 75 (var_declaration -> ID id EQUALS error args RBRACE SEMI .)
    LPAREN          reduce using rule 75 (var_declaration -> ID id EQUALS error args RBRACE SEMI .)
    ID              reduce using rule 75 (var_declaration -> ID id EQUALS error args RBRACE SEMI .)
    error           reduce using rule 75 (var_declaration -> ID id EQUALS error args RBRACE SEMI .)
    RETURN          reduce using rule 75 (var_declaration -> ID id EQUALS error args RBRACE SEMI .)
    FUNCTION        reduce using rule 75 (var_declaration -> ID id EQUALS error args RBRACE SEMI .)
    STRUCTURE       reduce using rule 75 (var_declaration -> ID id EQUALS error args RBRACE SEMI .)
    WHILE           reduce using rule 75 (var_declaration -> ID id EQUALS error args RBRACE SEMI .)
    DO              reduce using rule 75 (var_declaration -> ID id EQUALS error args RBRACE SEMI .)
    IF              reduce using rule 75 (var_declaration -> ID id EQUALS error args RBRACE SEMI .)
    INTEGER         reduce using rule 75 (var_declaration -> ID id EQUALS error args RBRACE SEMI .)
    DOUBLE          reduce using rule 75 (var_declaration -> ID id EQUALS error args RBRACE SEMI .)
    BOOL            reduce using rule 75 (var_declaration -> ID id EQUALS error args RBRACE SEMI .)
    STRING          reduce using rule 75 (var_declaration -> ID id EQUALS error args RBRACE SEMI .)
    VOID            reduce using rule 75 (var_declaration -> ID id EQUALS error args RBRACE SEMI .)
    DATATYPE        reduce using rule 75 (var_declaration -> ID id EQUALS error args RBRACE SEMI .)
    $end            reduce using rule 75 (var_declaration -> ID id EQUALS error args RBRACE SEMI .)
    RBRACE          reduce using rule 75 (var_declaration -> ID id EQUALS error args RBRACE SEMI .)


state 326

    (74) var_declaration -> ID id error LBRACE args RBRACE SEMI .

    BREAK           reduce using rule 74 (var_declaration -> ID id error LBRACE args RBRACE SEMI .)
    CONTINUE        reduce using rule 74 (var_declaration -> ID id error LBRACE args RBRACE SEMI .)
    GOTO            reduce using rule 74 (var_declaration -> ID id error LBRACE args RBRACE SEMI .)
    MINUS           reduce using rule 74 (var_declaration -> ID id error LBRACE args RBRACE SEMI .)
    LNOT            reduce using rule 74 (var_declaration -> ID id error LBRACE args RBRACE SEMI .)
    NULL            reduce using rule 74 (var_declaration -> ID id error LBRACE args RBRACE SEMI .)
    LPAREN          reduce using rule 74 (var_declaration -> ID id error LBRACE args RBRACE SEMI .)
    ID              reduce using rule 74 (var_declaration -> ID id error LBRACE args RBRACE SEMI .)
    error           reduce using rule 74 (var_declaration -> ID id error LBRACE args RBRACE SEMI .)
    RETURN          reduce using rule 74 (var_declaration -> ID id error LBRACE args RBRACE SEMI .)
    FUNCTION        reduce using rule 74 (var_declaration -> ID id error LBRACE args RBRACE SEMI .)
    STRUCTURE       reduce using rule 74 (var_declaration -> ID id error LBRACE args RBRACE SEMI .)
    WHILE           reduce using rule 74 (var_declaration -> ID id error LBRACE args RBRACE SEMI .)
    DO              reduce using rule 74 (var_declaration -> ID id error LBRACE args RBRACE SEMI .)
    IF              reduce using rule 74 (var_declaration -> ID id error LBRACE args RBRACE SEMI .)
    INTEGER         reduce using rule 74 (var_declaration -> ID id error LBRACE args RBRACE SEMI .)
    DOUBLE          reduce using rule 74 (var_declaration -> ID id error LBRACE args RBRACE SEMI .)
    BOOL            reduce using rule 74 (var_declaration -> ID id error LBRACE args RBRACE SEMI .)
    STRING          reduce using rule 74 (var_declaration -> ID id error LBRACE args RBRACE SEMI .)
    VOID            reduce using rule 74 (var_declaration -> ID id error LBRACE args RBRACE SEMI .)
    DATATYPE        reduce using rule 74 (var_declaration -> ID id error LBRACE args RBRACE SEMI .)
    $end            reduce using rule 74 (var_declaration -> ID id error LBRACE args RBRACE SEMI .)
    RBRACE          reduce using rule 74 (var_declaration -> ID id error LBRACE args RBRACE SEMI .)


state 327

    (73) var_declaration -> ID error EQUALS LBRACE args RBRACE SEMI .

    BREAK           reduce using rule 73 (var_declaration -> ID error EQUALS LBRACE args RBRACE SEMI .)
    CONTINUE        reduce using rule 73 (var_declaration -> ID error EQUALS LBRACE args RBRACE SEMI .)
    GOTO            reduce using rule 73 (var_declaration -> ID error EQUALS LBRACE args RBRACE SEMI .)
    MINUS           reduce using rule 73 (var_declaration -> ID error EQUALS LBRACE args RBRACE SEMI .)
    LNOT            reduce using rule 73 (var_declaration -> ID error EQUALS LBRACE args RBRACE SEMI .)
    NULL            reduce using rule 73 (var_declaration -> ID error EQUALS LBRACE args RBRACE SEMI .)
    LPAREN          reduce using rule 73 (var_declaration -> ID error EQUALS LBRACE args RBRACE SEMI .)
    ID              reduce using rule 73 (var_declaration -> ID error EQUALS LBRACE args RBRACE SEMI .)
    error           reduce using rule 73 (var_declaration -> ID error EQUALS LBRACE args RBRACE SEMI .)
    RETURN          reduce using rule 73 (var_declaration -> ID error EQUALS LBRACE args RBRACE SEMI .)
    FUNCTION        reduce using rule 73 (var_declaration -> ID error EQUALS LBRACE args RBRACE SEMI .)
    STRUCTURE       reduce using rule 73 (var_declaration -> ID error EQUALS LBRACE args RBRACE SEMI .)
    WHILE           reduce using rule 73 (var_declaration -> ID error EQUALS LBRACE args RBRACE SEMI .)
    DO              reduce using rule 73 (var_declaration -> ID error EQUALS LBRACE args RBRACE SEMI .)
    IF              reduce using rule 73 (var_declaration -> ID error EQUALS LBRACE args RBRACE SEMI .)
    INTEGER         reduce using rule 73 (var_declaration -> ID error EQUALS LBRACE args RBRACE SEMI .)
    DOUBLE          reduce using rule 73 (var_declaration -> ID error EQUALS LBRACE args RBRACE SEMI .)
    BOOL            reduce using rule 73 (var_declaration -> ID error EQUALS LBRACE args RBRACE SEMI .)
    STRING          reduce using rule 73 (var_declaration -> ID error EQUALS LBRACE args RBRACE SEMI .)
    VOID            reduce using rule 73 (var_declaration -> ID error EQUALS LBRACE args RBRACE SEMI .)
    DATATYPE        reduce using rule 73 (var_declaration -> ID error EQUALS LBRACE args RBRACE SEMI .)
    $end            reduce using rule 73 (var_declaration -> ID error EQUALS LBRACE args RBRACE SEMI .)
    RBRACE          reduce using rule 73 (var_declaration -> ID error EQUALS LBRACE args RBRACE SEMI .)


state 328

    (82) assign -> id LBRACKET expr RBRACKET EQUALS expr SEMI .

    BREAK           reduce using rule 82 (assign -> id LBRACKET expr RBRACKET EQUALS expr SEMI .)
    CONTINUE        reduce using rule 82 (assign -> id LBRACKET expr RBRACKET EQUALS expr SEMI .)
    GOTO            reduce using rule 82 (assign -> id LBRACKET expr RBRACKET EQUALS expr SEMI .)
    MINUS           reduce using rule 82 (assign -> id LBRACKET expr RBRACKET EQUALS expr SEMI .)
    LNOT            reduce using rule 82 (assign -> id LBRACKET expr RBRACKET EQUALS expr SEMI .)
    NULL            reduce using rule 82 (assign -> id LBRACKET expr RBRACKET EQUALS expr SEMI .)
    LPAREN          reduce using rule 82 (assign -> id LBRACKET expr RBRACKET EQUALS expr SEMI .)
    ID              reduce using rule 82 (assign -> id LBRACKET expr RBRACKET EQUALS expr SEMI .)
    error           reduce using rule 82 (assign -> id LBRACKET expr RBRACKET EQUALS expr SEMI .)
    RETURN          reduce using rule 82 (assign -> id LBRACKET expr RBRACKET EQUALS expr SEMI .)
    FUNCTION        reduce using rule 82 (assign -> id LBRACKET expr RBRACKET EQUALS expr SEMI .)
    STRUCTURE       reduce using rule 82 (assign -> id LBRACKET expr RBRACKET EQUALS expr SEMI .)
    WHILE           reduce using rule 82 (assign -> id LBRACKET expr RBRACKET EQUALS expr SEMI .)
    DO              reduce using rule 82 (assign -> id LBRACKET expr RBRACKET EQUALS expr SEMI .)
    IF              reduce using rule 82 (assign -> id LBRACKET expr RBRACKET EQUALS expr SEMI .)
    INTEGER         reduce using rule 82 (assign -> id LBRACKET expr RBRACKET EQUALS expr SEMI .)
    DOUBLE          reduce using rule 82 (assign -> id LBRACKET expr RBRACKET EQUALS expr SEMI .)
    BOOL            reduce using rule 82 (assign -> id LBRACKET expr RBRACKET EQUALS expr SEMI .)
    STRING          reduce using rule 82 (assign -> id LBRACKET expr RBRACKET EQUALS expr SEMI .)
    VOID            reduce using rule 82 (assign -> id LBRACKET expr RBRACKET EQUALS expr SEMI .)
    DATATYPE        reduce using rule 82 (assign -> id LBRACKET expr RBRACKET EQUALS expr SEMI .)
    $end            reduce using rule 82 (assign -> id LBRACKET expr RBRACKET EQUALS expr SEMI .)
    RBRACE          reduce using rule 82 (assign -> id LBRACKET expr RBRACKET EQUALS expr SEMI .)


state 329

    (51) params -> params error param .

    RPAREN          reduce using rule 51 (params -> params error param .)
    COMMA           reduce using rule 51 (params -> params error param .)
    error           reduce using rule 51 (params -> params error param .)


state 330

    (8) func_declaration -> error datatype id LPAREN params RPAREN body_block .

    BREAK           reduce using rule 8 (func_declaration -> error datatype id LPAREN params RPAREN body_block .)
    CONTINUE        reduce using rule 8 (func_declaration -> error datatype id LPAREN params RPAREN body_block .)
    GOTO            reduce using rule 8 (func_declaration -> error datatype id LPAREN params RPAREN body_block .)
    MINUS           reduce using rule 8 (func_declaration -> error datatype id LPAREN params RPAREN body_block .)
    LNOT            reduce using rule 8 (func_declaration -> error datatype id LPAREN params RPAREN body_block .)
    NULL            reduce using rule 8 (func_declaration -> error datatype id LPAREN params RPAREN body_block .)
    LPAREN          reduce using rule 8 (func_declaration -> error datatype id LPAREN params RPAREN body_block .)
    ID              reduce using rule 8 (func_declaration -> error datatype id LPAREN params RPAREN body_block .)
    error           reduce using rule 8 (func_declaration -> error datatype id LPAREN params RPAREN body_block .)
    RETURN          reduce using rule 8 (func_declaration -> error datatype id LPAREN params RPAREN body_block .)
    FUNCTION        reduce using rule 8 (func_declaration -> error datatype id LPAREN params RPAREN body_block .)
    STRUCTURE       reduce using rule 8 (func_declaration -> error datatype id LPAREN params RPAREN body_block .)
    WHILE           reduce using rule 8 (func_declaration -> error datatype id LPAREN params RPAREN body_block .)
    DO              reduce using rule 8 (func_declaration -> error datatype id LPAREN params RPAREN body_block .)
    IF              reduce using rule 8 (func_declaration -> error datatype id LPAREN params RPAREN body_block .)
    INTEGER         reduce using rule 8 (func_declaration -> error datatype id LPAREN params RPAREN body_block .)
    DOUBLE          reduce using rule 8 (func_declaration -> error datatype id LPAREN params RPAREN body_block .)
    BOOL            reduce using rule 8 (func_declaration -> error datatype id LPAREN params RPAREN body_block .)
    STRING          reduce using rule 8 (func_declaration -> error datatype id LPAREN params RPAREN body_block .)
    VOID            reduce using rule 8 (func_declaration -> error datatype id LPAREN params RPAREN body_block .)
    DATATYPE        reduce using rule 8 (func_declaration -> error datatype id LPAREN params RPAREN body_block .)
    $end            reduce using rule 8 (func_declaration -> error datatype id LPAREN params RPAREN body_block .)
    RBRACE          reduce using rule 8 (func_declaration -> error datatype id LPAREN params RPAREN body_block .)


state 331

    (50) params -> params COMMA param .

    RPAREN          reduce using rule 50 (params -> params COMMA param .)
    COMMA           reduce using rule 50 (params -> params COMMA param .)
    error           reduce using rule 50 (params -> params COMMA param .)


state 332

    (132) expr -> datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE . args RBRACE
    (58) args -> .
    (59) args -> . expr
    (60) args -> . args COMMA expr
    (61) args -> . args error expr
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

  ! shift/reduce conflict for error resolved as shift
    RBRACE          reduce using rule 58 (args -> .)
    COMMA           reduce using rule 58 (args -> .)
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    ID              shift and go to state 79
    error           shift and go to state 77
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

  ! error           [ reduce using rule 58 (args -> .) ]

    datatype                       shift and go to state 78
    id                             shift and go to state 76
    args                           shift and go to state 340
    expr                           shift and go to state 135
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26

state 333

    (7) func_declaration -> FUNCTION datatype id LPAREN params RPAREN basic_block .

    BREAK           reduce using rule 7 (func_declaration -> FUNCTION datatype id LPAREN params RPAREN basic_block .)
    CONTINUE        reduce using rule 7 (func_declaration -> FUNCTION datatype id LPAREN params RPAREN basic_block .)
    GOTO            reduce using rule 7 (func_declaration -> FUNCTION datatype id LPAREN params RPAREN basic_block .)
    MINUS           reduce using rule 7 (func_declaration -> FUNCTION datatype id LPAREN params RPAREN basic_block .)
    LNOT            reduce using rule 7 (func_declaration -> FUNCTION datatype id LPAREN params RPAREN basic_block .)
    NULL            reduce using rule 7 (func_declaration -> FUNCTION datatype id LPAREN params RPAREN basic_block .)
    LPAREN          reduce using rule 7 (func_declaration -> FUNCTION datatype id LPAREN params RPAREN basic_block .)
    ID              reduce using rule 7 (func_declaration -> FUNCTION datatype id LPAREN params RPAREN basic_block .)
    error           reduce using rule 7 (func_declaration -> FUNCTION datatype id LPAREN params RPAREN basic_block .)
    RETURN          reduce using rule 7 (func_declaration -> FUNCTION datatype id LPAREN params RPAREN basic_block .)
    FUNCTION        reduce using rule 7 (func_declaration -> FUNCTION datatype id LPAREN params RPAREN basic_block .)
    STRUCTURE       reduce using rule 7 (func_declaration -> FUNCTION datatype id LPAREN params RPAREN basic_block .)
    WHILE           reduce using rule 7 (func_declaration -> FUNCTION datatype id LPAREN params RPAREN basic_block .)
    DO              reduce using rule 7 (func_declaration -> FUNCTION datatype id LPAREN params RPAREN basic_block .)
    IF              reduce using rule 7 (func_declaration -> FUNCTION datatype id LPAREN params RPAREN basic_block .)
    INTEGER         reduce using rule 7 (func_declaration -> FUNCTION datatype id LPAREN params RPAREN basic_block .)
    DOUBLE          reduce using rule 7 (func_declaration -> FUNCTION datatype id LPAREN params RPAREN basic_block .)
    BOOL            reduce using rule 7 (func_declaration -> FUNCTION datatype id LPAREN params RPAREN basic_block .)
    STRING          reduce using rule 7 (func_declaration -> FUNCTION datatype id LPAREN params RPAREN basic_block .)
    VOID            reduce using rule 7 (func_declaration -> FUNCTION datatype id LPAREN params RPAREN basic_block .)
    DATATYPE        reduce using rule 7 (func_declaration -> FUNCTION datatype id LPAREN params RPAREN basic_block .)
    $end            reduce using rule 7 (func_declaration -> FUNCTION datatype id LPAREN params RPAREN basic_block .)
    RBRACE          reduce using rule 7 (func_declaration -> FUNCTION datatype id LPAREN params RPAREN basic_block .)


state 334

    (4) body_block -> error . scope RBRACE
    (53) param -> error . ID
    (13) scope -> . scope statement
    (14) scope -> . statement
    (15) statement -> . expr SEMI
    (16) statement -> . var_declaration
    (17) statement -> . return
    (18) statement -> . assign
    (19) statement -> . func_declaration
    (20) statement -> . struct_declaration
    (21) statement -> . while
    (22) statement -> . BREAK SEMI
    (23) statement -> . CONTINUE SEMI
    (24) statement -> . GOTO ID SEMI
    (25) statement -> . goto_mark
    (26) statement -> . if-else
    (55) expr -> . id LPAREN args RPAREN
    (56) expr -> . id error args RPAREN
    (57) expr -> . id LPAREN args error
    (97) expr -> . expr PLUS expr
    (98) expr -> . expr MINUS expr
    (99) expr -> . expr MUL expr
    (100) expr -> . expr DIVIDE expr
    (101) expr -> . expr INTDIVIDE expr
    (102) expr -> . expr MODULO expr
    (103) expr -> . expr POW expr
    (104) expr -> . expr LE expr
    (105) expr -> . expr GE expr
    (106) expr -> . expr LT expr
    (107) expr -> . expr GT expr
    (108) expr -> . expr EQ expr
    (109) expr -> . expr NE expr
    (110) expr -> . expr error expr
    (111) expr -> . MINUS expr
    (112) expr -> . expr LAND expr
    (113) expr -> . expr LOR expr
    (114) expr -> . LNOT expr
    (115) expr -> . expr BAND expr
    (116) expr -> . expr BOR expr
    (117) expr -> . id
    (118) expr -> . int
    (119) expr -> . double
    (120) expr -> . bool
    (121) expr -> . str
    (122) expr -> . void
    (123) expr -> . NULL
    (124) expr -> . LPAREN expr RPAREN
    (130) expr -> . datatype id LBRACKET INTEGER RBRACKET
    (131) expr -> . ID id LBRACKET INTEGER RBRACKET
    (132) expr -> . datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (133) expr -> . ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (134) expr -> . datatype error RBRACKET id
    (135) expr -> . datatype LBRACKET error id
    (136) expr -> . datatype LBRACKET RBRACKET error
    (137) expr -> . error LBRACKET RBRACKET id
    (138) expr -> . id LBRACKET expr RBRACKET
    (139) expr -> . id DOT ID
    (62) var_declaration -> . datatype id EQUALS expr SEMI
    (63) var_declaration -> . datatype id SEMI
    (64) var_declaration -> . ID id SEMI
    (65) var_declaration -> . ID id EQUALS LBRACE args RBRACE SEMI
    (66) var_declaration -> . ID id EQUALS expr SEMI
    (67) var_declaration -> . datatype error EQUALS expr SEMI
    (68) var_declaration -> . datatype id error expr SEMI
    (69) var_declaration -> . datatype id EQUALS expr error
    (70) var_declaration -> . datatype id EQUALS error SEMI
    (71) var_declaration -> . datatype error SEMI
    (72) var_declaration -> . datatype id error
    (73) var_declaration -> . ID error EQUALS LBRACE args RBRACE SEMI
    (74) var_declaration -> . ID id error LBRACE args RBRACE SEMI
    (75) var_declaration -> . ID id EQUALS error args RBRACE SEMI
    (76) var_declaration -> . ID id EQUALS LBRACE error RBRACE SEMI
    (77) var_declaration -> . ID id EQUALS LBRACE args error SEMI
    (78) var_declaration -> . ID id EQUALS LBRACE args RBRACE error
    (94) return -> . RETURN expr SEMI
    (95) return -> . RETURN SEMI
    (96) return -> . RETURN error
    (79) assign -> . id EQUALS expr SEMI
    (80) assign -> . id EQUALS LBRACE args RBRACE SEMI
    (81) assign -> . id DOT ID EQUALS expr SEMI
    (82) assign -> . id LBRACKET expr RBRACKET EQUALS expr SEMI
    (83) assign -> . ID error expr SEMI
    (84) assign -> . ID EQUALS error SEMI
    (85) assign -> . ID EQUALS expr error
    (86) assign -> . ID error LBRACE args RBRACE SEMI
    (87) assign -> . ID EQUALS error args RBRACE SEMI
    (88) assign -> . ID EQUALS LBRACE error RBRACE SEMI
    (89) assign -> . ID EQUALS LBRACE args error SEMI
    (90) assign -> . ID EQUALS LBRACE args RBRACE error
    (91) assign -> . ID DOT ID error expr SEMI
    (92) assign -> . ID DOT ID EQUALS error SEMI
    (93) assign -> . ID DOT ID EQUALS expr error
    (7) func_declaration -> . FUNCTION datatype id LPAREN params RPAREN basic_block
    (8) func_declaration -> . error datatype id LPAREN params RPAREN body_block
    (9) func_declaration -> . FUNCTION error id LPAREN params RPAREN body_block
    (10) func_declaration -> . FUNCTION datatype error LPAREN params RPAREN body_block
    (11) func_declaration -> . FUNCTION datatype id error params RPAREN body_block
    (12) func_declaration -> . FUNCTION datatype id LPAREN params error body_block
    (38) struct_declaration -> . STRUCTURE id LBRACE struct_params RBRACE
    (39) struct_declaration -> . STRUCTURE error LBRACE struct_params RBRACE
    (40) struct_declaration -> . STRUCTURE id error struct_params RBRACE
    (41) struct_declaration -> . STRUCTURE id LBRACE struct_params error
    (27) while -> . WHILE conditional basic_block
    (28) while -> . DO basic_block WHILE conditional SEMI
    (29) while -> . error body_block WHILE conditional SEMI
    (30) while -> . DO body_block error conditional SEMI
    (31) while -> . DO body_block WHILE conditional error
    (140) goto_mark -> . ID COLON
    (32) if-else -> . IF conditional basic_block
    (33) if-else -> . IF conditional basic_block ELSE basic_block
    (142) id -> . ID
    (125) int -> . INTEGER
    (126) double -> . DOUBLE
    (127) bool -> . BOOL
    (128) str -> . STRING
    (129) void -> . VOID
    (141) datatype -> . DATATYPE

    ID              shift and go to state 341
    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    GOTO            shift and go to state 13
    MINUS           shift and go to state 20
    LNOT            shift and go to state 21
    NULL            shift and go to state 27
    LPAREN          shift and go to state 18
    error           shift and go to state 19
    RETURN          shift and go to state 30
    FUNCTION        shift and go to state 31
    STRUCTURE       shift and go to state 32
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    INTEGER         shift and go to state 29
    DOUBLE          shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    VOID            shift and go to state 39
    DATATYPE        shift and go to state 40

    scope                          shift and go to state 147
    statement                      shift and go to state 3
    expr                           shift and go to state 4
    var_declaration                shift and go to state 5
    return                         shift and go to state 6
    assign                         shift and go to state 7
    func_declaration               shift and go to state 8
    struct_declaration             shift and go to state 9
    while                          shift and go to state 10
    goto_mark                      shift and go to state 15
    if-else                        shift and go to state 16
    id                             shift and go to state 17
    int                            shift and go to state 22
    double                         shift and go to state 23
    bool                           shift and go to state 24
    str                            shift and go to state 25
    void                           shift and go to state 26
    datatype                       shift and go to state 28

state 335

    (12) func_declaration -> FUNCTION datatype id LPAREN params error body_block .

    BREAK           reduce using rule 12 (func_declaration -> FUNCTION datatype id LPAREN params error body_block .)
    CONTINUE        reduce using rule 12 (func_declaration -> FUNCTION datatype id LPAREN params error body_block .)
    GOTO            reduce using rule 12 (func_declaration -> FUNCTION datatype id LPAREN params error body_block .)
    MINUS           reduce using rule 12 (func_declaration -> FUNCTION datatype id LPAREN params error body_block .)
    LNOT            reduce using rule 12 (func_declaration -> FUNCTION datatype id LPAREN params error body_block .)
    NULL            reduce using rule 12 (func_declaration -> FUNCTION datatype id LPAREN params error body_block .)
    LPAREN          reduce using rule 12 (func_declaration -> FUNCTION datatype id LPAREN params error body_block .)
    ID              reduce using rule 12 (func_declaration -> FUNCTION datatype id LPAREN params error body_block .)
    error           reduce using rule 12 (func_declaration -> FUNCTION datatype id LPAREN params error body_block .)
    RETURN          reduce using rule 12 (func_declaration -> FUNCTION datatype id LPAREN params error body_block .)
    FUNCTION        reduce using rule 12 (func_declaration -> FUNCTION datatype id LPAREN params error body_block .)
    STRUCTURE       reduce using rule 12 (func_declaration -> FUNCTION datatype id LPAREN params error body_block .)
    WHILE           reduce using rule 12 (func_declaration -> FUNCTION datatype id LPAREN params error body_block .)
    DO              reduce using rule 12 (func_declaration -> FUNCTION datatype id LPAREN params error body_block .)
    IF              reduce using rule 12 (func_declaration -> FUNCTION datatype id LPAREN params error body_block .)
    INTEGER         reduce using rule 12 (func_declaration -> FUNCTION datatype id LPAREN params error body_block .)
    DOUBLE          reduce using rule 12 (func_declaration -> FUNCTION datatype id LPAREN params error body_block .)
    BOOL            reduce using rule 12 (func_declaration -> FUNCTION datatype id LPAREN params error body_block .)
    STRING          reduce using rule 12 (func_declaration -> FUNCTION datatype id LPAREN params error body_block .)
    VOID            reduce using rule 12 (func_declaration -> FUNCTION datatype id LPAREN params error body_block .)
    DATATYPE        reduce using rule 12 (func_declaration -> FUNCTION datatype id LPAREN params error body_block .)
    $end            reduce using rule 12 (func_declaration -> FUNCTION datatype id LPAREN params error body_block .)
    RBRACE          reduce using rule 12 (func_declaration -> FUNCTION datatype id LPAREN params error body_block .)


state 336

    (11) func_declaration -> FUNCTION datatype id error params RPAREN body_block .

    BREAK           reduce using rule 11 (func_declaration -> FUNCTION datatype id error params RPAREN body_block .)
    CONTINUE        reduce using rule 11 (func_declaration -> FUNCTION datatype id error params RPAREN body_block .)
    GOTO            reduce using rule 11 (func_declaration -> FUNCTION datatype id error params RPAREN body_block .)
    MINUS           reduce using rule 11 (func_declaration -> FUNCTION datatype id error params RPAREN body_block .)
    LNOT            reduce using rule 11 (func_declaration -> FUNCTION datatype id error params RPAREN body_block .)
    NULL            reduce using rule 11 (func_declaration -> FUNCTION datatype id error params RPAREN body_block .)
    LPAREN          reduce using rule 11 (func_declaration -> FUNCTION datatype id error params RPAREN body_block .)
    ID              reduce using rule 11 (func_declaration -> FUNCTION datatype id error params RPAREN body_block .)
    error           reduce using rule 11 (func_declaration -> FUNCTION datatype id error params RPAREN body_block .)
    RETURN          reduce using rule 11 (func_declaration -> FUNCTION datatype id error params RPAREN body_block .)
    FUNCTION        reduce using rule 11 (func_declaration -> FUNCTION datatype id error params RPAREN body_block .)
    STRUCTURE       reduce using rule 11 (func_declaration -> FUNCTION datatype id error params RPAREN body_block .)
    WHILE           reduce using rule 11 (func_declaration -> FUNCTION datatype id error params RPAREN body_block .)
    DO              reduce using rule 11 (func_declaration -> FUNCTION datatype id error params RPAREN body_block .)
    IF              reduce using rule 11 (func_declaration -> FUNCTION datatype id error params RPAREN body_block .)
    INTEGER         reduce using rule 11 (func_declaration -> FUNCTION datatype id error params RPAREN body_block .)
    DOUBLE          reduce using rule 11 (func_declaration -> FUNCTION datatype id error params RPAREN body_block .)
    BOOL            reduce using rule 11 (func_declaration -> FUNCTION datatype id error params RPAREN body_block .)
    STRING          reduce using rule 11 (func_declaration -> FUNCTION datatype id error params RPAREN body_block .)
    VOID            reduce using rule 11 (func_declaration -> FUNCTION datatype id error params RPAREN body_block .)
    DATATYPE        reduce using rule 11 (func_declaration -> FUNCTION datatype id error params RPAREN body_block .)
    $end            reduce using rule 11 (func_declaration -> FUNCTION datatype id error params RPAREN body_block .)
    RBRACE          reduce using rule 11 (func_declaration -> FUNCTION datatype id error params RPAREN body_block .)


state 337

    (10) func_declaration -> FUNCTION datatype error LPAREN params RPAREN body_block .

    BREAK           reduce using rule 10 (func_declaration -> FUNCTION datatype error LPAREN params RPAREN body_block .)
    CONTINUE        reduce using rule 10 (func_declaration -> FUNCTION datatype error LPAREN params RPAREN body_block .)
    GOTO            reduce using rule 10 (func_declaration -> FUNCTION datatype error LPAREN params RPAREN body_block .)
    MINUS           reduce using rule 10 (func_declaration -> FUNCTION datatype error LPAREN params RPAREN body_block .)
    LNOT            reduce using rule 10 (func_declaration -> FUNCTION datatype error LPAREN params RPAREN body_block .)
    NULL            reduce using rule 10 (func_declaration -> FUNCTION datatype error LPAREN params RPAREN body_block .)
    LPAREN          reduce using rule 10 (func_declaration -> FUNCTION datatype error LPAREN params RPAREN body_block .)
    ID              reduce using rule 10 (func_declaration -> FUNCTION datatype error LPAREN params RPAREN body_block .)
    error           reduce using rule 10 (func_declaration -> FUNCTION datatype error LPAREN params RPAREN body_block .)
    RETURN          reduce using rule 10 (func_declaration -> FUNCTION datatype error LPAREN params RPAREN body_block .)
    FUNCTION        reduce using rule 10 (func_declaration -> FUNCTION datatype error LPAREN params RPAREN body_block .)
    STRUCTURE       reduce using rule 10 (func_declaration -> FUNCTION datatype error LPAREN params RPAREN body_block .)
    WHILE           reduce using rule 10 (func_declaration -> FUNCTION datatype error LPAREN params RPAREN body_block .)
    DO              reduce using rule 10 (func_declaration -> FUNCTION datatype error LPAREN params RPAREN body_block .)
    IF              reduce using rule 10 (func_declaration -> FUNCTION datatype error LPAREN params RPAREN body_block .)
    INTEGER         reduce using rule 10 (func_declaration -> FUNCTION datatype error LPAREN params RPAREN body_block .)
    DOUBLE          reduce using rule 10 (func_declaration -> FUNCTION datatype error LPAREN params RPAREN body_block .)
    BOOL            reduce using rule 10 (func_declaration -> FUNCTION datatype error LPAREN params RPAREN body_block .)
    STRING          reduce using rule 10 (func_declaration -> FUNCTION datatype error LPAREN params RPAREN body_block .)
    VOID            reduce using rule 10 (func_declaration -> FUNCTION datatype error LPAREN params RPAREN body_block .)
    DATATYPE        reduce using rule 10 (func_declaration -> FUNCTION datatype error LPAREN params RPAREN body_block .)
    $end            reduce using rule 10 (func_declaration -> FUNCTION datatype error LPAREN params RPAREN body_block .)
    RBRACE          reduce using rule 10 (func_declaration -> FUNCTION datatype error LPAREN params RPAREN body_block .)


state 338

    (9) func_declaration -> FUNCTION error id LPAREN params RPAREN body_block .

    BREAK           reduce using rule 9 (func_declaration -> FUNCTION error id LPAREN params RPAREN body_block .)
    CONTINUE        reduce using rule 9 (func_declaration -> FUNCTION error id LPAREN params RPAREN body_block .)
    GOTO            reduce using rule 9 (func_declaration -> FUNCTION error id LPAREN params RPAREN body_block .)
    MINUS           reduce using rule 9 (func_declaration -> FUNCTION error id LPAREN params RPAREN body_block .)
    LNOT            reduce using rule 9 (func_declaration -> FUNCTION error id LPAREN params RPAREN body_block .)
    NULL            reduce using rule 9 (func_declaration -> FUNCTION error id LPAREN params RPAREN body_block .)
    LPAREN          reduce using rule 9 (func_declaration -> FUNCTION error id LPAREN params RPAREN body_block .)
    ID              reduce using rule 9 (func_declaration -> FUNCTION error id LPAREN params RPAREN body_block .)
    error           reduce using rule 9 (func_declaration -> FUNCTION error id LPAREN params RPAREN body_block .)
    RETURN          reduce using rule 9 (func_declaration -> FUNCTION error id LPAREN params RPAREN body_block .)
    FUNCTION        reduce using rule 9 (func_declaration -> FUNCTION error id LPAREN params RPAREN body_block .)
    STRUCTURE       reduce using rule 9 (func_declaration -> FUNCTION error id LPAREN params RPAREN body_block .)
    WHILE           reduce using rule 9 (func_declaration -> FUNCTION error id LPAREN params RPAREN body_block .)
    DO              reduce using rule 9 (func_declaration -> FUNCTION error id LPAREN params RPAREN body_block .)
    IF              reduce using rule 9 (func_declaration -> FUNCTION error id LPAREN params RPAREN body_block .)
    INTEGER         reduce using rule 9 (func_declaration -> FUNCTION error id LPAREN params RPAREN body_block .)
    DOUBLE          reduce using rule 9 (func_declaration -> FUNCTION error id LPAREN params RPAREN body_block .)
    BOOL            reduce using rule 9 (func_declaration -> FUNCTION error id LPAREN params RPAREN body_block .)
    STRING          reduce using rule 9 (func_declaration -> FUNCTION error id LPAREN params RPAREN body_block .)
    VOID            reduce using rule 9 (func_declaration -> FUNCTION error id LPAREN params RPAREN body_block .)
    DATATYPE        reduce using rule 9 (func_declaration -> FUNCTION error id LPAREN params RPAREN body_block .)
    $end            reduce using rule 9 (func_declaration -> FUNCTION error id LPAREN params RPAREN body_block .)
    RBRACE          reduce using rule 9 (func_declaration -> FUNCTION error id LPAREN params RPAREN body_block .)


state 339

    (133) expr -> ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args . RBRACE
    (60) args -> args . COMMA expr
    (61) args -> args . error expr

    RBRACE          shift and go to state 342
    COMMA           shift and go to state 196
    error           shift and go to state 197


state 340

    (132) expr -> datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args . RBRACE
    (60) args -> args . COMMA expr
    (61) args -> args . error expr

    RBRACE          shift and go to state 343
    COMMA           shift and go to state 196
    error           shift and go to state 197


state 341

    (53) param -> error ID .
    (131) expr -> ID . id LBRACKET INTEGER RBRACKET
    (133) expr -> ID . id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE
    (64) var_declaration -> ID . id SEMI
    (65) var_declaration -> ID . id EQUALS LBRACE args RBRACE SEMI
    (66) var_declaration -> ID . id EQUALS expr SEMI
    (73) var_declaration -> ID . error EQUALS LBRACE args RBRACE SEMI
    (74) var_declaration -> ID . id error LBRACE args RBRACE SEMI
    (75) var_declaration -> ID . id EQUALS error args RBRACE SEMI
    (76) var_declaration -> ID . id EQUALS LBRACE error RBRACE SEMI
    (77) var_declaration -> ID . id EQUALS LBRACE args error SEMI
    (78) var_declaration -> ID . id EQUALS LBRACE args RBRACE error
    (83) assign -> ID . error expr SEMI
    (84) assign -> ID . EQUALS error SEMI
    (85) assign -> ID . EQUALS expr error
    (86) assign -> ID . error LBRACE args RBRACE SEMI
    (87) assign -> ID . EQUALS error args RBRACE SEMI
    (88) assign -> ID . EQUALS LBRACE error RBRACE SEMI
    (89) assign -> ID . EQUALS LBRACE args error SEMI
    (90) assign -> ID . EQUALS LBRACE args RBRACE error
    (91) assign -> ID . DOT ID error expr SEMI
    (92) assign -> ID . DOT ID EQUALS error SEMI
    (93) assign -> ID . DOT ID EQUALS expr error
    (140) goto_mark -> ID . COLON
    (142) id -> ID .
    (142) id -> . ID

  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    RPAREN          reduce using rule 53 (param -> error ID .)
    COMMA           reduce using rule 53 (param -> error ID .)
    error           shift and go to state 67
    EQUALS          shift and go to state 66
    DOT             shift and go to state 68
    COLON           shift and go to state 69
    LPAREN          reduce using rule 142 (id -> ID .)
    LBRACKET        reduce using rule 142 (id -> ID .)
    SEMI            reduce using rule 142 (id -> ID .)
    PLUS            reduce using rule 142 (id -> ID .)
    MINUS           reduce using rule 142 (id -> ID .)
    MUL             reduce using rule 142 (id -> ID .)
    DIVIDE          reduce using rule 142 (id -> ID .)
    INTDIVIDE       reduce using rule 142 (id -> ID .)
    MODULO          reduce using rule 142 (id -> ID .)
    POW             reduce using rule 142 (id -> ID .)
    LE              reduce using rule 142 (id -> ID .)
    GE              reduce using rule 142 (id -> ID .)
    LT              reduce using rule 142 (id -> ID .)
    GT              reduce using rule 142 (id -> ID .)
    EQ              reduce using rule 142 (id -> ID .)
    NE              reduce using rule 142 (id -> ID .)
    LAND            reduce using rule 142 (id -> ID .)
    LOR             reduce using rule 142 (id -> ID .)
    BAND            reduce using rule 142 (id -> ID .)
    BOR             reduce using rule 142 (id -> ID .)
    ID              shift and go to state 64

  ! error           [ reduce using rule 53 (param -> error ID .) ]
  ! error           [ reduce using rule 142 (id -> ID .) ]
  ! DOT             [ reduce using rule 142 (id -> ID .) ]
  ! EQUALS          [ reduce using rule 142 (id -> ID .) ]

    id                             shift and go to state 65

state 342

    (133) expr -> ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .

    SEMI            reduce using rule 133 (expr -> ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    PLUS            reduce using rule 133 (expr -> ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    MINUS           reduce using rule 133 (expr -> ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    MUL             reduce using rule 133 (expr -> ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    DIVIDE          reduce using rule 133 (expr -> ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    INTDIVIDE       reduce using rule 133 (expr -> ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    MODULO          reduce using rule 133 (expr -> ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    POW             reduce using rule 133 (expr -> ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    LE              reduce using rule 133 (expr -> ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    GE              reduce using rule 133 (expr -> ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    LT              reduce using rule 133 (expr -> ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    GT              reduce using rule 133 (expr -> ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    EQ              reduce using rule 133 (expr -> ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    NE              reduce using rule 133 (expr -> ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    error           reduce using rule 133 (expr -> ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    LAND            reduce using rule 133 (expr -> ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    LOR             reduce using rule 133 (expr -> ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    BAND            reduce using rule 133 (expr -> ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    BOR             reduce using rule 133 (expr -> ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    RPAREN          reduce using rule 133 (expr -> ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    COMMA           reduce using rule 133 (expr -> ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    RBRACKET        reduce using rule 133 (expr -> ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    RBRACE          reduce using rule 133 (expr -> ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)


state 343

    (132) expr -> datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .

    SEMI            reduce using rule 132 (expr -> datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    PLUS            reduce using rule 132 (expr -> datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    MINUS           reduce using rule 132 (expr -> datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    MUL             reduce using rule 132 (expr -> datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    DIVIDE          reduce using rule 132 (expr -> datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    INTDIVIDE       reduce using rule 132 (expr -> datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    MODULO          reduce using rule 132 (expr -> datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    POW             reduce using rule 132 (expr -> datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    LE              reduce using rule 132 (expr -> datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    GE              reduce using rule 132 (expr -> datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    LT              reduce using rule 132 (expr -> datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    GT              reduce using rule 132 (expr -> datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    EQ              reduce using rule 132 (expr -> datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    NE              reduce using rule 132 (expr -> datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    error           reduce using rule 132 (expr -> datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    LAND            reduce using rule 132 (expr -> datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    LOR             reduce using rule 132 (expr -> datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    BAND            reduce using rule 132 (expr -> datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    BOR             reduce using rule 132 (expr -> datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    RPAREN          reduce using rule 132 (expr -> datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    COMMA           reduce using rule 132 (expr -> datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    RBRACKET        reduce using rule 132 (expr -> datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)
    RBRACE          reduce using rule 132 (expr -> datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for error in state 14 resolved as shift
WARNING: shift/reduce conflict for DOT in state 14 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 14 resolved as shift
WARNING: shift/reduce conflict for error in state 17 resolved as shift
WARNING: shift/reduce conflict for error in state 70 resolved as shift
WARNING: shift/reduce conflict for error in state 71 resolved as shift
WARNING: shift/reduce conflict for error in state 76 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 117 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 117 resolved as shift
WARNING: shift/reduce conflict for MUL in state 117 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 117 resolved as shift
WARNING: shift/reduce conflict for INTDIVIDE in state 117 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 117 resolved as shift
WARNING: shift/reduce conflict for POW in state 117 resolved as shift
WARNING: shift/reduce conflict for LE in state 117 resolved as shift
WARNING: shift/reduce conflict for GE in state 117 resolved as shift
WARNING: shift/reduce conflict for LT in state 117 resolved as shift
WARNING: shift/reduce conflict for GT in state 117 resolved as shift
WARNING: shift/reduce conflict for EQ in state 117 resolved as shift
WARNING: shift/reduce conflict for NE in state 117 resolved as shift
WARNING: shift/reduce conflict for error in state 117 resolved as shift
WARNING: shift/reduce conflict for LAND in state 117 resolved as shift
WARNING: shift/reduce conflict for LOR in state 117 resolved as shift
WARNING: shift/reduce conflict for BAND in state 117 resolved as shift
WARNING: shift/reduce conflict for BOR in state 117 resolved as shift
WARNING: shift/reduce conflict for error in state 127 resolved as shift
WARNING: shift/reduce conflict for error in state 129 resolved as shift
WARNING: shift/reduce conflict for error in state 131 resolved as shift
WARNING: shift/reduce conflict for error in state 135 resolved as shift
WARNING: shift/reduce conflict for error in state 140 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 156 resolved as shift
WARNING: shift/reduce conflict for LNOT in state 156 resolved as shift
WARNING: shift/reduce conflict for NULL in state 156 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 156 resolved as shift
WARNING: shift/reduce conflict for ID in state 156 resolved as shift
WARNING: shift/reduce conflict for error in state 156 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 156 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 156 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 156 resolved as shift
WARNING: shift/reduce conflict for STRING in state 156 resolved as shift
WARNING: shift/reduce conflict for VOID in state 156 resolved as shift
WARNING: shift/reduce conflict for DATATYPE in state 156 resolved as shift
WARNING: shift/reduce conflict for error in state 180 resolved as shift
WARNING: shift/reduce conflict for error in state 182 resolved as shift
WARNING: shift/reduce conflict for error in state 183 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 186 resolved as shift
WARNING: shift/reduce conflict for LNOT in state 186 resolved as shift
WARNING: shift/reduce conflict for NULL in state 186 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 186 resolved as shift
WARNING: shift/reduce conflict for ID in state 186 resolved as shift
WARNING: shift/reduce conflict for error in state 186 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 186 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 186 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 186 resolved as shift
WARNING: shift/reduce conflict for STRING in state 186 resolved as shift
WARNING: shift/reduce conflict for VOID in state 186 resolved as shift
WARNING: shift/reduce conflict for DATATYPE in state 186 resolved as shift
WARNING: shift/reduce conflict for error in state 189 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 195 resolved as shift
WARNING: shift/reduce conflict for error in state 195 resolved as shift
WARNING: shift/reduce conflict for error in state 207 resolved as shift
WARNING: shift/reduce conflict for DATATYPE in state 210 resolved as shift
WARNING: shift/reduce conflict for error in state 210 resolved as shift
WARNING: shift/reduce conflict for error in state 219 resolved as shift
WARNING: shift/reduce conflict for error in state 220 resolved as shift
WARNING: shift/reduce conflict for error in state 221 resolved as shift
WARNING: shift/reduce conflict for error in state 222 resolved as shift
WARNING: shift/reduce conflict for error in state 231 resolved as shift
WARNING: shift/reduce conflict for error in state 254 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 267 resolved as shift
WARNING: shift/reduce conflict for LNOT in state 267 resolved as shift
WARNING: shift/reduce conflict for NULL in state 267 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 267 resolved as shift
WARNING: shift/reduce conflict for ID in state 267 resolved as shift
WARNING: shift/reduce conflict for error in state 267 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 267 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 267 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 267 resolved as shift
WARNING: shift/reduce conflict for STRING in state 267 resolved as shift
WARNING: shift/reduce conflict for VOID in state 267 resolved as shift
WARNING: shift/reduce conflict for DATATYPE in state 267 resolved as shift
WARNING: shift/reduce conflict for DATATYPE in state 276 resolved as shift
WARNING: shift/reduce conflict for error in state 276 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 302 resolved as shift
WARNING: shift/reduce conflict for LNOT in state 302 resolved as shift
WARNING: shift/reduce conflict for NULL in state 302 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 302 resolved as shift
WARNING: shift/reduce conflict for ID in state 302 resolved as shift
WARNING: shift/reduce conflict for error in state 302 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 302 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 302 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 302 resolved as shift
WARNING: shift/reduce conflict for STRING in state 302 resolved as shift
WARNING: shift/reduce conflict for VOID in state 302 resolved as shift
WARNING: shift/reduce conflict for DATATYPE in state 302 resolved as shift
WARNING: shift/reduce conflict for error in state 320 resolved as shift
WARNING: shift/reduce conflict for error in state 332 resolved as shift
WARNING: shift/reduce conflict for error in state 341 resolved as shift
WARNING: shift/reduce conflict for error in state 341 resolved as shift
WARNING: shift/reduce conflict for DOT in state 341 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 341 resolved as shift
