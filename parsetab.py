
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftCOMMArightEQUALSnonassocLORnonassocLANDnonassocBORnonassocBANDnonassocEQNEnonassocLEGELTGTleftPLUSMINUSleftMULDIVIDEINTDIVIDEMODULOrightPOWrightUMINUSLNOTleftLBRACERBRACELPARENRPARENLBRACKETRBRACKETBAND BOOL BOR BREAK COLON COMMA COMMENT CONTINUE DATATYPE DIVIDE DO DOT DOUBLE ELSE EQ EQUALS ERROR FUNCTION GE GOTO GT ID IF INTDIVIDE INTEGER LAND LBRACE LBRACKET LE LNOT LOR LPAREN LT MINUS MODULO MUL NE NEWLINE NULL PLUS POW RBRACE RBRACKET RETURN RPAREN SEMI STRING STRUCTURE VOID WHILEprogram :\n               | body_block\n    body_block : stmt_list\n               | LBRACE stmt_list RBRACE\n    func_declaration : FUNCTION datatype id LPAREN params RPAREN body_blockstmt_list : stmt_list statement\n                 | statement\n    statement : expr SEMI\n              | var_declaration\n              | return\n              | assign\n              | func_declaration\n              | struct_declaration\n              | while\n              | BREAK SEMI\n              | CONTINUE SEMI\n              | GOTO ID SEMI\n              | goto_mark\n              | if-else\n    \n    while : WHILE conditional body_block\n          | DO body_block WHILE conditional SEMI\n    \n    if-else : IF conditional body_block\n            | IF conditional body_block ELSE body_block\n    conditional : LPAREN expr RPAREN\n    struct_declaration : STRUCTURE id LBRACE struct_params RBRACE\n    \n    struct_params : struct_param\n                  | struct_params COMMA struct_param\n    \n    struct_param : DATATYPE ID\n                 | func_declaration\n    params :\n              | param\n              | params COMMA paramparam : DATATYPE IDexpr : id LPAREN args RPARENargs :\n            | expr\n            | args COMMA expr\n    var_declaration : datatype id EQUALS expr SEMI\n                    | datatype id SEMI\n                    | ID id EQUALS LBRACE args RBRACE SEMI\n    assign : ID EQUALS expr SEMI\n              | ID EQUALS LBRACE args RBRACE SEMI\n              | ID DOT ID EQUALS expr SEMI\n    return : RETURN expr SEMI\n           | RETURN SEMI\n    expr : expr PLUS expr\n            | expr MINUS expr\n            | expr MUL expr\n            | expr DIVIDE expr\n            | expr INTDIVIDE expr\n            | expr MODULO expr\n            | expr POW exprexpr : expr LE expr\n            | expr GE expr\n            | expr LT expr\n            | expr GT expr\n            | expr EQ expr\n            | expr NE exprexpr : MINUS expr %prec UMINUS\n            | expr LAND expr\n            | expr LOR expr\n            | LNOT expr\n    expr : expr BAND expr\n         | expr BOR expr\n    expr : id\n            | int\n            | double\n            | bool\n            | str\n            | void\n            | NULL\n            | LPAREN expr RPARENint : INTEGERdouble : DOUBLEbool : BOOLstr : STRINGvoid : VOID\n    expr : datatype LBRACKET RBRACKET id\n         | datatype LBRACKET RBRACKET id EQUALS datatype LBRACKET INTEGER RBRACKET\n    expr : ID LBRACKET expr RBRACKETgoto_mark : ID COLONdatatype : DATATYPEid : ID'
    
_lr_action_items = {'$end':([0,1,2,3,5,7,8,9,10,11,12,17,18,42,44,62,63,70,80,87,105,116,117,120,123,126,146,150,153,154,156,157,163,165,],[-1,0,-2,-3,-7,-9,-10,-11,-12,-13,-14,-18,-19,-6,-8,-15,-16,-81,-45,-4,-17,-39,-44,-20,-22,-41,-38,-25,-21,-23,-42,-43,-40,-5,]),'LBRACE':([0,35,65,68,82,83,86,107,138,140,159,],[4,4,-83,109,119,4,4,125,-24,4,4,]),'BREAK':([0,3,4,5,7,8,9,10,11,12,17,18,35,42,43,44,62,63,70,80,83,86,87,105,116,117,120,123,126,138,140,146,150,153,154,156,157,159,163,165,],[13,13,13,-7,-9,-10,-11,-12,-13,-14,-18,-19,13,-6,13,-8,-15,-16,-81,-45,13,13,-4,-17,-39,-44,-20,-22,-41,-24,13,-38,-25,-21,-23,-42,-43,13,-40,-5,]),'CONTINUE':([0,3,4,5,7,8,9,10,11,12,17,18,35,42,43,44,62,63,70,80,83,86,87,105,116,117,120,123,126,138,140,146,150,153,154,156,157,159,163,165,],[14,14,14,-7,-9,-10,-11,-12,-13,-14,-18,-19,14,-6,14,-8,-15,-16,-81,-45,14,14,-4,-17,-39,-44,-20,-22,-41,-24,14,-38,-25,-21,-23,-42,-43,14,-40,-5,]),'GOTO':([0,3,4,5,7,8,9,10,11,12,17,18,35,42,43,44,62,63,70,80,83,86,87,105,116,117,120,123,126,138,140,146,150,153,154,156,157,159,163,165,],[15,15,15,-7,-9,-10,-11,-12,-13,-14,-18,-19,15,-6,15,-8,-15,-16,-81,-45,15,15,-4,-17,-39,-44,-20,-22,-41,-24,15,-38,-25,-21,-23,-42,-43,15,-40,-5,]),'MINUS':([0,3,4,5,6,7,8,9,10,11,12,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,35,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,68,70,71,72,74,75,76,79,80,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,112,113,115,116,117,120,121,123,124,125,126,128,129,130,131,132,138,140,143,144,146,150,153,154,156,157,159,163,165,168,],[21,21,21,-7,46,-9,-10,-11,-12,-13,-14,-83,-18,-19,-65,21,21,21,-66,-67,-68,-69,-70,-71,-73,21,21,-74,-75,-76,-77,-6,21,-8,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-15,-16,-83,21,21,-81,21,46,-83,-59,-62,46,-45,21,21,21,-4,-46,-47,-48,-49,-50,-51,-52,46,46,46,46,46,46,46,46,46,46,-17,46,46,21,46,-72,21,-39,-44,-20,46,-22,-80,21,-41,21,-34,21,-78,46,-24,21,46,46,-38,-25,-21,-23,-42,-43,21,-40,-5,-79,]),'LNOT':([0,3,4,5,7,8,9,10,11,12,17,18,20,21,22,31,35,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,68,70,71,80,83,84,86,87,105,109,115,116,117,120,123,125,126,128,130,138,140,146,150,153,154,156,157,159,163,165,],[22,22,22,-7,-9,-10,-11,-12,-13,-14,-18,-19,22,22,22,22,22,-6,22,-8,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-15,-16,22,22,-81,22,-45,22,22,22,-4,-17,22,22,-39,-44,-20,-22,22,-41,22,22,-24,22,-38,-25,-21,-23,-42,-43,22,-40,-5,]),'NULL':([0,3,4,5,7,8,9,10,11,12,17,18,20,21,22,31,35,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,68,70,71,80,83,84,86,87,105,109,115,116,117,120,123,125,126,128,130,138,140,146,150,153,154,156,157,159,163,165,],[28,28,28,-7,-9,-10,-11,-12,-13,-14,-18,-19,28,28,28,28,28,-6,28,-8,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-15,-16,28,28,-81,28,-45,28,28,28,-4,-17,28,28,-39,-44,-20,-22,28,-41,28,28,-24,28,-38,-25,-21,-23,-42,-43,28,-40,-5,]),'LPAREN':([0,3,4,5,7,8,9,10,11,12,16,17,18,19,20,21,22,31,34,35,36,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,68,70,71,74,80,83,84,86,87,105,109,115,116,117,118,120,122,123,125,126,128,130,138,140,146,150,153,154,156,157,159,163,165,],[20,20,20,-7,-9,-10,-11,-12,-13,-14,-83,-18,-19,71,20,20,20,20,84,20,84,-6,20,-8,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-15,-16,-83,20,20,-81,20,-83,-45,20,20,20,-4,-17,20,20,-39,-44,133,-20,84,-22,20,-41,20,20,-24,20,-38,-25,-21,-23,-42,-43,20,-40,-5,]),'ID':([0,3,4,5,7,8,9,10,11,12,15,16,17,18,20,21,22,29,31,33,35,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,68,69,70,71,80,81,83,84,86,87,105,109,114,115,116,117,120,123,125,126,128,130,136,138,140,146,149,150,153,154,156,157,159,163,165,],[16,16,16,-7,-9,-10,-11,-12,-13,-14,64,65,-18,-19,74,74,74,65,74,65,16,-82,-6,16,-8,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-15,-16,74,74,110,-81,74,-45,65,16,74,16,-4,-17,74,65,74,-39,-44,-20,-22,74,-41,74,74,152,-24,16,-38,161,-25,-21,-23,-42,-43,16,-40,-5,]),'RETURN':([0,3,4,5,7,8,9,10,11,12,17,18,35,42,43,44,62,63,70,80,83,86,87,105,116,117,120,123,126,138,140,146,150,153,154,156,157,159,163,165,],[31,31,31,-7,-9,-10,-11,-12,-13,-14,-18,-19,31,-6,31,-8,-15,-16,-81,-45,31,31,-4,-17,-39,-44,-20,-22,-41,-24,31,-38,-25,-21,-23,-42,-43,31,-40,-5,]),'FUNCTION':([0,3,4,5,7,8,9,10,11,12,17,18,35,42,43,44,62,63,70,80,83,86,87,105,116,117,119,120,123,126,138,140,146,150,151,153,154,156,157,159,163,165,],[32,32,32,-7,-9,-10,-11,-12,-13,-14,-18,-19,32,-6,32,-8,-15,-16,-81,-45,32,32,-4,-17,-39,-44,32,-20,-22,-41,-24,32,-38,-25,32,-21,-23,-42,-43,32,-40,-5,]),'STRUCTURE':([0,3,4,5,7,8,9,10,11,12,17,18,35,42,43,44,62,63,70,80,83,86,87,105,116,117,120,123,126,138,140,146,150,153,154,156,157,159,163,165,],[33,33,33,-7,-9,-10,-11,-12,-13,-14,-18,-19,33,-6,33,-8,-15,-16,-81,-45,33,33,-4,-17,-39,-44,-20,-22,-41,-24,33,-38,-25,-21,-23,-42,-43,33,-40,-5,]),'WHILE':([0,3,4,5,7,8,9,10,11,12,17,18,35,42,43,44,62,63,70,80,83,85,86,87,105,116,117,120,123,126,138,140,146,150,153,154,156,157,159,163,165,],[34,34,34,-7,-9,-10,-11,-12,-13,-14,-18,-19,34,-6,34,-8,-15,-16,-81,-45,34,122,34,-4,-17,-39,-44,-20,-22,-41,-24,34,-38,-25,-21,-23,-42,-43,34,-40,-5,]),'DO':([0,3,4,5,7,8,9,10,11,12,17,18,35,42,43,44,62,63,70,80,83,86,87,105,116,117,120,123,126,138,140,146,150,153,154,156,157,159,163,165,],[35,35,35,-7,-9,-10,-11,-12,-13,-14,-18,-19,35,-6,35,-8,-15,-16,-81,-45,35,35,-4,-17,-39,-44,-20,-22,-41,-24,35,-38,-25,-21,-23,-42,-43,35,-40,-5,]),'IF':([0,3,4,5,7,8,9,10,11,12,17,18,35,42,43,44,62,63,70,80,83,86,87,105,116,117,120,123,126,138,140,146,150,153,154,156,157,159,163,165,],[36,36,36,-7,-9,-10,-11,-12,-13,-14,-18,-19,36,-6,36,-8,-15,-16,-81,-45,36,36,-4,-17,-39,-44,-20,-22,-41,-24,36,-38,-25,-21,-23,-42,-43,36,-40,-5,]),'INTEGER':([0,3,4,5,7,8,9,10,11,12,17,18,20,21,22,31,35,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,68,70,71,80,83,84,86,87,105,109,115,116,117,120,123,125,126,128,130,138,140,146,150,153,154,156,157,159,163,164,165,],[30,30,30,-7,-9,-10,-11,-12,-13,-14,-18,-19,30,30,30,30,30,-6,30,-8,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-15,-16,30,30,-81,30,-45,30,30,30,-4,-17,30,30,-39,-44,-20,-22,30,-41,30,30,-24,30,-38,-25,-21,-23,-42,-43,30,-40,167,-5,]),'DOUBLE':([0,3,4,5,7,8,9,10,11,12,17,18,20,21,22,31,35,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,68,70,71,80,83,84,86,87,105,109,115,116,117,120,123,125,126,128,130,138,140,146,150,153,154,156,157,159,163,165,],[37,37,37,-7,-9,-10,-11,-12,-13,-14,-18,-19,37,37,37,37,37,-6,37,-8,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-15,-16,37,37,-81,37,-45,37,37,37,-4,-17,37,37,-39,-44,-20,-22,37,-41,37,37,-24,37,-38,-25,-21,-23,-42,-43,37,-40,-5,]),'BOOL':([0,3,4,5,7,8,9,10,11,12,17,18,20,21,22,31,35,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,68,70,71,80,83,84,86,87,105,109,115,116,117,120,123,125,126,128,130,138,140,146,150,153,154,156,157,159,163,165,],[38,38,38,-7,-9,-10,-11,-12,-13,-14,-18,-19,38,38,38,38,38,-6,38,-8,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-15,-16,38,38,-81,38,-45,38,38,38,-4,-17,38,38,-39,-44,-20,-22,38,-41,38,38,-24,38,-38,-25,-21,-23,-42,-43,38,-40,-5,]),'STRING':([0,3,4,5,7,8,9,10,11,12,17,18,20,21,22,31,35,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,68,70,71,80,83,84,86,87,105,109,115,116,117,120,123,125,126,128,130,138,140,146,150,153,154,156,157,159,163,165,],[39,39,39,-7,-9,-10,-11,-12,-13,-14,-18,-19,39,39,39,39,39,-6,39,-8,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-15,-16,39,39,-81,39,-45,39,39,39,-4,-17,39,39,-39,-44,-20,-22,39,-41,39,39,-24,39,-38,-25,-21,-23,-42,-43,39,-40,-5,]),'VOID':([0,3,4,5,7,8,9,10,11,12,17,18,20,21,22,31,35,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,68,70,71,80,83,84,86,87,105,109,115,116,117,120,123,125,126,128,130,138,140,146,150,153,154,156,157,159,163,165,],[40,40,40,-7,-9,-10,-11,-12,-13,-14,-18,-19,40,40,40,40,40,-6,40,-8,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-15,-16,40,40,-81,40,-45,40,40,40,-4,-17,40,40,-39,-44,-20,-22,40,-41,40,40,-24,40,-38,-25,-21,-23,-42,-43,40,-40,-5,]),'DATATYPE':([0,3,4,5,7,8,9,10,11,12,17,18,20,21,22,31,32,35,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,68,70,71,80,83,84,86,87,105,109,115,116,117,119,120,123,125,126,128,130,133,138,140,145,146,150,151,153,154,156,157,159,160,163,165,],[41,41,41,-7,-9,-10,-11,-12,-13,-14,-18,-19,41,41,41,41,41,41,-6,41,-8,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-15,-16,41,41,-81,41,-45,41,41,41,-4,-17,41,41,-39,-44,136,-20,-22,41,-41,41,41,149,-24,41,41,-38,-25,136,-21,-23,-42,-43,41,149,-40,-5,]),'RBRACE':([3,5,7,8,9,10,11,12,17,18,19,23,24,25,26,27,28,30,37,38,39,40,42,43,44,62,63,65,70,74,75,76,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,109,112,113,116,117,120,123,124,125,126,127,129,131,134,135,137,141,144,146,150,152,153,154,156,157,162,163,165,168,],[-3,-7,-9,-10,-11,-12,-13,-14,-18,-19,-65,-66,-67,-68,-69,-70,-71,-73,-74,-75,-76,-77,-6,87,-8,-15,-16,-83,-81,-83,-59,-62,-45,-4,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-60,-61,-63,-64,-17,-35,-36,-72,-39,-44,-20,-22,-80,-35,-41,142,-34,-78,150,-26,-29,155,-37,-38,-25,-28,-21,-23,-42,-43,-27,-40,-5,-79,]),'ELSE':([3,5,7,8,9,10,11,12,17,18,42,44,62,63,70,80,87,105,116,117,120,123,126,146,150,153,154,156,157,163,165,],[-3,-7,-9,-10,-11,-12,-13,-14,-18,-19,-6,-8,-15,-16,-81,-45,-4,-17,-39,-44,-20,140,-41,-38,-25,-21,-23,-42,-43,-40,-5,]),'COMMA':([3,5,7,8,9,10,11,12,17,18,19,23,24,25,26,27,28,30,37,38,39,40,42,44,62,63,65,70,71,74,75,76,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,109,111,112,113,116,117,120,123,124,125,126,127,129,131,133,134,135,137,141,144,146,147,148,150,152,153,154,156,157,161,162,163,165,166,168,],[-3,-7,-9,-10,-11,-12,-13,-14,-18,-19,-65,-66,-67,-68,-69,-70,-71,-73,-74,-75,-76,-77,-6,-8,-15,-16,-83,-81,-35,-83,-59,-62,-45,-4,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-60,-61,-63,-64,-17,-35,130,-36,-72,-39,-44,-20,-22,-80,-35,-41,130,-34,-78,-30,151,-26,-29,130,-37,-38,160,-31,-25,-28,-21,-23,-42,-43,-33,-27,-40,-5,-32,-79,]),'SEMI':([6,13,14,16,19,23,24,25,26,27,28,30,31,37,38,39,40,64,65,74,75,76,78,79,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,108,113,124,129,131,132,138,139,142,143,155,168,],[44,62,63,-83,-65,-66,-67,-68,-69,-70,-71,-73,80,-74,-75,-76,-77,105,-83,-83,-59,-62,116,117,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-60,-61,-63,-64,126,-72,-80,-34,-78,146,-24,153,156,157,163,-79,]),'PLUS':([6,16,19,23,24,25,26,27,28,30,37,38,39,40,65,72,74,75,76,79,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,112,113,121,124,129,131,132,143,144,168,],[45,-83,-65,-66,-67,-68,-69,-70,-71,-73,-74,-75,-76,-77,-83,45,-83,-59,-62,45,-46,-47,-48,-49,-50,-51,-52,45,45,45,45,45,45,45,45,45,45,45,45,45,-72,45,-80,-34,-78,45,45,45,-79,]),'MUL':([6,16,19,23,24,25,26,27,28,30,37,38,39,40,65,72,74,75,76,79,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,112,113,121,124,129,131,132,143,144,168,],[47,-83,-65,-66,-67,-68,-69,-70,-71,-73,-74,-75,-76,-77,-83,47,-83,-59,-62,47,47,47,-48,-49,-50,-51,-52,47,47,47,47,47,47,47,47,47,47,47,47,47,-72,47,-80,-34,-78,47,47,47,-79,]),'DIVIDE':([6,16,19,23,24,25,26,27,28,30,37,38,39,40,65,72,74,75,76,79,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,112,113,121,124,129,131,132,143,144,168,],[48,-83,-65,-66,-67,-68,-69,-70,-71,-73,-74,-75,-76,-77,-83,48,-83,-59,-62,48,48,48,-48,-49,-50,-51,-52,48,48,48,48,48,48,48,48,48,48,48,48,48,-72,48,-80,-34,-78,48,48,48,-79,]),'INTDIVIDE':([6,16,19,23,24,25,26,27,28,30,37,38,39,40,65,72,74,75,76,79,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,112,113,121,124,129,131,132,143,144,168,],[49,-83,-65,-66,-67,-68,-69,-70,-71,-73,-74,-75,-76,-77,-83,49,-83,-59,-62,49,49,49,-48,-49,-50,-51,-52,49,49,49,49,49,49,49,49,49,49,49,49,49,-72,49,-80,-34,-78,49,49,49,-79,]),'MODULO':([6,16,19,23,24,25,26,27,28,30,37,38,39,40,65,72,74,75,76,79,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,112,113,121,124,129,131,132,143,144,168,],[50,-83,-65,-66,-67,-68,-69,-70,-71,-73,-74,-75,-76,-77,-83,50,-83,-59,-62,50,50,50,-48,-49,-50,-51,-52,50,50,50,50,50,50,50,50,50,50,50,50,50,-72,50,-80,-34,-78,50,50,50,-79,]),'POW':([6,16,19,23,24,25,26,27,28,30,37,38,39,40,65,72,74,75,76,79,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,112,113,121,124,129,131,132,143,144,168,],[51,-83,-65,-66,-67,-68,-69,-70,-71,-73,-74,-75,-76,-77,-83,51,-83,-59,-62,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-72,51,-80,-34,-78,51,51,51,-79,]),'LE':([6,16,19,23,24,25,26,27,28,30,37,38,39,40,65,72,74,75,76,79,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,112,113,121,124,129,131,132,143,144,168,],[52,-83,-65,-66,-67,-68,-69,-70,-71,-73,-74,-75,-76,-77,-83,52,-83,-59,-62,52,-46,-47,-48,-49,-50,-51,-52,None,None,None,None,52,52,52,52,52,52,52,52,52,-72,52,-80,-34,-78,52,52,52,-79,]),'GE':([6,16,19,23,24,25,26,27,28,30,37,38,39,40,65,72,74,75,76,79,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,112,113,121,124,129,131,132,143,144,168,],[53,-83,-65,-66,-67,-68,-69,-70,-71,-73,-74,-75,-76,-77,-83,53,-83,-59,-62,53,-46,-47,-48,-49,-50,-51,-52,None,None,None,None,53,53,53,53,53,53,53,53,53,-72,53,-80,-34,-78,53,53,53,-79,]),'LT':([6,16,19,23,24,25,26,27,28,30,37,38,39,40,65,72,74,75,76,79,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,112,113,121,124,129,131,132,143,144,168,],[54,-83,-65,-66,-67,-68,-69,-70,-71,-73,-74,-75,-76,-77,-83,54,-83,-59,-62,54,-46,-47,-48,-49,-50,-51,-52,None,None,None,None,54,54,54,54,54,54,54,54,54,-72,54,-80,-34,-78,54,54,54,-79,]),'GT':([6,16,19,23,24,25,26,27,28,30,37,38,39,40,65,72,74,75,76,79,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,112,113,121,124,129,131,132,143,144,168,],[55,-83,-65,-66,-67,-68,-69,-70,-71,-73,-74,-75,-76,-77,-83,55,-83,-59,-62,55,-46,-47,-48,-49,-50,-51,-52,None,None,None,None,55,55,55,55,55,55,55,55,55,-72,55,-80,-34,-78,55,55,55,-79,]),'EQ':([6,16,19,23,24,25,26,27,28,30,37,38,39,40,65,72,74,75,76,79,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,112,113,121,124,129,131,132,143,144,168,],[56,-83,-65,-66,-67,-68,-69,-70,-71,-73,-74,-75,-76,-77,-83,56,-83,-59,-62,56,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,None,None,56,56,56,56,56,56,56,-72,56,-80,-34,-78,56,56,56,-79,]),'NE':([6,16,19,23,24,25,26,27,28,30,37,38,39,40,65,72,74,75,76,79,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,112,113,121,124,129,131,132,143,144,168,],[57,-83,-65,-66,-67,-68,-69,-70,-71,-73,-74,-75,-76,-77,-83,57,-83,-59,-62,57,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,None,None,57,57,57,57,57,57,57,-72,57,-80,-34,-78,57,57,57,-79,]),'LAND':([6,16,19,23,24,25,26,27,28,30,37,38,39,40,65,72,74,75,76,79,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,112,113,121,124,129,131,132,143,144,168,],[58,-83,-65,-66,-67,-68,-69,-70,-71,-73,-74,-75,-76,-77,-83,58,-83,-59,-62,58,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,None,58,-63,-64,58,58,58,-72,58,-80,-34,-78,58,58,58,-79,]),'LOR':([6,16,19,23,24,25,26,27,28,30,37,38,39,40,65,72,74,75,76,79,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,112,113,121,124,129,131,132,143,144,168,],[59,-83,-65,-66,-67,-68,-69,-70,-71,-73,-74,-75,-76,-77,-83,59,-83,-59,-62,59,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-60,None,-63,-64,59,59,59,-72,59,-80,-34,-78,59,59,59,-79,]),'BAND':([6,16,19,23,24,25,26,27,28,30,37,38,39,40,65,72,74,75,76,79,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,112,113,121,124,129,131,132,143,144,168,],[60,-83,-65,-66,-67,-68,-69,-70,-71,-73,-74,-75,-76,-77,-83,60,-83,-59,-62,60,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,60,60,None,60,60,60,60,-72,60,-80,-34,-78,60,60,60,-79,]),'BOR':([6,16,19,23,24,25,26,27,28,30,37,38,39,40,65,72,74,75,76,79,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,112,113,121,124,129,131,132,143,144,168,],[61,-83,-65,-66,-67,-68,-69,-70,-71,-73,-74,-75,-76,-77,-83,61,-83,-59,-62,61,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,61,61,-63,None,61,61,61,-72,61,-80,-34,-78,61,61,61,-79,]),'LBRACKET':([16,29,41,73,74,158,],[66,77,-82,77,66,164,]),'EQUALS':([16,65,67,78,110,131,],[68,-83,107,115,128,145,]),'DOT':([16,],[69,]),'COLON':([16,],[70,]),'RPAREN':([19,23,24,25,26,27,28,30,37,38,39,40,65,71,72,74,75,76,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,111,112,113,121,124,129,131,133,144,147,148,161,166,168,],[-65,-66,-67,-68,-69,-70,-71,-73,-74,-75,-76,-77,-83,-35,113,-83,-59,-62,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-60,-61,-63,-64,129,-36,-72,138,-80,-34,-78,-30,-37,159,-31,-33,-32,-79,]),'RBRACKET':([19,23,24,25,26,27,28,30,37,38,39,40,65,74,75,76,77,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,113,124,129,131,167,168,],[-65,-66,-67,-68,-69,-70,-71,-73,-74,-75,-76,-77,-83,-83,-59,-62,114,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-60,-61,-63,-64,124,-72,-80,-34,-78,168,-79,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'body_block':([0,35,83,86,140,159,],[2,85,120,123,154,165,]),'stmt_list':([0,4,35,83,86,140,159,],[3,43,3,3,3,3,3,]),'statement':([0,3,4,35,43,83,86,140,159,],[5,42,5,5,42,5,5,5,5,]),'expr':([0,3,4,20,21,22,31,35,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,66,68,71,83,84,86,109,115,125,128,130,140,159,],[6,6,6,72,75,76,79,6,6,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,112,6,121,6,112,132,112,143,144,6,6,]),'var_declaration':([0,3,4,35,43,83,86,140,159,],[7,7,7,7,7,7,7,7,7,]),'return':([0,3,4,35,43,83,86,140,159,],[8,8,8,8,8,8,8,8,8,]),'assign':([0,3,4,35,43,83,86,140,159,],[9,9,9,9,9,9,9,9,9,]),'func_declaration':([0,3,4,35,43,83,86,119,140,151,159,],[10,10,10,10,10,10,10,137,10,137,10,]),'struct_declaration':([0,3,4,35,43,83,86,140,159,],[11,11,11,11,11,11,11,11,11,]),'while':([0,3,4,35,43,83,86,140,159,],[12,12,12,12,12,12,12,12,12,]),'goto_mark':([0,3,4,35,43,83,86,140,159,],[17,17,17,17,17,17,17,17,17,]),'if-else':([0,3,4,35,43,83,86,140,159,],[18,18,18,18,18,18,18,18,18,]),'id':([0,3,4,16,20,21,22,29,31,33,35,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,66,68,71,81,83,84,86,109,114,115,125,128,130,140,159,],[19,19,19,67,19,19,19,78,19,82,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,118,19,19,19,19,131,19,19,19,19,19,19,]),'int':([0,3,4,20,21,22,31,35,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,66,68,71,83,84,86,109,115,125,128,130,140,159,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'double':([0,3,4,20,21,22,31,35,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,66,68,71,83,84,86,109,115,125,128,130,140,159,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'bool':([0,3,4,20,21,22,31,35,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,66,68,71,83,84,86,109,115,125,128,130,140,159,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'str':([0,3,4,20,21,22,31,35,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,66,68,71,83,84,86,109,115,125,128,130,140,159,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'void':([0,3,4,20,21,22,31,35,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,66,68,71,83,84,86,109,115,125,128,130,140,159,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'datatype':([0,3,4,20,21,22,31,32,35,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,66,68,71,83,84,86,109,115,125,128,130,140,145,159,],[29,29,29,73,73,73,73,81,29,29,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,29,73,29,73,73,73,73,73,29,158,29,]),'conditional':([34,36,122,],[83,86,139,]),'args':([71,109,125,],[111,127,141,]),'struct_params':([119,],[134,]),'struct_param':([119,151,],[135,162,]),'params':([133,],[147,]),'param':([133,160,],[148,166,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> <empty>','program',0,'p_program','doh_parser.py',34),
  ('program -> body_block','program',1,'p_program','doh_parser.py',35),
  ('body_block -> stmt_list','body_block',1,'p_body_block','doh_parser.py',44),
  ('body_block -> LBRACE stmt_list RBRACE','body_block',3,'p_body_block','doh_parser.py',45),
  ('func_declaration -> FUNCTION datatype id LPAREN params RPAREN body_block','func_declaration',7,'p_func_declaration','doh_parser.py',54),
  ('stmt_list -> stmt_list statement','stmt_list',2,'p_stmt_list','doh_parser.py',59),
  ('stmt_list -> statement','stmt_list',1,'p_stmt_list','doh_parser.py',60),
  ('statement -> expr SEMI','statement',2,'p_stmt','doh_parser.py',69),
  ('statement -> var_declaration','statement',1,'p_stmt','doh_parser.py',70),
  ('statement -> return','statement',1,'p_stmt','doh_parser.py',71),
  ('statement -> assign','statement',1,'p_stmt','doh_parser.py',72),
  ('statement -> func_declaration','statement',1,'p_stmt','doh_parser.py',73),
  ('statement -> struct_declaration','statement',1,'p_stmt','doh_parser.py',74),
  ('statement -> while','statement',1,'p_stmt','doh_parser.py',75),
  ('statement -> BREAK SEMI','statement',2,'p_stmt','doh_parser.py',76),
  ('statement -> CONTINUE SEMI','statement',2,'p_stmt','doh_parser.py',77),
  ('statement -> GOTO ID SEMI','statement',3,'p_stmt','doh_parser.py',78),
  ('statement -> goto_mark','statement',1,'p_stmt','doh_parser.py',79),
  ('statement -> if-else','statement',1,'p_stmt','doh_parser.py',80),
  ('while -> WHILE conditional body_block','while',3,'p_loops','doh_parser.py',94),
  ('while -> DO body_block WHILE conditional SEMI','while',5,'p_loops','doh_parser.py',95),
  ('if-else -> IF conditional body_block','if-else',3,'p_if_else','doh_parser.py',105),
  ('if-else -> IF conditional body_block ELSE body_block','if-else',5,'p_if_else','doh_parser.py',106),
  ('conditional -> LPAREN expr RPAREN','conditional',3,'p_conditional','doh_parser.py',115),
  ('struct_declaration -> STRUCTURE id LBRACE struct_params RBRACE','struct_declaration',5,'p_struct_declaration','doh_parser.py',130),
  ('struct_params -> struct_param','struct_params',1,'p_struct_params','doh_parser.py',137),
  ('struct_params -> struct_params COMMA struct_param','struct_params',3,'p_struct_params','doh_parser.py',138),
  ('struct_param -> DATATYPE ID','struct_param',2,'p_struct_param','doh_parser.py',148),
  ('struct_param -> func_declaration','struct_param',1,'p_struct_param','doh_parser.py',149),
  ('params -> <empty>','params',0,'p_params','doh_parser.py',158),
  ('params -> param','params',1,'p_params','doh_parser.py',159),
  ('params -> params COMMA param','params',3,'p_params','doh_parser.py',160),
  ('param -> DATATYPE ID','param',2,'p_param_declaration','doh_parser.py',170),
  ('expr -> id LPAREN args RPAREN','expr',4,'p_func_call','doh_parser.py',175),
  ('args -> <empty>','args',0,'p_arguments','doh_parser.py',180),
  ('args -> expr','args',1,'p_arguments','doh_parser.py',181),
  ('args -> args COMMA expr','args',3,'p_arguments','doh_parser.py',182),
  ('var_declaration -> datatype id EQUALS expr SEMI','var_declaration',5,'p_var_declaration','doh_parser.py',194),
  ('var_declaration -> datatype id SEMI','var_declaration',3,'p_var_declaration','doh_parser.py',195),
  ('var_declaration -> ID id EQUALS LBRACE args RBRACE SEMI','var_declaration',7,'p_var_declaration','doh_parser.py',196),
  ('assign -> ID EQUALS expr SEMI','assign',4,'p_assign','doh_parser.py',208),
  ('assign -> ID EQUALS LBRACE args RBRACE SEMI','assign',6,'p_assign','doh_parser.py',209),
  ('assign -> ID DOT ID EQUALS expr SEMI','assign',6,'p_assign','doh_parser.py',210),
  ('return -> RETURN expr SEMI','return',3,'p_return','doh_parser.py',221),
  ('return -> RETURN SEMI','return',2,'p_return','doh_parser.py',222),
  ('expr -> expr PLUS expr','expr',3,'p_math_expressions','doh_parser.py',231),
  ('expr -> expr MINUS expr','expr',3,'p_math_expressions','doh_parser.py',232),
  ('expr -> expr MUL expr','expr',3,'p_math_expressions','doh_parser.py',233),
  ('expr -> expr DIVIDE expr','expr',3,'p_math_expressions','doh_parser.py',234),
  ('expr -> expr INTDIVIDE expr','expr',3,'p_math_expressions','doh_parser.py',235),
  ('expr -> expr MODULO expr','expr',3,'p_math_expressions','doh_parser.py',236),
  ('expr -> expr POW expr','expr',3,'p_math_expressions','doh_parser.py',237),
  ('expr -> expr LE expr','expr',3,'p_conditionals','doh_parser.py',258),
  ('expr -> expr GE expr','expr',3,'p_conditionals','doh_parser.py',259),
  ('expr -> expr LT expr','expr',3,'p_conditionals','doh_parser.py',260),
  ('expr -> expr GT expr','expr',3,'p_conditionals','doh_parser.py',261),
  ('expr -> expr EQ expr','expr',3,'p_conditionals','doh_parser.py',262),
  ('expr -> expr NE expr','expr',3,'p_conditionals','doh_parser.py',263),
  ('expr -> MINUS expr','expr',2,'p_logical_operation','doh_parser.py',279),
  ('expr -> expr LAND expr','expr',3,'p_logical_operation','doh_parser.py',280),
  ('expr -> expr LOR expr','expr',3,'p_logical_operation','doh_parser.py',281),
  ('expr -> LNOT expr','expr',2,'p_logical_operation','doh_parser.py',282),
  ('expr -> expr BAND expr','expr',3,'p_bitwise_operation','doh_parser.py',295),
  ('expr -> expr BOR expr','expr',3,'p_bitwise_operation','doh_parser.py',296),
  ('expr -> id','expr',1,'p_literals','doh_parser.py',305),
  ('expr -> int','expr',1,'p_literals','doh_parser.py',306),
  ('expr -> double','expr',1,'p_literals','doh_parser.py',307),
  ('expr -> bool','expr',1,'p_literals','doh_parser.py',308),
  ('expr -> str','expr',1,'p_literals','doh_parser.py',309),
  ('expr -> void','expr',1,'p_literals','doh_parser.py',310),
  ('expr -> NULL','expr',1,'p_literals','doh_parser.py',311),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_literals','doh_parser.py',312),
  ('int -> INTEGER','int',1,'p_const_int','doh_parser.py',320),
  ('double -> DOUBLE','double',1,'p_const_double','doh_parser.py',325),
  ('bool -> BOOL','bool',1,'p_const_bool','doh_parser.py',330),
  ('str -> STRING','str',1,'p_const_string','doh_parser.py',335),
  ('void -> VOID','void',1,'p_void','doh_parser.py',340),
  ('expr -> datatype LBRACKET RBRACKET id','expr',4,'p_array_init','doh_parser.py',346),
  ('expr -> datatype LBRACKET RBRACKET id EQUALS datatype LBRACKET INTEGER RBRACKET','expr',9,'p_array_init','doh_parser.py',347),
  ('expr -> ID LBRACKET expr RBRACKET','expr',4,'p_index','doh_parser.py',356),
  ('goto_mark -> ID COLON','goto_mark',2,'p_goto_mark','doh_parser.py',361),
  ('datatype -> DATATYPE','datatype',1,'p_datatype','doh_parser.py',366),
  ('id -> ID','id',1,'p_id','doh_parser.py',371),
]
