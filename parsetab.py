
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftCOMMArightEQUALSnonassocLORnonassocLANDnonassocBORnonassocBANDnonassocEQNEnonassocLEGELTGTleftPLUSMINUSleftMULDIVIDEINTDIVIDEMODULOrightPOWrightUMINUSLNOTleftLBRACERBRACELPARENRPARENLBRACKETRBRACKETDOTBAND BOOL BOR BREAK COLON COMMA COMMENT CONTINUE DATATYPE DIVIDE DO DOT DOUBLE ELSE EQ EQUALS ERROR FUNCTION GE GOTO GT ID IF INTDIVIDE INTEGER LAND LBRACE LBRACKET LE LNOT LOR LPAREN LT MINUS MODULO MUL NE NEWLINE NULL PLUS POW RBRACE RBRACKET RETURN RPAREN SEMI STRING STRUCTURE VOID WHILEprogram :\n               | scopebasic_block : LBRACE scope RBRACEfunc_declaration : FUNCTION datatype id LPAREN params RPAREN basic_block\n    scope : scope statement\n          | statement\n    \n    statement : expr SEMI\n              | var_declaration\n              | return\n              | assign\n              | func_declaration\n              | struct_declaration\n              | while\n              | BREAK SEMI\n              | CONTINUE SEMI\n              | GOTO ID SEMI\n              | goto_mark\n              | if-else\n    \n    while : WHILE conditional basic_block\n          | DO basic_block WHILE conditional SEMI\n    \n    if-else : IF conditional basic_block\n            | IF conditional basic_block ELSE basic_block\n    conditional : LPAREN expr RPAREN\n    struct_declaration : STRUCTURE id LBRACE struct_params RBRACE\n    \n    struct_params : struct_param\n                  | struct_params COMMA struct_param\n    struct_param : DATATYPE IDparams :\n              | param\n              | params COMMA paramparam : DATATYPE IDexpr : ID LPAREN args RPARENargs :\n            | expr\n            | args COMMA expr\n    var_declaration : datatype id EQUALS expr SEMI\n                    | datatype id SEMI\n    var_declaration : ID id SEMI\n                       | ID id EQUALS LBRACE args RBRACE SEMI\n                       | ID id EQUALS expr SEMIassign : id EQUALS expr SEMI\n    assign : id EQUALS LBRACE args RBRACE SEMI\n           | id DOT ID EQUALS expr SEMI\n    assign : id LBRACKET expr RBRACKET EQUALS expr SEMI\n    return : RETURN expr SEMI\n           | RETURN SEMI\n    expr : expr PLUS expr\n            | expr MINUS expr\n            | expr MUL expr\n            | expr DIVIDE expr\n            | expr INTDIVIDE expr\n            | expr MODULO expr\n            | expr POW exprexpr : expr LE expr\n            | expr GE expr\n            | expr LT expr\n            | expr GT expr\n            | expr EQ expr\n            | expr NE exprexpr : MINUS expr %prec UMINUS\n            | expr LAND expr\n            | expr LOR expr\n            | LNOT expr\n    expr : expr BAND expr\n         | expr BOR expr\n    expr : id\n            | int\n            | double\n            | bool\n            | str\n            | void\n            | NULL\n            | LPAREN expr RPARENint : INTEGERdouble : DOUBLEbool : BOOLstr : STRINGvoid : VOID\n    expr : datatype id LBRACKET INTEGER RBRACKET\n         | ID id LBRACKET INTEGER RBRACKET\n         | datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE\n         | ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE\n    expr : id LBRACKET expr RBRACKETexpr : id DOT IDgoto_mark : ID COLONdatatype : DATATYPEid : ID'
    
_lr_action_items = {'$end':([0,1,2,3,5,6,7,8,9,10,15,16,40,41,59,60,65,77,102,107,119,120,123,127,137,147,152,158,162,165,166,170,171,178,179,181,],[-1,0,-2,-6,-8,-9,-10,-11,-12,-13,-17,-18,-5,-7,-14,-15,-85,-46,-16,-38,-37,-45,-19,-21,-41,-3,-40,-36,-24,-20,-22,-43,-42,-39,-44,-4,]),'BREAK':([0,2,3,5,6,7,8,9,10,15,16,40,41,59,60,65,77,83,102,107,119,120,123,126,127,137,147,152,158,162,165,166,170,171,178,179,181,],[11,11,-6,-8,-9,-10,-11,-12,-13,-17,-18,-5,-7,-14,-15,-85,-46,11,-16,-38,-37,-45,-19,11,-21,-41,-3,-40,-36,-24,-20,-22,-43,-42,-39,-44,-4,]),'CONTINUE':([0,2,3,5,6,7,8,9,10,15,16,40,41,59,60,65,77,83,102,107,119,120,123,126,127,137,147,152,158,162,165,166,170,171,178,179,181,],[12,12,-6,-8,-9,-10,-11,-12,-13,-17,-18,-5,-7,-14,-15,-85,-46,12,-16,-38,-37,-45,-19,12,-21,-41,-3,-40,-36,-24,-20,-22,-43,-42,-39,-44,-4,]),'GOTO':([0,2,3,5,6,7,8,9,10,15,16,40,41,59,60,65,77,83,102,107,119,120,123,126,127,137,147,152,158,162,165,166,170,171,178,179,181,],[13,13,-6,-8,-9,-10,-11,-12,-13,-17,-18,-5,-7,-14,-15,-85,-46,13,-16,-38,-37,-45,-19,13,-21,-41,-3,-40,-36,-24,-20,-22,-43,-42,-39,-44,-4,]),'ID':([0,2,3,5,6,7,8,9,10,13,14,15,16,17,18,19,27,29,31,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,63,65,67,69,72,73,74,77,78,81,83,102,106,107,110,111,116,118,119,120,123,126,127,129,131,136,137,144,147,152,154,158,161,162,165,166,170,171,177,178,179,180,181,],[14,14,-6,-8,-9,-10,-11,-12,-13,61,62,-17,-18,67,67,67,62,67,62,-86,-5,-7,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-14,-15,67,-85,62,62,67,114,67,-46,62,67,14,-16,67,-38,67,134,67,67,-37,-45,-19,14,-21,67,67,67,-41,164,-3,-40,67,-36,175,-24,-20,-22,-43,-42,67,-39,-44,67,-4,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,63,65,66,67,68,70,71,72,74,76,77,81,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,106,107,108,110,113,114,115,116,118,119,120,123,124,126,127,128,129,131,132,133,134,135,136,137,140,147,149,150,152,153,154,155,157,158,162,165,166,169,170,171,177,178,179,180,181,185,186,],[18,18,-6,43,-8,-9,-10,-11,-12,-13,-87,-17,-18,18,18,18,-66,-67,-68,-69,-70,-71,-72,-74,18,-75,-76,-77,-78,-5,-7,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-14,-15,18,-85,43,-87,-66,-60,-63,18,18,43,-46,18,18,-47,-48,-49,-50,-51,-52,-53,43,43,43,43,43,43,43,43,43,43,-16,43,18,-38,-73,18,43,-84,43,18,18,-37,-45,-19,43,18,-21,-32,18,18,43,43,-84,-83,18,-41,43,-3,43,-80,-40,-83,18,43,-79,-36,-24,-20,-22,43,-43,-42,18,-39,-44,18,-4,-82,-81,]),'LNOT':([0,2,3,5,6,7,8,9,10,15,16,17,18,19,29,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,63,65,72,74,77,81,83,102,106,107,110,116,118,119,120,123,126,127,129,131,136,137,147,152,154,158,162,165,166,170,171,177,178,179,180,181,],[19,19,-6,-8,-9,-10,-11,-12,-13,-17,-18,19,19,19,19,-5,-7,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-14,-15,19,-85,19,19,-46,19,19,-16,19,-38,19,19,19,-37,-45,-19,19,-21,19,19,19,-41,-3,-40,19,-36,-24,-20,-22,-43,-42,19,-39,-44,19,-4,]),'NULL':([0,2,3,5,6,7,8,9,10,15,16,17,18,19,29,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,63,65,72,74,77,81,83,102,106,107,110,116,118,119,120,123,126,127,129,131,136,137,147,152,154,158,162,165,166,170,171,177,178,179,180,181,],[26,26,-6,-8,-9,-10,-11,-12,-13,-17,-18,26,26,26,26,-5,-7,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-14,-15,26,-85,26,26,-46,26,26,-16,26,-38,26,26,26,-37,-45,-19,26,-21,26,26,26,-41,-3,-40,26,-36,-24,-20,-22,-43,-42,26,-39,-44,26,-4,]),'LPAREN':([0,2,3,5,6,7,8,9,10,14,15,16,17,18,19,29,32,34,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,65,67,72,74,77,81,83,102,106,107,110,116,118,119,120,121,123,125,126,127,129,131,136,137,147,152,154,158,162,165,166,170,171,177,178,179,180,181,],[17,17,-6,-8,-9,-10,-11,-12,-13,63,-17,-18,17,17,17,17,81,81,-5,-7,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-14,-15,-87,17,-85,63,17,17,-46,17,17,-16,17,-38,17,17,17,-37,-45,141,-19,81,17,-21,17,17,17,-41,-3,-40,17,-36,-24,-20,-22,-43,-42,17,-39,-44,17,-4,]),'RETURN':([0,2,3,5,6,7,8,9,10,15,16,40,41,59,60,65,77,83,102,107,119,120,123,126,127,137,147,152,158,162,165,166,170,171,178,179,181,],[29,29,-6,-8,-9,-10,-11,-12,-13,-17,-18,-5,-7,-14,-15,-85,-46,29,-16,-38,-37,-45,-19,29,-21,-41,-3,-40,-36,-24,-20,-22,-43,-42,-39,-44,-4,]),'FUNCTION':([0,2,3,5,6,7,8,9,10,15,16,40,41,59,60,65,77,83,102,107,119,120,123,126,127,137,147,152,158,162,165,166,170,171,178,179,181,],[30,30,-6,-8,-9,-10,-11,-12,-13,-17,-18,-5,-7,-14,-15,-85,-46,30,-16,-38,-37,-45,-19,30,-21,-41,-3,-40,-36,-24,-20,-22,-43,-42,-39,-44,-4,]),'STRUCTURE':([0,2,3,5,6,7,8,9,10,15,16,40,41,59,60,65,77,83,102,107,119,120,123,126,127,137,147,152,158,162,165,166,170,171,178,179,181,],[31,31,-6,-8,-9,-10,-11,-12,-13,-17,-18,-5,-7,-14,-15,-85,-46,31,-16,-38,-37,-45,-19,31,-21,-41,-3,-40,-36,-24,-20,-22,-43,-42,-39,-44,-4,]),'WHILE':([0,2,3,5,6,7,8,9,10,15,16,40,41,59,60,65,77,82,83,102,107,119,120,123,126,127,137,147,152,158,162,165,166,170,171,178,179,181,],[32,32,-6,-8,-9,-10,-11,-12,-13,-17,-18,-5,-7,-14,-15,-85,-46,125,32,-16,-38,-37,-45,-19,32,-21,-41,-3,-40,-36,-24,-20,-22,-43,-42,-39,-44,-4,]),'DO':([0,2,3,5,6,7,8,9,10,15,16,40,41,59,60,65,77,83,102,107,119,120,123,126,127,137,147,152,158,162,165,166,170,171,178,179,181,],[33,33,-6,-8,-9,-10,-11,-12,-13,-17,-18,-5,-7,-14,-15,-85,-46,33,-16,-38,-37,-45,-19,33,-21,-41,-3,-40,-36,-24,-20,-22,-43,-42,-39,-44,-4,]),'IF':([0,2,3,5,6,7,8,9,10,15,16,40,41,59,60,65,77,83,102,107,119,120,123,126,127,137,147,152,158,162,165,166,170,171,178,179,181,],[34,34,-6,-8,-9,-10,-11,-12,-13,-17,-18,-5,-7,-14,-15,-85,-46,34,-16,-38,-37,-45,-19,34,-21,-41,-3,-40,-36,-24,-20,-22,-43,-42,-39,-44,-4,]),'INTEGER':([0,2,3,5,6,7,8,9,10,15,16,17,18,19,29,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,63,65,72,74,77,81,83,102,105,106,107,110,116,117,118,119,120,123,126,127,129,131,136,137,147,152,154,158,162,165,166,170,171,177,178,179,180,181,],[28,28,-6,-8,-9,-10,-11,-12,-13,-17,-18,28,28,28,28,-5,-7,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-14,-15,28,-85,28,28,-46,28,28,-16,130,28,-38,28,28,139,28,-37,-45,-19,28,-21,28,28,28,-41,-3,-40,28,-36,-24,-20,-22,-43,-42,28,-39,-44,28,-4,]),'DOUBLE':([0,2,3,5,6,7,8,9,10,15,16,17,18,19,29,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,63,65,72,74,77,81,83,102,106,107,110,116,118,119,120,123,126,127,129,131,136,137,147,152,154,158,162,165,166,170,171,177,178,179,180,181,],[35,35,-6,-8,-9,-10,-11,-12,-13,-17,-18,35,35,35,35,-5,-7,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-14,-15,35,-85,35,35,-46,35,35,-16,35,-38,35,35,35,-37,-45,-19,35,-21,35,35,35,-41,-3,-40,35,-36,-24,-20,-22,-43,-42,35,-39,-44,35,-4,]),'BOOL':([0,2,3,5,6,7,8,9,10,15,16,17,18,19,29,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,63,65,72,74,77,81,83,102,106,107,110,116,118,119,120,123,126,127,129,131,136,137,147,152,154,158,162,165,166,170,171,177,178,179,180,181,],[36,36,-6,-8,-9,-10,-11,-12,-13,-17,-18,36,36,36,36,-5,-7,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-14,-15,36,-85,36,36,-46,36,36,-16,36,-38,36,36,36,-37,-45,-19,36,-21,36,36,36,-41,-3,-40,36,-36,-24,-20,-22,-43,-42,36,-39,-44,36,-4,]),'STRING':([0,2,3,5,6,7,8,9,10,15,16,17,18,19,29,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,63,65,72,74,77,81,83,102,106,107,110,116,118,119,120,123,126,127,129,131,136,137,147,152,154,158,162,165,166,170,171,177,178,179,180,181,],[37,37,-6,-8,-9,-10,-11,-12,-13,-17,-18,37,37,37,37,-5,-7,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-14,-15,37,-85,37,37,-46,37,37,-16,37,-38,37,37,37,-37,-45,-19,37,-21,37,37,37,-41,-3,-40,37,-36,-24,-20,-22,-43,-42,37,-39,-44,37,-4,]),'VOID':([0,2,3,5,6,7,8,9,10,15,16,17,18,19,29,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,63,65,72,74,77,81,83,102,106,107,110,116,118,119,120,123,126,127,129,131,136,137,147,152,154,158,162,165,166,170,171,177,178,179,180,181,],[38,38,-6,-8,-9,-10,-11,-12,-13,-17,-18,38,38,38,38,-5,-7,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-14,-15,38,-85,38,38,-46,38,38,-16,38,-38,38,38,38,-37,-45,-19,38,-21,38,38,38,-41,-3,-40,38,-36,-24,-20,-22,-43,-42,38,-39,-44,38,-4,]),'DATATYPE':([0,2,3,5,6,7,8,9,10,15,16,17,18,19,29,30,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,63,65,72,74,77,81,83,102,106,107,110,116,118,119,120,122,123,126,127,129,131,136,137,141,147,152,154,158,162,163,165,166,170,171,174,177,178,179,180,181,],[39,39,-6,-8,-9,-10,-11,-12,-13,-17,-18,39,39,39,39,39,-5,-7,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-14,-15,39,-85,39,39,-46,39,39,-16,39,-38,39,39,39,-37,-45,144,-19,39,-21,39,39,39,-41,161,-3,-40,39,-36,-24,144,-20,-22,-43,-42,161,39,-39,-44,39,-4,]),'RBRACE':([3,5,6,7,8,9,10,15,16,21,22,23,24,25,26,28,35,36,37,38,40,41,59,60,65,67,68,70,71,77,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,107,108,116,119,120,123,126,127,128,131,134,137,138,142,143,147,149,150,151,152,153,157,158,162,164,165,166,170,171,176,177,178,179,180,181,183,184,185,186,],[-6,-8,-9,-10,-11,-12,-13,-17,-18,-67,-68,-69,-70,-71,-72,-74,-75,-76,-77,-78,-5,-7,-14,-15,-85,-87,-66,-60,-63,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-61,-62,-64,-65,-16,-34,-38,-73,-33,-37,-45,-19,147,-21,-32,-33,-84,-41,156,162,-25,-3,-35,-80,168,-40,-83,-79,-36,-24,-27,-20,-22,-43,-42,-26,-33,-39,-44,-33,-4,185,186,-82,-81,]),'SEMI':([4,11,12,14,20,21,22,23,24,25,26,28,29,35,36,37,38,61,62,64,67,68,70,71,75,76,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,108,114,115,128,132,134,135,140,145,146,150,153,155,156,157,168,169,185,186,],[41,59,60,-87,-66,-67,-68,-69,-70,-71,-72,-74,77,-75,-76,-77,-78,102,-87,107,-87,-66,-60,-63,119,120,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-61,-62,-64,-65,-73,-84,137,-32,152,-84,-83,158,-23,165,-80,-83,170,171,-79,178,179,-82,-81,]),'PLUS':([4,14,20,21,22,23,24,25,26,28,35,36,37,38,66,67,68,70,71,76,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,108,113,114,115,124,128,132,133,134,135,140,149,150,153,155,157,169,185,186,],[42,-87,-66,-67,-68,-69,-70,-71,-72,-74,-75,-76,-77,-78,42,-87,-66,-60,-63,42,-47,-48,-49,-50,-51,-52,-53,42,42,42,42,42,42,42,42,42,42,42,-73,42,-84,42,42,-32,42,42,-84,-83,42,42,-80,-83,42,-79,42,-82,-81,]),'MUL':([4,14,20,21,22,23,24,25,26,28,35,36,37,38,66,67,68,70,71,76,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,108,113,114,115,124,128,132,133,134,135,140,149,150,153,155,157,169,185,186,],[44,-87,-66,-67,-68,-69,-70,-71,-72,-74,-75,-76,-77,-78,44,-87,-66,-60,-63,44,44,44,-49,-50,-51,-52,-53,44,44,44,44,44,44,44,44,44,44,44,-73,44,-84,44,44,-32,44,44,-84,-83,44,44,-80,-83,44,-79,44,-82,-81,]),'DIVIDE':([4,14,20,21,22,23,24,25,26,28,35,36,37,38,66,67,68,70,71,76,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,108,113,114,115,124,128,132,133,134,135,140,149,150,153,155,157,169,185,186,],[45,-87,-66,-67,-68,-69,-70,-71,-72,-74,-75,-76,-77,-78,45,-87,-66,-60,-63,45,45,45,-49,-50,-51,-52,-53,45,45,45,45,45,45,45,45,45,45,45,-73,45,-84,45,45,-32,45,45,-84,-83,45,45,-80,-83,45,-79,45,-82,-81,]),'INTDIVIDE':([4,14,20,21,22,23,24,25,26,28,35,36,37,38,66,67,68,70,71,76,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,108,113,114,115,124,128,132,133,134,135,140,149,150,153,155,157,169,185,186,],[46,-87,-66,-67,-68,-69,-70,-71,-72,-74,-75,-76,-77,-78,46,-87,-66,-60,-63,46,46,46,-49,-50,-51,-52,-53,46,46,46,46,46,46,46,46,46,46,46,-73,46,-84,46,46,-32,46,46,-84,-83,46,46,-80,-83,46,-79,46,-82,-81,]),'MODULO':([4,14,20,21,22,23,24,25,26,28,35,36,37,38,66,67,68,70,71,76,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,108,113,114,115,124,128,132,133,134,135,140,149,150,153,155,157,169,185,186,],[47,-87,-66,-67,-68,-69,-70,-71,-72,-74,-75,-76,-77,-78,47,-87,-66,-60,-63,47,47,47,-49,-50,-51,-52,-53,47,47,47,47,47,47,47,47,47,47,47,-73,47,-84,47,47,-32,47,47,-84,-83,47,47,-80,-83,47,-79,47,-82,-81,]),'POW':([4,14,20,21,22,23,24,25,26,28,35,36,37,38,66,67,68,70,71,76,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,108,113,114,115,124,128,132,133,134,135,140,149,150,153,155,157,169,185,186,],[48,-87,-66,-67,-68,-69,-70,-71,-72,-74,-75,-76,-77,-78,48,-87,-66,-60,-63,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-73,48,-84,48,48,-32,48,48,-84,-83,48,48,-80,-83,48,-79,48,-82,-81,]),'LE':([4,14,20,21,22,23,24,25,26,28,35,36,37,38,66,67,68,70,71,76,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,108,113,114,115,124,128,132,133,134,135,140,149,150,153,155,157,169,185,186,],[49,-87,-66,-67,-68,-69,-70,-71,-72,-74,-75,-76,-77,-78,49,-87,-66,-60,-63,49,-47,-48,-49,-50,-51,-52,-53,None,None,None,None,49,49,49,49,49,49,49,-73,49,-84,49,49,-32,49,49,-84,-83,49,49,-80,-83,49,-79,49,-82,-81,]),'GE':([4,14,20,21,22,23,24,25,26,28,35,36,37,38,66,67,68,70,71,76,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,108,113,114,115,124,128,132,133,134,135,140,149,150,153,155,157,169,185,186,],[50,-87,-66,-67,-68,-69,-70,-71,-72,-74,-75,-76,-77,-78,50,-87,-66,-60,-63,50,-47,-48,-49,-50,-51,-52,-53,None,None,None,None,50,50,50,50,50,50,50,-73,50,-84,50,50,-32,50,50,-84,-83,50,50,-80,-83,50,-79,50,-82,-81,]),'LT':([4,14,20,21,22,23,24,25,26,28,35,36,37,38,66,67,68,70,71,76,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,108,113,114,115,124,128,132,133,134,135,140,149,150,153,155,157,169,185,186,],[51,-87,-66,-67,-68,-69,-70,-71,-72,-74,-75,-76,-77,-78,51,-87,-66,-60,-63,51,-47,-48,-49,-50,-51,-52,-53,None,None,None,None,51,51,51,51,51,51,51,-73,51,-84,51,51,-32,51,51,-84,-83,51,51,-80,-83,51,-79,51,-82,-81,]),'GT':([4,14,20,21,22,23,24,25,26,28,35,36,37,38,66,67,68,70,71,76,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,108,113,114,115,124,128,132,133,134,135,140,149,150,153,155,157,169,185,186,],[52,-87,-66,-67,-68,-69,-70,-71,-72,-74,-75,-76,-77,-78,52,-87,-66,-60,-63,52,-47,-48,-49,-50,-51,-52,-53,None,None,None,None,52,52,52,52,52,52,52,-73,52,-84,52,52,-32,52,52,-84,-83,52,52,-80,-83,52,-79,52,-82,-81,]),'EQ':([4,14,20,21,22,23,24,25,26,28,35,36,37,38,66,67,68,70,71,76,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,108,113,114,115,124,128,132,133,134,135,140,149,150,153,155,157,169,185,186,],[53,-87,-66,-67,-68,-69,-70,-71,-72,-74,-75,-76,-77,-78,53,-87,-66,-60,-63,53,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,None,None,53,53,53,53,53,-73,53,-84,53,53,-32,53,53,-84,-83,53,53,-80,-83,53,-79,53,-82,-81,]),'NE':([4,14,20,21,22,23,24,25,26,28,35,36,37,38,66,67,68,70,71,76,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,108,113,114,115,124,128,132,133,134,135,140,149,150,153,155,157,169,185,186,],[54,-87,-66,-67,-68,-69,-70,-71,-72,-74,-75,-76,-77,-78,54,-87,-66,-60,-63,54,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,None,None,54,54,54,54,54,-73,54,-84,54,54,-32,54,54,-84,-83,54,54,-80,-83,54,-79,54,-82,-81,]),'LAND':([4,14,20,21,22,23,24,25,26,28,35,36,37,38,66,67,68,70,71,76,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,108,113,114,115,124,128,132,133,134,135,140,149,150,153,155,157,169,185,186,],[55,-87,-66,-67,-68,-69,-70,-71,-72,-74,-75,-76,-77,-78,55,-87,-66,-60,-63,55,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,None,55,-64,-65,55,-73,55,-84,55,55,-32,55,55,-84,-83,55,55,-80,-83,55,-79,55,-82,-81,]),'LOR':([4,14,20,21,22,23,24,25,26,28,35,36,37,38,66,67,68,70,71,76,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,108,113,114,115,124,128,132,133,134,135,140,149,150,153,155,157,169,185,186,],[56,-87,-66,-67,-68,-69,-70,-71,-72,-74,-75,-76,-77,-78,56,-87,-66,-60,-63,56,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-61,None,-64,-65,56,-73,56,-84,56,56,-32,56,56,-84,-83,56,56,-80,-83,56,-79,56,-82,-81,]),'BAND':([4,14,20,21,22,23,24,25,26,28,35,36,37,38,66,67,68,70,71,76,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,108,113,114,115,124,128,132,133,134,135,140,149,150,153,155,157,169,185,186,],[57,-87,-66,-67,-68,-69,-70,-71,-72,-74,-75,-76,-77,-78,57,-87,-66,-60,-63,57,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,57,57,None,57,57,-73,57,-84,57,57,-32,57,57,-84,-83,57,57,-80,-83,57,-79,57,-82,-81,]),'BOR':([4,14,20,21,22,23,24,25,26,28,35,36,37,38,66,67,68,70,71,76,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,108,113,114,115,124,128,132,133,134,135,140,149,150,153,155,157,169,185,186,],[58,-87,-66,-67,-68,-69,-70,-71,-72,-74,-75,-76,-77,-78,58,-87,-66,-60,-63,58,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,58,58,-64,None,58,-73,58,-84,58,58,-32,58,58,-84,-83,58,58,-80,-83,58,-79,58,-82,-81,]),'COLON':([14,],[65,]),'LBRACKET':([14,20,62,64,67,68,75,109,112,],[-87,72,-87,105,-87,110,117,105,117,]),'DOT':([14,20,67,68,],[-87,73,-87,111,]),'EQUALS':([14,20,62,64,75,114,135,150,157,],[-87,74,-87,106,118,136,154,167,172,]),'RPAREN':([21,22,23,24,25,26,28,35,36,37,38,63,66,67,68,70,71,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,108,124,128,134,141,149,150,153,157,159,160,175,182,185,186,],[-67,-68,-69,-70,-71,-72,-74,-75,-76,-77,-78,-33,108,-87,-66,-60,-63,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-61,-62,-64,-65,128,-34,-73,145,-32,-84,-28,-35,-80,-83,-79,173,-29,-31,-30,-82,-81,]),'COMMA':([21,22,23,24,25,26,28,35,36,37,38,63,67,68,70,71,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,108,116,128,131,134,138,141,142,143,149,150,151,153,157,159,160,164,175,176,177,180,182,183,184,185,186,],[-67,-68,-69,-70,-71,-72,-74,-75,-76,-77,-78,-33,-87,-66,-60,-63,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-61,-62,-64,-65,129,-34,-73,-33,-32,-33,-84,129,-28,163,-25,-35,-80,129,-83,-79,174,-29,-27,-31,-26,-33,-33,-30,129,129,-82,-81,]),'RBRACKET':([21,22,23,24,25,26,28,35,36,37,38,67,68,70,71,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,108,113,128,130,133,134,139,150,153,157,185,186,],[-67,-68,-69,-70,-71,-72,-74,-75,-76,-77,-78,-87,-66,-60,-63,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-61,-62,-64,-65,-73,135,-32,150,153,-84,157,-80,-83,-79,-82,-81,]),'LBRACE':([33,62,74,79,80,84,106,145,148,167,172,173,],[83,-87,116,122,83,83,131,-23,83,177,180,83,]),'ELSE':([127,147,],[148,-3,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'scope':([0,83,],[2,126,]),'statement':([0,2,83,126,],[3,40,3,40,]),'expr':([0,2,17,18,19,29,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,63,72,74,81,83,106,110,116,118,126,129,131,136,154,177,180,],[4,4,66,70,71,76,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,113,115,124,4,132,133,104,140,4,149,104,155,169,104,104,]),'var_declaration':([0,2,83,126,],[5,5,5,5,]),'return':([0,2,83,126,],[6,6,6,6,]),'assign':([0,2,83,126,],[7,7,7,7,]),'func_declaration':([0,2,83,126,],[8,8,8,8,]),'struct_declaration':([0,2,83,126,],[9,9,9,9,]),'while':([0,2,83,126,],[10,10,10,10,]),'goto_mark':([0,2,83,126,],[15,15,15,15,]),'if-else':([0,2,83,126,],[16,16,16,16,]),'id':([0,2,14,17,18,19,27,29,31,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,63,67,69,72,74,78,81,83,106,110,116,118,126,129,131,136,154,177,180,],[20,20,64,68,68,68,75,68,79,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,109,112,68,68,121,68,20,68,68,68,68,20,68,68,68,68,68,68,]),'int':([0,2,17,18,19,29,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,63,72,74,81,83,106,110,116,118,126,129,131,136,154,177,180,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'double':([0,2,17,18,19,29,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,63,72,74,81,83,106,110,116,118,126,129,131,136,154,177,180,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'bool':([0,2,17,18,19,29,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,63,72,74,81,83,106,110,116,118,126,129,131,136,154,177,180,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'str':([0,2,17,18,19,29,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,63,72,74,81,83,106,110,116,118,126,129,131,136,154,177,180,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'void':([0,2,17,18,19,29,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,63,72,74,81,83,106,110,116,118,126,129,131,136,154,177,180,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'datatype':([0,2,17,18,19,29,30,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,63,72,74,81,83,106,110,116,118,126,129,131,136,154,177,180,],[27,27,69,69,69,69,78,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,27,69,69,69,69,27,69,69,69,69,69,69,]),'conditional':([32,34,125,],[80,84,146,]),'basic_block':([33,80,84,148,173,],[82,123,127,166,181,]),'args':([63,116,131,177,180,],[103,138,151,183,184,]),'struct_params':([122,],[142,]),'struct_param':([122,163,],[143,176,]),'params':([141,],[159,]),'param':([141,174,],[160,182,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> <empty>','program',0,'p_program','doh_parser.py',34),
  ('program -> scope','program',1,'p_program','doh_parser.py',35),
  ('basic_block -> LBRACE scope RBRACE','basic_block',3,'p_body_block','doh_parser.py',43),
  ('func_declaration -> FUNCTION datatype id LPAREN params RPAREN basic_block','func_declaration',7,'p_func_declaration','doh_parser.py',48),
  ('scope -> scope statement','scope',2,'p_scope','doh_parser.py',54),
  ('scope -> statement','scope',1,'p_scope','doh_parser.py',55),
  ('statement -> expr SEMI','statement',2,'p_stmt','doh_parser.py',66),
  ('statement -> var_declaration','statement',1,'p_stmt','doh_parser.py',67),
  ('statement -> return','statement',1,'p_stmt','doh_parser.py',68),
  ('statement -> assign','statement',1,'p_stmt','doh_parser.py',69),
  ('statement -> func_declaration','statement',1,'p_stmt','doh_parser.py',70),
  ('statement -> struct_declaration','statement',1,'p_stmt','doh_parser.py',71),
  ('statement -> while','statement',1,'p_stmt','doh_parser.py',72),
  ('statement -> BREAK SEMI','statement',2,'p_stmt','doh_parser.py',73),
  ('statement -> CONTINUE SEMI','statement',2,'p_stmt','doh_parser.py',74),
  ('statement -> GOTO ID SEMI','statement',3,'p_stmt','doh_parser.py',75),
  ('statement -> goto_mark','statement',1,'p_stmt','doh_parser.py',76),
  ('statement -> if-else','statement',1,'p_stmt','doh_parser.py',77),
  ('while -> WHILE conditional basic_block','while',3,'p_loops','doh_parser.py',91),
  ('while -> DO basic_block WHILE conditional SEMI','while',5,'p_loops','doh_parser.py',92),
  ('if-else -> IF conditional basic_block','if-else',3,'p_if_else','doh_parser.py',102),
  ('if-else -> IF conditional basic_block ELSE basic_block','if-else',5,'p_if_else','doh_parser.py',103),
  ('conditional -> LPAREN expr RPAREN','conditional',3,'p_conditional','doh_parser.py',112),
  ('struct_declaration -> STRUCTURE id LBRACE struct_params RBRACE','struct_declaration',5,'p_struct_declaration','doh_parser.py',118),
  ('struct_params -> struct_param','struct_params',1,'p_struct_params','doh_parser.py',125),
  ('struct_params -> struct_params COMMA struct_param','struct_params',3,'p_struct_params','doh_parser.py',126),
  ('struct_param -> DATATYPE ID','struct_param',2,'p_struct_param','doh_parser.py',135),
  ('params -> <empty>','params',0,'p_params','doh_parser.py',140),
  ('params -> param','params',1,'p_params','doh_parser.py',141),
  ('params -> params COMMA param','params',3,'p_params','doh_parser.py',142),
  ('param -> DATATYPE ID','param',2,'p_param_declaration','doh_parser.py',152),
  ('expr -> ID LPAREN args RPAREN','expr',4,'p_func_call','doh_parser.py',157),
  ('args -> <empty>','args',0,'p_arguments','doh_parser.py',162),
  ('args -> expr','args',1,'p_arguments','doh_parser.py',163),
  ('args -> args COMMA expr','args',3,'p_arguments','doh_parser.py',164),
  ('var_declaration -> datatype id EQUALS expr SEMI','var_declaration',5,'p_var_declaration','doh_parser.py',175),
  ('var_declaration -> datatype id SEMI','var_declaration',3,'p_var_declaration','doh_parser.py',176),
  ('var_declaration -> ID id SEMI','var_declaration',3,'p_struct_var_declaration','doh_parser.py',185),
  ('var_declaration -> ID id EQUALS LBRACE args RBRACE SEMI','var_declaration',7,'p_struct_var_declaration','doh_parser.py',186),
  ('var_declaration -> ID id EQUALS expr SEMI','var_declaration',5,'p_struct_var_declaration','doh_parser.py',187),
  ('assign -> id EQUALS expr SEMI','assign',4,'p_var_assign','doh_parser.py',197),
  ('assign -> id EQUALS LBRACE args RBRACE SEMI','assign',6,'p_struct_assign','doh_parser.py',204),
  ('assign -> id DOT ID EQUALS expr SEMI','assign',6,'p_struct_assign','doh_parser.py',205),
  ('assign -> id LBRACKET expr RBRACKET EQUALS expr SEMI','assign',7,'p_array_assign','doh_parser.py',214),
  ('return -> RETURN expr SEMI','return',3,'p_return','doh_parser.py',220),
  ('return -> RETURN SEMI','return',2,'p_return','doh_parser.py',221),
  ('expr -> expr PLUS expr','expr',3,'p_math_expressions','doh_parser.py',230),
  ('expr -> expr MINUS expr','expr',3,'p_math_expressions','doh_parser.py',231),
  ('expr -> expr MUL expr','expr',3,'p_math_expressions','doh_parser.py',232),
  ('expr -> expr DIVIDE expr','expr',3,'p_math_expressions','doh_parser.py',233),
  ('expr -> expr INTDIVIDE expr','expr',3,'p_math_expressions','doh_parser.py',234),
  ('expr -> expr MODULO expr','expr',3,'p_math_expressions','doh_parser.py',235),
  ('expr -> expr POW expr','expr',3,'p_math_expressions','doh_parser.py',236),
  ('expr -> expr LE expr','expr',3,'p_conditionals','doh_parser.py',257),
  ('expr -> expr GE expr','expr',3,'p_conditionals','doh_parser.py',258),
  ('expr -> expr LT expr','expr',3,'p_conditionals','doh_parser.py',259),
  ('expr -> expr GT expr','expr',3,'p_conditionals','doh_parser.py',260),
  ('expr -> expr EQ expr','expr',3,'p_conditionals','doh_parser.py',261),
  ('expr -> expr NE expr','expr',3,'p_conditionals','doh_parser.py',262),
  ('expr -> MINUS expr','expr',2,'p_logical_operation','doh_parser.py',278),
  ('expr -> expr LAND expr','expr',3,'p_logical_operation','doh_parser.py',279),
  ('expr -> expr LOR expr','expr',3,'p_logical_operation','doh_parser.py',280),
  ('expr -> LNOT expr','expr',2,'p_logical_operation','doh_parser.py',281),
  ('expr -> expr BAND expr','expr',3,'p_bitwise_operation','doh_parser.py',294),
  ('expr -> expr BOR expr','expr',3,'p_bitwise_operation','doh_parser.py',295),
  ('expr -> id','expr',1,'p_literals','doh_parser.py',304),
  ('expr -> int','expr',1,'p_literals','doh_parser.py',305),
  ('expr -> double','expr',1,'p_literals','doh_parser.py',306),
  ('expr -> bool','expr',1,'p_literals','doh_parser.py',307),
  ('expr -> str','expr',1,'p_literals','doh_parser.py',308),
  ('expr -> void','expr',1,'p_literals','doh_parser.py',309),
  ('expr -> NULL','expr',1,'p_literals','doh_parser.py',310),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_literals','doh_parser.py',311),
  ('int -> INTEGER','int',1,'p_const_int','doh_parser.py',319),
  ('double -> DOUBLE','double',1,'p_const_double','doh_parser.py',324),
  ('bool -> BOOL','bool',1,'p_const_bool','doh_parser.py',329),
  ('str -> STRING','str',1,'p_const_string','doh_parser.py',334),
  ('void -> VOID','void',1,'p_void','doh_parser.py',339),
  ('expr -> datatype id LBRACKET INTEGER RBRACKET','expr',5,'p_array_init','doh_parser.py',345),
  ('expr -> ID id LBRACKET INTEGER RBRACKET','expr',5,'p_array_init','doh_parser.py',346),
  ('expr -> datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE','expr',9,'p_array_init','doh_parser.py',347),
  ('expr -> ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE','expr',9,'p_array_init','doh_parser.py',348),
  ('expr -> id LBRACKET expr RBRACKET','expr',4,'p_index','doh_parser.py',363),
  ('expr -> id DOT ID','expr',3,'p_struct_field','doh_parser.py',368),
  ('goto_mark -> ID COLON','goto_mark',2,'p_goto_mark','doh_parser.py',373),
  ('datatype -> DATATYPE','datatype',1,'p_datatype','doh_parser.py',378),
  ('id -> ID','id',1,'p_id','doh_parser.py',383),
]
