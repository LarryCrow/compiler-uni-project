
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftCOMMArightEQUALSnonassocLORnonassocLANDnonassocEQNEnonassocLEGELTGTleftPLUSMINUSleftMULDIVIDEINTDIVIDEMODULOrightPOWrightUMINUSLNOTleftLBRACERBRACELPARENRPARENLBRACKETRBRACKETBOOLEAN BREAK COLON COMMA COMMENT CONTINUE DATATYPE DIVIDE DO DOT DOUBLE ELSE EQ EQUALS ERROR FUNCTION GE GOTO GT ID IF INTDIVIDE INTEGER LAND LBRACE LBRACKET LE LNOT LOR LPAREN LT MINUS MODULO MUL NE NEWLINE NULL PLUS POW RBRACE RBRACKET RETURN RPAREN SEMI STRING STRUCTURE WHILEprogram :\n               | basic_blockbasic_block : stmt_listfunc_declaration : FUNCTION datatype id LPAREN params RPAREN LBRACE basic_block RBRACEstmt_list : stmt_list statement\n                 | statement\n    statement : expr SEMI\n              | var_declaration\n              | return\n              | assign\n              | func_declaration\n              | struct_declaration\n              | while\n              | BREAK SEMI\n              | CONTINUE SEMI\n              | GOTO ID SEMI\n              | goto_mark\n              | if-else\n    \n    while : WHILE LPAREN expr RPAREN LBRACE stmt_list RBRACE\n          | DO LBRACE stmt_list RBRACE WHILE LPAREN expr RPAREN SEMI\n    \n    if-else : IF LPAREN expr RPAREN LBRACE stmt_list RBRACE\n            | IF LPAREN expr RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE\n    \n    struct_declaration : STRUCTURE id LBRACE params RBRACE\n    \n    expr : ID DOT ID\n    params :\n              | param\n              | params COMMA paramparam : DATATYPE IDexpr : ID LPAREN args RPARENargs :\n            | expr\n            | args COMMA expr\n    var_declaration : datatype id EQUALS expr SEMI\n                    | datatype id SEMI\n    assign : ID EQUALS expr SEMI\n    return : RETURN expr SEMI\n           | RETURN SEMI\n    expr : expr PLUS expr\n            | expr MINUS expr\n            | expr MUL expr\n            | expr DIVIDE expr\n            | expr INTDIVIDE expr\n            | expr MODULO expr\n            | expr POW exprexpr : expr LE expr\n            | expr GE expr\n            | expr LT expr\n            | expr GT expr\n            | expr EQ expr\n            | expr NE exprexpr : MINUS expr %prec UMINUS\n            | expr LAND expr\n            | expr LOR expr\n            | LNOT exprexpr : id\n            | int\n            | double\n            | bool\n            | str\n            | NULL\n            | LPAREN expr RPARENint : INTEGERdouble : DOUBLEbool : BOOLEANstr : STRING\n    expr : datatype LBRACKET expr RBRACKET\n    \n    expr : ID LBRACKET expr RBRACKET\n    goto_mark : ID COLONdatatype : DATATYPEid : ID'
    
_lr_action_items = {'$end':([0,1,2,3,4,6,7,8,9,10,11,16,17,39,40,56,57,63,73,94,103,104,113,124,126,138,140,144,145,148,],[-1,0,-2,-3,-6,-8,-9,-10,-11,-12,-13,-17,-18,-5,-7,-14,-15,-68,-37,-16,-34,-36,-35,-33,-23,-19,-21,-4,-20,-22,]),'BREAK':([0,3,4,6,7,8,9,10,11,16,17,39,40,56,57,63,73,77,94,103,104,108,113,124,126,129,131,134,136,137,138,140,144,145,146,147,148,],[12,12,-6,-8,-9,-10,-11,-12,-13,-17,-18,-5,-7,-14,-15,-68,-37,12,-16,-34,-36,12,-35,-33,-23,12,12,12,12,12,-19,-21,-4,-20,12,12,-22,]),'CONTINUE':([0,3,4,6,7,8,9,10,11,16,17,39,40,56,57,63,73,77,94,103,104,108,113,124,126,129,131,134,136,137,138,140,144,145,146,147,148,],[13,13,-6,-8,-9,-10,-11,-12,-13,-17,-18,-5,-7,-14,-15,-68,-37,13,-16,-34,-36,13,-35,-33,-23,13,13,13,13,13,-19,-21,-4,-20,13,13,-22,]),'GOTO':([0,3,4,6,7,8,9,10,11,16,17,39,40,56,57,63,73,77,94,103,104,108,113,124,126,129,131,134,136,137,138,140,144,145,146,147,148,],[14,14,-6,-8,-9,-10,-11,-12,-13,-17,-18,-5,-7,-14,-15,-68,-37,14,-16,-34,-36,14,-35,-33,-23,14,14,14,14,14,-19,-21,-4,-20,14,14,-22,]),'ID':([0,3,4,6,7,8,9,10,11,14,16,17,18,19,20,27,28,30,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,69,73,74,76,77,78,94,102,103,104,108,111,113,119,124,126,129,131,134,135,136,137,138,140,144,145,146,147,148,],[15,15,-6,-8,-9,-10,-11,-12,-13,58,-17,-18,65,65,65,71,65,71,-69,-5,-7,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-14,-15,95,65,65,65,-68,65,-37,71,65,15,65,-16,65,-34,-36,15,65,-35,128,-33,-23,15,15,15,65,15,15,-19,-21,-4,-20,15,15,-22,]),'MINUS':([0,3,4,5,6,7,8,9,10,11,15,16,17,18,19,20,21,22,23,24,25,26,28,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,64,65,67,68,69,72,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,107,108,109,110,111,112,113,114,115,123,124,126,129,131,134,135,136,137,138,139,140,144,145,146,147,148,],[19,19,-6,42,-8,-9,-10,-11,-12,-13,-70,-17,-18,19,19,19,-55,-56,-57,-58,-59,-60,19,-62,-63,-64,-65,-5,-7,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-14,-15,19,19,19,-68,42,-70,-51,-54,19,42,-37,19,19,19,-38,-39,-40,-41,-42,-43,-44,42,42,42,42,42,42,42,42,-16,-24,42,42,42,-61,42,19,-34,-36,42,19,42,-29,19,-67,-35,-66,42,42,-33,-23,19,19,19,19,19,19,-19,42,-21,-4,-20,19,19,-22,]),'LNOT':([0,3,4,6,7,8,9,10,11,16,17,18,19,20,28,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,69,73,76,77,78,94,102,103,104,108,111,113,124,126,129,131,134,135,136,137,138,140,144,145,146,147,148,],[20,20,-6,-8,-9,-10,-11,-12,-13,-17,-18,20,20,20,20,-5,-7,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-14,-15,20,20,20,-68,20,-37,20,20,20,-16,20,-34,-36,20,20,-35,-33,-23,20,20,20,20,20,20,-19,-21,-4,-20,20,20,-22,]),'NULL':([0,3,4,6,7,8,9,10,11,16,17,18,19,20,28,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,69,73,76,77,78,94,102,103,104,108,111,113,124,126,129,131,134,135,136,137,138,140,144,145,146,147,148,],[26,26,-6,-8,-9,-10,-11,-12,-13,-17,-18,26,26,26,26,-5,-7,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-14,-15,26,26,26,-68,26,-37,26,26,26,-16,26,-34,-36,26,26,-35,-33,-23,26,26,26,26,26,26,-19,-21,-4,-20,26,26,-22,]),'LPAREN':([0,3,4,6,7,8,9,10,11,15,16,17,18,19,20,28,31,33,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,65,69,71,73,76,77,78,94,102,103,104,105,108,111,113,124,126,129,130,131,134,135,136,137,138,140,144,145,146,147,148,],[18,18,-6,-8,-9,-10,-11,-12,-13,60,-17,-18,18,18,18,18,76,78,-5,-7,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-14,-15,18,18,18,-68,60,18,-70,-37,18,18,18,-16,18,-34,-36,116,18,18,-35,-33,-23,18,135,18,18,18,18,18,-19,-21,-4,-20,18,18,-22,]),'RETURN':([0,3,4,6,7,8,9,10,11,16,17,39,40,56,57,63,73,77,94,103,104,108,113,124,126,129,131,134,136,137,138,140,144,145,146,147,148,],[28,28,-6,-8,-9,-10,-11,-12,-13,-17,-18,-5,-7,-14,-15,-68,-37,28,-16,-34,-36,28,-35,-33,-23,28,28,28,28,28,-19,-21,-4,-20,28,28,-22,]),'FUNCTION':([0,3,4,6,7,8,9,10,11,16,17,39,40,56,57,63,73,77,94,103,104,108,113,124,126,129,131,134,136,137,138,140,144,145,146,147,148,],[29,29,-6,-8,-9,-10,-11,-12,-13,-17,-18,-5,-7,-14,-15,-68,-37,29,-16,-34,-36,29,-35,-33,-23,29,29,29,29,29,-19,-21,-4,-20,29,29,-22,]),'STRUCTURE':([0,3,4,6,7,8,9,10,11,16,17,39,40,56,57,63,73,77,94,103,104,108,113,124,126,129,131,134,136,137,138,140,144,145,146,147,148,],[30,30,-6,-8,-9,-10,-11,-12,-13,-17,-18,-5,-7,-14,-15,-68,-37,30,-16,-34,-36,30,-35,-33,-23,30,30,30,30,30,-19,-21,-4,-20,30,30,-22,]),'WHILE':([0,3,4,6,7,8,9,10,11,16,17,39,40,56,57,63,73,77,94,103,104,108,113,121,124,126,129,131,134,136,137,138,140,144,145,146,147,148,],[31,31,-6,-8,-9,-10,-11,-12,-13,-17,-18,-5,-7,-14,-15,-68,-37,31,-16,-34,-36,31,-35,130,-33,-23,31,31,31,31,31,-19,-21,-4,-20,31,31,-22,]),'DO':([0,3,4,6,7,8,9,10,11,16,17,39,40,56,57,63,73,77,94,103,104,108,113,124,126,129,131,134,136,137,138,140,144,145,146,147,148,],[32,32,-6,-8,-9,-10,-11,-12,-13,-17,-18,-5,-7,-14,-15,-68,-37,32,-16,-34,-36,32,-35,-33,-23,32,32,32,32,32,-19,-21,-4,-20,32,32,-22,]),'IF':([0,3,4,6,7,8,9,10,11,16,17,39,40,56,57,63,73,77,94,103,104,108,113,124,126,129,131,134,136,137,138,140,144,145,146,147,148,],[33,33,-6,-8,-9,-10,-11,-12,-13,-17,-18,-5,-7,-14,-15,-68,-37,33,-16,-34,-36,33,-35,-33,-23,33,33,33,33,33,-19,-21,-4,-20,33,33,-22,]),'INTEGER':([0,3,4,6,7,8,9,10,11,16,17,18,19,20,28,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,69,73,76,77,78,94,102,103,104,108,111,113,124,126,129,131,134,135,136,137,138,140,144,145,146,147,148,],[34,34,-6,-8,-9,-10,-11,-12,-13,-17,-18,34,34,34,34,-5,-7,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-14,-15,34,34,34,-68,34,-37,34,34,34,-16,34,-34,-36,34,34,-35,-33,-23,34,34,34,34,34,34,-19,-21,-4,-20,34,34,-22,]),'DOUBLE':([0,3,4,6,7,8,9,10,11,16,17,18,19,20,28,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,69,73,76,77,78,94,102,103,104,108,111,113,124,126,129,131,134,135,136,137,138,140,144,145,146,147,148,],[35,35,-6,-8,-9,-10,-11,-12,-13,-17,-18,35,35,35,35,-5,-7,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-14,-15,35,35,35,-68,35,-37,35,35,35,-16,35,-34,-36,35,35,-35,-33,-23,35,35,35,35,35,35,-19,-21,-4,-20,35,35,-22,]),'BOOLEAN':([0,3,4,6,7,8,9,10,11,16,17,18,19,20,28,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,69,73,76,77,78,94,102,103,104,108,111,113,124,126,129,131,134,135,136,137,138,140,144,145,146,147,148,],[36,36,-6,-8,-9,-10,-11,-12,-13,-17,-18,36,36,36,36,-5,-7,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-14,-15,36,36,36,-68,36,-37,36,36,36,-16,36,-34,-36,36,36,-35,-33,-23,36,36,36,36,36,36,-19,-21,-4,-20,36,36,-22,]),'STRING':([0,3,4,6,7,8,9,10,11,16,17,18,19,20,28,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,69,73,76,77,78,94,102,103,104,108,111,113,124,126,129,131,134,135,136,137,138,140,144,145,146,147,148,],[37,37,-6,-8,-9,-10,-11,-12,-13,-17,-18,37,37,37,37,-5,-7,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-14,-15,37,37,37,-68,37,-37,37,37,37,-16,37,-34,-36,37,37,-35,-33,-23,37,37,37,37,37,37,-19,-21,-4,-20,37,37,-22,]),'DATATYPE':([0,3,4,6,7,8,9,10,11,16,17,18,19,20,28,29,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,69,73,76,77,78,94,102,103,104,106,108,111,113,116,124,126,127,129,131,134,135,136,137,138,140,144,145,146,147,148,],[38,38,-6,-8,-9,-10,-11,-12,-13,-17,-18,38,38,38,38,38,-5,-7,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-14,-15,38,38,38,-68,38,-37,38,38,38,-16,38,-34,-36,119,38,38,-35,119,-33,-23,119,38,38,38,38,38,38,-19,-21,-4,-20,38,38,-22,]),'RBRACE':([3,4,6,7,8,9,10,11,16,17,39,40,56,57,63,73,94,103,104,106,108,113,117,118,124,126,128,133,134,136,138,140,141,144,145,147,148,],[-3,-6,-8,-9,-10,-11,-12,-13,-17,-18,-5,-7,-14,-15,-68,-37,-16,-34,-36,-25,121,-35,126,-26,-33,-23,-28,-27,138,140,-19,-21,144,-4,-20,148,-22,]),'SEMI':([5,12,13,15,21,22,23,24,25,26,28,34,35,36,37,58,65,67,68,70,71,72,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,99,100,110,112,114,115,142,],[40,56,57,-70,-55,-56,-57,-58,-59,-60,73,-62,-63,-64,-65,94,-70,-51,-54,103,-70,104,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-52,-53,-24,113,-61,-29,-67,-66,124,145,]),'PLUS':([5,15,21,22,23,24,25,26,34,35,36,37,64,65,67,68,72,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,97,98,99,100,101,107,109,110,112,114,115,123,139,],[41,-70,-55,-56,-57,-58,-59,-60,-62,-63,-64,-65,41,-70,-51,-54,41,-38,-39,-40,-41,-42,-43,-44,41,41,41,41,41,41,41,41,-24,41,41,41,-61,41,41,41,-29,-67,-66,41,41,41,]),'MUL':([5,15,21,22,23,24,25,26,34,35,36,37,64,65,67,68,72,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,97,98,99,100,101,107,109,110,112,114,115,123,139,],[43,-70,-55,-56,-57,-58,-59,-60,-62,-63,-64,-65,43,-70,-51,-54,43,43,43,-40,-41,-42,-43,-44,43,43,43,43,43,43,43,43,-24,43,43,43,-61,43,43,43,-29,-67,-66,43,43,43,]),'DIVIDE':([5,15,21,22,23,24,25,26,34,35,36,37,64,65,67,68,72,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,97,98,99,100,101,107,109,110,112,114,115,123,139,],[44,-70,-55,-56,-57,-58,-59,-60,-62,-63,-64,-65,44,-70,-51,-54,44,44,44,-40,-41,-42,-43,-44,44,44,44,44,44,44,44,44,-24,44,44,44,-61,44,44,44,-29,-67,-66,44,44,44,]),'INTDIVIDE':([5,15,21,22,23,24,25,26,34,35,36,37,64,65,67,68,72,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,97,98,99,100,101,107,109,110,112,114,115,123,139,],[45,-70,-55,-56,-57,-58,-59,-60,-62,-63,-64,-65,45,-70,-51,-54,45,45,45,-40,-41,-42,-43,-44,45,45,45,45,45,45,45,45,-24,45,45,45,-61,45,45,45,-29,-67,-66,45,45,45,]),'MODULO':([5,15,21,22,23,24,25,26,34,35,36,37,64,65,67,68,72,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,97,98,99,100,101,107,109,110,112,114,115,123,139,],[46,-70,-55,-56,-57,-58,-59,-60,-62,-63,-64,-65,46,-70,-51,-54,46,46,46,-40,-41,-42,-43,-44,46,46,46,46,46,46,46,46,-24,46,46,46,-61,46,46,46,-29,-67,-66,46,46,46,]),'POW':([5,15,21,22,23,24,25,26,34,35,36,37,64,65,67,68,72,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,97,98,99,100,101,107,109,110,112,114,115,123,139,],[47,-70,-55,-56,-57,-58,-59,-60,-62,-63,-64,-65,47,-70,-51,-54,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-24,47,47,47,-61,47,47,47,-29,-67,-66,47,47,47,]),'LE':([5,15,21,22,23,24,25,26,34,35,36,37,64,65,67,68,72,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,97,98,99,100,101,107,109,110,112,114,115,123,139,],[48,-70,-55,-56,-57,-58,-59,-60,-62,-63,-64,-65,48,-70,-51,-54,48,-38,-39,-40,-41,-42,-43,-44,None,None,None,None,48,48,48,48,-24,48,48,48,-61,48,48,48,-29,-67,-66,48,48,48,]),'GE':([5,15,21,22,23,24,25,26,34,35,36,37,64,65,67,68,72,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,97,98,99,100,101,107,109,110,112,114,115,123,139,],[49,-70,-55,-56,-57,-58,-59,-60,-62,-63,-64,-65,49,-70,-51,-54,49,-38,-39,-40,-41,-42,-43,-44,None,None,None,None,49,49,49,49,-24,49,49,49,-61,49,49,49,-29,-67,-66,49,49,49,]),'LT':([5,15,21,22,23,24,25,26,34,35,36,37,64,65,67,68,72,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,97,98,99,100,101,107,109,110,112,114,115,123,139,],[50,-70,-55,-56,-57,-58,-59,-60,-62,-63,-64,-65,50,-70,-51,-54,50,-38,-39,-40,-41,-42,-43,-44,None,None,None,None,50,50,50,50,-24,50,50,50,-61,50,50,50,-29,-67,-66,50,50,50,]),'GT':([5,15,21,22,23,24,25,26,34,35,36,37,64,65,67,68,72,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,97,98,99,100,101,107,109,110,112,114,115,123,139,],[51,-70,-55,-56,-57,-58,-59,-60,-62,-63,-64,-65,51,-70,-51,-54,51,-38,-39,-40,-41,-42,-43,-44,None,None,None,None,51,51,51,51,-24,51,51,51,-61,51,51,51,-29,-67,-66,51,51,51,]),'EQ':([5,15,21,22,23,24,25,26,34,35,36,37,64,65,67,68,72,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,97,98,99,100,101,107,109,110,112,114,115,123,139,],[52,-70,-55,-56,-57,-58,-59,-60,-62,-63,-64,-65,52,-70,-51,-54,52,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,None,None,52,52,-24,52,52,52,-61,52,52,52,-29,-67,-66,52,52,52,]),'NE':([5,15,21,22,23,24,25,26,34,35,36,37,64,65,67,68,72,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,97,98,99,100,101,107,109,110,112,114,115,123,139,],[53,-70,-55,-56,-57,-58,-59,-60,-62,-63,-64,-65,53,-70,-51,-54,53,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,None,None,53,53,-24,53,53,53,-61,53,53,53,-29,-67,-66,53,53,53,]),'LAND':([5,15,21,22,23,24,25,26,34,35,36,37,64,65,67,68,72,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,97,98,99,100,101,107,109,110,112,114,115,123,139,],[54,-70,-55,-56,-57,-58,-59,-60,-62,-63,-64,-65,54,-70,-51,-54,54,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,None,54,-24,54,54,54,-61,54,54,54,-29,-67,-66,54,54,54,]),'LOR':([5,15,21,22,23,24,25,26,34,35,36,37,64,65,67,68,72,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,97,98,99,100,101,107,109,110,112,114,115,123,139,],[55,-70,-55,-56,-57,-58,-59,-60,-62,-63,-64,-65,55,-70,-51,-54,55,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-52,None,-24,55,55,55,-61,55,55,55,-29,-67,-66,55,55,55,]),'DOT':([15,65,],[59,59,]),'LBRACKET':([15,27,38,65,66,],[61,69,-69,61,69,]),'EQUALS':([15,70,71,],[62,102,-70,]),'COLON':([15,],[63,]),'RPAREN':([21,22,23,24,25,26,34,35,36,37,60,64,65,67,68,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,100,107,109,110,112,114,116,118,123,125,128,133,139,],[-55,-56,-57,-58,-59,-60,-62,-63,-64,-65,-30,100,-70,-51,-54,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-52,-53,-24,110,-31,-61,120,122,-29,-67,-66,-25,-26,-32,132,-28,-27,142,]),'COMMA':([21,22,23,24,25,26,34,35,36,37,60,65,67,68,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,100,106,110,112,114,116,117,118,123,125,128,133,],[-55,-56,-57,-58,-59,-60,-62,-63,-64,-65,-30,-70,-51,-54,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-52,-53,-24,111,-31,-61,-25,-29,-67,-66,-25,127,-26,-32,127,-28,-27,]),'RBRACKET':([21,22,23,24,25,26,34,35,36,37,65,67,68,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,98,100,101,110,112,114,],[-55,-56,-57,-58,-59,-60,-62,-63,-64,-65,-70,-51,-54,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-52,-53,-24,112,-61,114,-29,-67,-66,]),'LBRACE':([32,71,75,120,122,132,143,],[77,-70,106,129,131,137,146,]),'ELSE':([140,],[143,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'basic_block':([0,137,],[2,141,]),'stmt_list':([0,77,129,131,137,146,],[3,108,134,136,3,147,]),'statement':([0,3,77,108,129,131,134,136,137,146,147,],[4,39,4,39,4,4,39,39,4,4,39,]),'expr':([0,3,18,19,20,28,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,61,62,69,76,77,78,102,108,111,129,131,134,135,136,137,146,147,],[5,5,64,67,68,72,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,99,101,107,5,109,115,5,123,5,5,5,139,5,5,5,5,]),'var_declaration':([0,3,77,108,129,131,134,136,137,146,147,],[6,6,6,6,6,6,6,6,6,6,6,]),'return':([0,3,77,108,129,131,134,136,137,146,147,],[7,7,7,7,7,7,7,7,7,7,7,]),'assign':([0,3,77,108,129,131,134,136,137,146,147,],[8,8,8,8,8,8,8,8,8,8,8,]),'func_declaration':([0,3,77,108,129,131,134,136,137,146,147,],[9,9,9,9,9,9,9,9,9,9,9,]),'struct_declaration':([0,3,77,108,129,131,134,136,137,146,147,],[10,10,10,10,10,10,10,10,10,10,10,]),'while':([0,3,77,108,129,131,134,136,137,146,147,],[11,11,11,11,11,11,11,11,11,11,11,]),'goto_mark':([0,3,77,108,129,131,134,136,137,146,147,],[16,16,16,16,16,16,16,16,16,16,16,]),'if-else':([0,3,77,108,129,131,134,136,137,146,147,],[17,17,17,17,17,17,17,17,17,17,17,]),'id':([0,3,18,19,20,27,28,30,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,61,62,69,74,76,77,78,102,108,111,129,131,134,135,136,137,146,147,],[21,21,21,21,21,70,21,75,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,105,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'int':([0,3,18,19,20,28,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,61,62,69,76,77,78,102,108,111,129,131,134,135,136,137,146,147,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'double':([0,3,18,19,20,28,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,61,62,69,76,77,78,102,108,111,129,131,134,135,136,137,146,147,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'bool':([0,3,18,19,20,28,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,61,62,69,76,77,78,102,108,111,129,131,134,135,136,137,146,147,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'str':([0,3,18,19,20,28,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,61,62,69,76,77,78,102,108,111,129,131,134,135,136,137,146,147,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'datatype':([0,3,18,19,20,28,29,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,61,62,69,76,77,78,102,108,111,129,131,134,135,136,137,146,147,],[27,27,66,66,66,66,74,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,27,66,66,27,66,27,27,27,66,27,27,27,27,]),'args':([60,],[96,]),'params':([106,116,],[117,125,]),'param':([106,116,127,],[118,118,133,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> <empty>','program',0,'p_program','doh_parser.py',55),
  ('program -> basic_block','program',1,'p_program','doh_parser.py',56),
  ('basic_block -> stmt_list','basic_block',1,'p_basic_block','doh_parser.py',64),
  ('func_declaration -> FUNCTION datatype id LPAREN params RPAREN LBRACE basic_block RBRACE','func_declaration',9,'p_func_declaration','doh_parser.py',69),
  ('stmt_list -> stmt_list statement','stmt_list',2,'p_stmt_list','doh_parser.py',79),
  ('stmt_list -> statement','stmt_list',1,'p_stmt_list','doh_parser.py',80),
  ('statement -> expr SEMI','statement',2,'p_stmt','doh_parser.py',89),
  ('statement -> var_declaration','statement',1,'p_stmt','doh_parser.py',90),
  ('statement -> return','statement',1,'p_stmt','doh_parser.py',91),
  ('statement -> assign','statement',1,'p_stmt','doh_parser.py',92),
  ('statement -> func_declaration','statement',1,'p_stmt','doh_parser.py',93),
  ('statement -> struct_declaration','statement',1,'p_stmt','doh_parser.py',94),
  ('statement -> while','statement',1,'p_stmt','doh_parser.py',95),
  ('statement -> BREAK SEMI','statement',2,'p_stmt','doh_parser.py',96),
  ('statement -> CONTINUE SEMI','statement',2,'p_stmt','doh_parser.py',97),
  ('statement -> GOTO ID SEMI','statement',3,'p_stmt','doh_parser.py',98),
  ('statement -> goto_mark','statement',1,'p_stmt','doh_parser.py',99),
  ('statement -> if-else','statement',1,'p_stmt','doh_parser.py',100),
  ('while -> WHILE LPAREN expr RPAREN LBRACE stmt_list RBRACE','while',7,'p_loops','doh_parser.py',114),
  ('while -> DO LBRACE stmt_list RBRACE WHILE LPAREN expr RPAREN SEMI','while',9,'p_loops','doh_parser.py',115),
  ('if-else -> IF LPAREN expr RPAREN LBRACE stmt_list RBRACE','if-else',7,'p_if_else','doh_parser.py',125),
  ('if-else -> IF LPAREN expr RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE','if-else',11,'p_if_else','doh_parser.py',126),
  ('struct_declaration -> STRUCTURE id LBRACE params RBRACE','struct_declaration',5,'p_struct_declaration','doh_parser.py',136),
  ('expr -> ID DOT ID','expr',3,'p_struct_field','doh_parser.py',143),
  ('params -> <empty>','params',0,'p_params','doh_parser.py',156),
  ('params -> param','params',1,'p_params','doh_parser.py',157),
  ('params -> params COMMA param','params',3,'p_params','doh_parser.py',158),
  ('param -> DATATYPE ID','param',2,'p_param_declaration','doh_parser.py',179),
  ('expr -> ID LPAREN args RPAREN','expr',4,'p_func_call','doh_parser.py',189),
  ('args -> <empty>','args',0,'p_arguments','doh_parser.py',194),
  ('args -> expr','args',1,'p_arguments','doh_parser.py',195),
  ('args -> args COMMA expr','args',3,'p_arguments','doh_parser.py',196),
  ('var_declaration -> datatype id EQUALS expr SEMI','var_declaration',5,'p_var_declaration','doh_parser.py',212),
  ('var_declaration -> datatype id SEMI','var_declaration',3,'p_var_declaration','doh_parser.py',213),
  ('assign -> ID EQUALS expr SEMI','assign',4,'p_assign','doh_parser.py',222),
  ('return -> RETURN expr SEMI','return',3,'p_return','doh_parser.py',228),
  ('return -> RETURN SEMI','return',2,'p_return','doh_parser.py',229),
  ('expr -> expr PLUS expr','expr',3,'p_math_expressions','doh_parser.py',243),
  ('expr -> expr MINUS expr','expr',3,'p_math_expressions','doh_parser.py',244),
  ('expr -> expr MUL expr','expr',3,'p_math_expressions','doh_parser.py',245),
  ('expr -> expr DIVIDE expr','expr',3,'p_math_expressions','doh_parser.py',246),
  ('expr -> expr INTDIVIDE expr','expr',3,'p_math_expressions','doh_parser.py',247),
  ('expr -> expr MODULO expr','expr',3,'p_math_expressions','doh_parser.py',248),
  ('expr -> expr POW expr','expr',3,'p_math_expressions','doh_parser.py',249),
  ('expr -> expr LE expr','expr',3,'p_conditionals','doh_parser.py',270),
  ('expr -> expr GE expr','expr',3,'p_conditionals','doh_parser.py',271),
  ('expr -> expr LT expr','expr',3,'p_conditionals','doh_parser.py',272),
  ('expr -> expr GT expr','expr',3,'p_conditionals','doh_parser.py',273),
  ('expr -> expr EQ expr','expr',3,'p_conditionals','doh_parser.py',274),
  ('expr -> expr NE expr','expr',3,'p_conditionals','doh_parser.py',275),
  ('expr -> MINUS expr','expr',2,'p_logical_operation','doh_parser.py',291),
  ('expr -> expr LAND expr','expr',3,'p_logical_operation','doh_parser.py',292),
  ('expr -> expr LOR expr','expr',3,'p_logical_operation','doh_parser.py',293),
  ('expr -> LNOT expr','expr',2,'p_logical_operation','doh_parser.py',294),
  ('expr -> id','expr',1,'p_literals','doh_parser.py',306),
  ('expr -> int','expr',1,'p_literals','doh_parser.py',307),
  ('expr -> double','expr',1,'p_literals','doh_parser.py',308),
  ('expr -> bool','expr',1,'p_literals','doh_parser.py',309),
  ('expr -> str','expr',1,'p_literals','doh_parser.py',310),
  ('expr -> NULL','expr',1,'p_literals','doh_parser.py',311),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_literals','doh_parser.py',312),
  ('int -> INTEGER','int',1,'p_const_int','doh_parser.py',320),
  ('double -> DOUBLE','double',1,'p_const_double','doh_parser.py',325),
  ('bool -> BOOLEAN','bool',1,'p_const_bool','doh_parser.py',330),
  ('str -> STRING','str',1,'p_const_string','doh_parser.py',335),
  ('expr -> datatype LBRACKET expr RBRACKET','expr',4,'p_array_init','doh_parser.py',341),
  ('expr -> ID LBRACKET expr RBRACKET','expr',4,'p_index','doh_parser.py',348),
  ('goto_mark -> ID COLON','goto_mark',2,'p_goto_mark','doh_parser.py',354),
  ('datatype -> DATATYPE','datatype',1,'p_datatype','doh_parser.py',359),
  ('id -> ID','id',1,'p_id','doh_parser.py',364),
]
