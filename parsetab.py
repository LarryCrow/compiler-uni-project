
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftCOMMArightEQUALSnonassocLORnonassocLANDnonassocBORnonassocBANDnonassocEQNEnonassocLEGELTGTleftPLUSMINUSleftMULDIVIDEINTDIVIDEMODULOrightPOWrightUMINUSLNOTleftLBRACERBRACELPARENRPARENLBRACKETRBRACKETDOTBAND BOOL BOR BREAK COLON COMMA COMMENT CONTINUE DATATYPE DIVIDE DO DOT DOUBLE ELSE EQ EQUALS ERROR FUNCTION GE GOTO GT ID IF INTDIVIDE INTEGER LAND LBRACE LBRACKET LE LNOT LOR LPAREN LT MINUS MODULO MUL NE NEWLINE NULL PLUS POW RBRACE RBRACKET RETURN RPAREN SEMI STRING STRUCTURE VOID WHILEprogram :\n               | scopebasic_block : LBRACE scope RBRACE body_block : error scope RBRACE\n                   | LBRACE error RBRACE\n                   | LBRACE scope error\n    func_declaration : FUNCTION datatype id LPAREN params RPAREN basic_blockfunc_declaration : error datatype id LPAREN params RPAREN body_block\n                        | FUNCTION error id LPAREN params RPAREN body_block\n                        | FUNCTION datatype error LPAREN params RPAREN body_block\n                        | FUNCTION datatype id error params RPAREN body_block\n                        | FUNCTION datatype id LPAREN params error body_block\n    \n    scope : scope statement\n          | statement\n    \n    statement : expr SEMI\n              | var_declaration\n              | return\n              | assign\n              | func_declaration\n              | struct_declaration\n              | while\n              | BREAK SEMI\n              | CONTINUE SEMI\n              | GOTO ID SEMI\n              | goto_mark\n              | if-else\n    \n    while : WHILE conditional basic_block\n          | DO basic_block WHILE conditional SEMI\n    \n    while : error body_block WHILE conditional SEMI\n          | DO body_block error conditional SEMI\n          | DO body_block WHILE conditional error\n    \n    if-else : IF conditional basic_block\n            | IF conditional basic_block ELSE basic_block\n    conditional : LPAREN expr RPAREN\n    conditional : error expr RPAREN\n                | LPAREN error RPAREN\n                | LPAREN expr error\n    \n    struct_declaration : STRUCTURE id LBRACE struct_params RBRACE\n    \n    struct_declaration : STRUCTURE error LBRACE struct_params RBRACE\n                       |  STRUCTURE id error struct_params RBRACE\n                       |  STRUCTURE id LBRACE struct_params error\n    \n    struct_params : struct_param\n                  | struct_params COMMA struct_param\n    \n    struct_params : struct_params error struct_param\n    struct_param : DATATYPE ID\n    struct_param : error ID\n                 | DATATYPE error\n    params :\n              | param\n              | params COMMA param\n    params : params error param\n    param : DATATYPE IDparam : error ID\n             | DATATYPE errorexpr : id LPAREN args RPARENexpr : id error args RPAREN\n            | id LPAREN args errorargs :\n            | expr\n            | args COMMA expr\n    args : args error expr\n    \n    var_declaration : datatype id EQUALS expr SEMI\n                    | datatype id SEMI\n    var_declaration : ID id SEMI\n                       | ID id EQUALS LBRACE args RBRACE SEMI\n                       | ID id EQUALS expr SEMI\n    var_declaration : datatype error EQUALS expr SEMI\n                    | datatype id error expr SEMI\n                    | datatype id EQUALS expr error\n                    | datatype id EQUALS error SEMI\n    \n    var_declaration : datatype error SEMI\n                    | datatype id error\n    \n    var_declaration : ID error EQUALS LBRACE args RBRACE SEMI\n                    | ID id error LBRACE args RBRACE SEMI\n                    | ID id EQUALS error args RBRACE SEMI\n                    | ID id EQUALS LBRACE error RBRACE SEMI\n                    | ID id EQUALS LBRACE args error SEMI\n                    | ID id EQUALS LBRACE args RBRACE error\n    assign : id EQUALS expr SEMI\n    assign : id EQUALS LBRACE args RBRACE SEMI\n           | id DOT ID EQUALS expr SEMI\n    assign : id LBRACKET expr RBRACKET EQUALS expr SEMI\n    assign : ID error expr SEMI\n           | ID EQUALS error SEMI\n           | ID EQUALS expr error\n    \n    assign : ID error LBRACE args RBRACE SEMI\n           | ID EQUALS error args RBRACE SEMI\n           | ID EQUALS LBRACE error RBRACE SEMI\n           | ID EQUALS LBRACE args error SEMI\n           | ID EQUALS LBRACE args RBRACE error\n    assign : ID DOT ID error expr SEMI\n              | ID DOT ID EQUALS error SEMI\n              | ID DOT ID EQUALS expr error\n    return : RETURN expr SEMI\n           | RETURN SEMI\n    \n    return : RETURN error\n    expr : expr PLUS expr\n            | expr MINUS expr\n            | expr MUL expr\n            | expr DIVIDE expr\n            | expr INTDIVIDE expr\n            | expr MODULO expr\n            | expr POW exprexpr : expr LE expr\n            | expr GE expr\n            | expr LT expr\n            | expr GT expr\n            | expr EQ expr\n            | expr NE exprexpr : expr error exprexpr : MINUS expr %prec UMINUS\n            | expr LAND expr\n            | expr LOR expr\n            | LNOT expr\n    expr : expr BAND expr\n         | expr BOR expr\n    expr : id\n            | int\n            | double\n            | bool\n            | str\n            | void\n            | NULL\n            | LPAREN expr RPARENint : INTEGERdouble : DOUBLEbool : BOOLstr : STRINGvoid : VOID\n    expr : datatype id LBRACKET INTEGER RBRACKET\n         | ID id LBRACKET INTEGER RBRACKET\n         | datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE\n         | ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE\n    \n    expr : datatype error RBRACKET id\n         | datatype LBRACKET error id\n         | datatype LBRACKET RBRACKET error\n         | error LBRACKET RBRACKET id\n    expr : id LBRACKET expr RBRACKETexpr : id DOT IDgoto_mark : ID COLONdatatype : DATATYPEid : ID'
    
_lr_action_items = {'$end':([0,1,2,3,5,6,7,8,9,10,15,16,41,42,61,62,69,91,92,122,125,155,156,161,162,169,178,184,186,191,201,205,209,210,237,242,264,266,267,268,269,270,275,276,282,283,284,285,286,287,294,295,296,297,299,300,301,302,304,305,321,322,323,324,325,326,327,328,330,333,335,336,337,338,],[-1,0,-2,-14,-16,-17,-18,-19,-20,-21,-25,-26,-13,-15,-22,-23,-140,-95,-96,-24,-64,-63,-72,-71,-94,-27,-32,-84,-85,-83,-79,-4,-5,-6,-3,-66,-29,-62,-69,-70,-68,-67,-38,-41,-40,-39,-28,-30,-31,-33,-87,-88,-89,-90,-86,-91,-92,-93,-81,-80,-65,-78,-77,-76,-75,-74,-73,-82,-8,-7,-12,-11,-10,-9,]),'BREAK':([0,2,3,5,6,7,8,9,10,15,16,41,42,61,62,69,80,84,91,92,102,122,125,147,152,155,156,161,162,169,170,177,178,184,186,191,201,205,209,210,229,237,242,264,266,267,268,269,270,275,276,282,283,284,285,286,287,294,295,296,297,299,300,301,302,304,305,321,322,323,324,325,326,327,328,330,333,334,335,336,337,338,],[11,11,-14,-16,-17,-18,-19,-20,-21,-25,-26,-13,-15,-22,-23,-140,11,11,-95,-96,11,-24,-64,11,11,-63,-72,-71,-94,-27,11,11,-32,-84,-85,-83,-79,-4,-5,-6,11,-3,-66,-29,-62,-69,-70,-68,-67,-38,-41,-40,-39,-28,-30,-31,-33,-87,-88,-89,-90,-86,-91,-92,-93,-81,-80,-65,-78,-77,-76,-75,-74,-73,-82,-8,-7,11,-12,-11,-10,-9,]),'CONTINUE':([0,2,3,5,6,7,8,9,10,15,16,41,42,61,62,69,80,84,91,92,102,122,125,147,152,155,156,161,162,169,170,177,178,184,186,191,201,205,209,210,229,237,242,264,266,267,268,269,270,275,276,282,283,284,285,286,287,294,295,296,297,299,300,301,302,304,305,321,322,323,324,325,326,327,328,330,333,334,335,336,337,338,],[12,12,-14,-16,-17,-18,-19,-20,-21,-25,-26,-13,-15,-22,-23,-140,12,12,-95,-96,12,-24,-64,12,12,-63,-72,-71,-94,-27,12,12,-32,-84,-85,-83,-79,-4,-5,-6,12,-3,-66,-29,-62,-69,-70,-68,-67,-38,-41,-40,-39,-28,-30,-31,-33,-87,-88,-89,-90,-86,-91,-92,-93,-81,-80,-65,-78,-77,-76,-75,-74,-73,-82,-8,-7,12,-12,-11,-10,-9,]),'GOTO':([0,2,3,5,6,7,8,9,10,15,16,41,42,61,62,69,80,84,91,92,102,122,125,147,152,155,156,161,162,169,170,177,178,184,186,191,201,205,209,210,229,237,242,264,266,267,268,269,270,275,276,282,283,284,285,286,287,294,295,296,297,299,300,301,302,304,305,321,322,323,324,325,326,327,328,330,333,334,335,336,337,338,],[13,13,-14,-16,-17,-18,-19,-20,-21,-25,-26,-13,-15,-22,-23,-140,13,13,-95,-96,13,-24,-64,13,13,-63,-72,-71,-94,-27,13,13,-32,-84,-85,-83,-79,-4,-5,-6,13,-3,-66,-29,-62,-69,-70,-68,-67,-38,-41,-40,-39,-28,-30,-31,-33,-87,-88,-89,-90,-86,-91,-92,-93,-81,-80,-65,-78,-77,-76,-75,-74,-73,-82,-8,-7,13,-12,-11,-10,-9,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,24,25,26,27,29,30,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,66,67,69,70,71,72,74,75,76,79,80,84,85,86,90,91,92,98,99,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,127,128,129,131,132,135,137,138,139,140,141,142,147,152,154,155,156,160,161,162,169,170,171,173,177,178,180,181,182,183,184,186,189,191,192,193,194,195,196,197,198,199,200,201,203,204,205,206,209,210,212,214,215,216,217,218,229,231,237,239,242,247,251,253,254,255,256,257,259,264,265,266,267,268,269,270,275,276,282,283,284,285,286,287,290,294,295,296,297,299,300,301,302,303,304,305,320,321,322,323,324,325,326,327,328,330,332,333,334,335,336,337,338,341,342,343,],[20,20,-14,44,-16,-17,-18,-19,-20,-21,-142,-25,-26,-117,20,20,20,-118,-119,-120,-121,-122,-123,-125,20,-126,-127,-128,-129,-13,-15,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-22,-23,-142,20,20,-140,20,20,20,20,44,-117,-142,20,20,-111,-114,44,-95,-96,20,20,20,-97,-98,-99,-100,-101,-102,-103,44,44,44,44,44,44,44,44,44,44,44,-24,20,-64,20,44,20,20,44,44,44,-139,44,20,-124,20,20,20,20,-63,20,20,-71,-94,-27,20,44,44,20,-32,20,44,20,20,-84,20,20,-83,20,20,-55,20,20,20,-56,-138,20,-79,44,-139,-4,-137,-5,-6,44,44,-135,-136,-134,44,20,20,-3,-131,-66,20,44,44,44,44,20,44,-138,-29,-130,-62,20,-70,-68,-67,-38,-41,-40,-39,-28,-30,-31,-33,20,-87,-88,-89,-90,-86,-91,-92,20,44,-81,-80,20,-65,-78,-77,-76,-75,-74,-73,-82,-8,20,-7,20,-12,-11,-10,-9,-142,-133,-132,]),'LNOT':([0,2,3,5,6,7,8,9,10,15,16,18,20,21,30,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,66,67,69,70,71,72,74,80,84,91,92,98,99,102,122,124,125,127,129,131,140,142,147,152,154,155,156,160,161,162,169,170,177,178,180,182,183,184,186,189,191,192,193,195,196,197,200,201,205,209,210,229,231,237,242,247,256,264,266,267,268,269,270,275,276,282,283,284,285,286,287,290,294,295,296,297,299,300,301,302,304,305,320,321,322,323,324,325,326,327,328,330,332,333,334,335,336,337,338,],[21,21,-14,-16,-17,-18,-19,-20,-21,-25,-26,21,21,21,21,-13,-15,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-22,-23,21,21,-140,21,21,21,21,21,21,-95,-96,21,21,21,-24,21,-64,21,21,21,21,21,21,21,21,-63,21,21,-71,-94,-27,21,21,-32,21,21,21,-84,21,21,-83,21,21,21,21,21,21,-79,-4,-5,-6,21,21,-3,-66,21,21,-29,-62,21,-70,-68,-67,-38,-41,-40,-39,-28,-30,-31,-33,21,-87,-88,-89,-90,-86,-91,-92,21,-81,-80,21,-65,-78,-77,-76,-75,-74,-73,-82,-8,21,-7,21,-12,-11,-10,-9,]),'NULL':([0,2,3,5,6,7,8,9,10,15,16,18,20,21,30,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,66,67,69,70,71,72,74,80,84,91,92,98,99,102,122,124,125,127,129,131,140,142,147,152,154,155,156,160,161,162,169,170,177,178,180,182,183,184,186,189,191,192,193,195,196,197,200,201,205,209,210,229,231,237,242,247,256,264,266,267,268,269,270,275,276,282,283,284,285,286,287,290,294,295,296,297,299,300,301,302,304,305,320,321,322,323,324,325,326,327,328,330,332,333,334,335,336,337,338,],[27,27,-14,-16,-17,-18,-19,-20,-21,-25,-26,27,27,27,27,-13,-15,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-22,-23,27,27,-140,27,27,27,27,27,27,-95,-96,27,27,27,-24,27,-64,27,27,27,27,27,27,27,27,-63,27,27,-71,-94,-27,27,27,-32,27,27,27,-84,27,27,-83,27,27,27,27,27,27,-79,-4,-5,-6,27,27,-3,-66,27,27,-29,-62,27,-70,-68,-67,-38,-41,-40,-39,-28,-30,-31,-33,27,-87,-88,-89,-90,-86,-91,-92,27,-81,-80,27,-65,-78,-77,-76,-75,-74,-73,-82,-8,27,-7,27,-12,-11,-10,-9,]),'LPAREN':([0,2,3,5,6,7,8,9,10,14,15,16,17,18,20,21,30,33,35,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,66,67,69,70,71,72,74,76,79,80,84,91,92,98,99,102,122,124,125,127,129,131,140,142,147,149,150,152,154,155,156,160,161,162,163,164,165,169,170,174,175,176,177,178,180,182,183,184,186,189,191,192,193,195,196,197,200,201,205,209,210,229,231,237,242,247,256,264,266,267,268,269,270,275,276,282,283,284,285,286,287,290,294,295,296,297,299,300,301,302,304,305,320,321,322,323,324,325,326,327,328,330,332,333,334,335,336,337,338,341,],[18,18,-14,-16,-17,-18,-19,-20,-21,-142,-25,-26,70,18,18,18,18,98,98,-13,-15,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-22,-23,-142,18,18,-140,18,18,18,18,70,-142,18,18,-95,-96,18,18,18,-24,18,-64,18,18,18,18,18,18,207,98,18,18,-63,18,18,-71,-94,219,221,222,-27,18,98,98,98,18,-32,18,18,18,-84,18,18,-83,18,18,18,18,18,18,-79,-4,-5,-6,18,18,-3,-66,18,18,-29,-62,18,-70,-68,-67,-38,-41,-40,-39,-28,-30,-31,-33,18,-87,-88,-89,-90,-86,-91,-92,18,-81,-80,18,-65,-78,-77,-76,-75,-74,-73,-82,-8,18,-7,18,-12,-11,-10,-9,-142,]),'ID':([0,2,3,5,6,7,8,9,10,13,14,15,16,18,20,21,28,30,32,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,66,67,68,69,70,71,72,73,74,78,79,80,82,84,91,92,93,94,98,99,102,122,124,125,127,129,131,140,142,143,147,148,152,154,155,156,157,159,160,161,162,169,170,177,178,180,182,183,184,186,189,191,192,193,195,196,197,200,201,205,209,210,224,226,229,231,237,242,247,256,260,263,264,266,267,268,269,270,275,276,282,283,284,285,286,287,290,294,295,296,297,299,300,301,302,304,305,320,321,322,323,324,325,326,327,328,330,332,333,334,335,336,337,338,341,],[14,14,-14,-16,-17,-18,-19,-20,-21,63,64,-25,-26,79,79,79,64,79,64,-141,-13,-15,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-22,-23,79,79,133,-140,79,79,79,138,79,64,64,14,64,14,-95,-96,64,64,79,79,14,-24,79,-64,79,79,79,79,79,204,14,64,14,79,-63,79,64,64,79,-71,-94,-27,14,14,-32,79,79,79,-84,79,79,-83,79,79,79,79,79,79,-79,-4,-5,-6,278,279,14,79,-3,-66,79,79,306,310,-29,-62,79,-70,-68,-67,-38,-41,-40,-39,-28,-30,-31,-33,79,-87,-88,-89,-90,-86,-91,-92,79,-81,-80,79,-65,-78,-77,-76,-75,-74,-73,-82,-8,79,-7,341,-12,-11,-10,-9,64,]),'error':([0,2,3,4,5,6,7,8,9,10,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,69,70,71,72,74,75,76,78,79,80,84,85,86,87,88,90,91,92,93,95,98,99,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,147,150,151,152,154,155,156,158,160,161,162,163,166,167,168,169,170,171,173,174,175,176,177,178,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,209,210,212,214,215,216,217,218,219,220,221,222,223,225,226,227,228,229,230,231,232,233,236,237,239,240,242,243,244,247,248,249,251,253,254,255,256,257,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,294,295,296,297,299,300,301,302,303,304,305,306,307,308,309,310,311,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,],[19,19,-14,56,-16,-17,-18,-19,-20,-21,67,-25,-26,71,77,80,77,77,-118,-119,-120,-121,-122,-123,89,-125,92,94,96,99,80,99,-126,-127,-128,-129,-141,-13,-15,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-22,-23,-142,126,127,77,-140,77,77,77,77,56,71,145,-142,19,151,-111,-114,156,157,56,-95,-96,164,167,172,77,175,151,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,56,-112,-113,-115,-116,-24,182,-64,77,186,187,77,56,192,195,56,197,56,-139,56,77,-124,77,19,99,80,210,213,-63,77,216,77,-71,-94,220,224,224,224,-27,19,231,56,99,99,99,210,-32,241,56,77,77,-84,197,77,247,77,197,-83,77,252,-55,77,77,77,-56,-138,77,-79,197,56,-139,-4,-137,260,-5,80,267,56,-135,-136,-134,56,260,260,260,260,276,-42,280,281,281,19,-34,77,-36,-35,286,-3,-131,290,-66,197,197,77,297,197,56,302,56,-60,77,56,-138,307,-49,311,-29,-130,-62,77,-70,-68,-67,314,307,307,307,-38,224,224,-46,-45,-47,224,-40,-39,-28,-30,-31,-33,322,77,-87,-88,-89,-90,-86,-91,-92,77,56,-81,-80,-53,260,80,260,-52,-54,334,80,80,80,-44,-43,77,-65,-78,-77,-76,-75,-74,-73,-82,-51,-8,-50,77,-7,19,-12,-11,-10,-9,197,197,67,-133,-132,]),'RETURN':([0,2,3,5,6,7,8,9,10,15,16,41,42,61,62,69,80,84,91,92,102,122,125,147,152,155,156,161,162,169,170,177,178,184,186,191,201,205,209,210,229,237,242,264,266,267,268,269,270,275,276,282,283,284,285,286,287,294,295,296,297,299,300,301,302,304,305,321,322,323,324,325,326,327,328,330,333,334,335,336,337,338,],[30,30,-14,-16,-17,-18,-19,-20,-21,-25,-26,-13,-15,-22,-23,-140,30,30,-95,-96,30,-24,-64,30,30,-63,-72,-71,-94,-27,30,30,-32,-84,-85,-83,-79,-4,-5,-6,30,-3,-66,-29,-62,-69,-70,-68,-67,-38,-41,-40,-39,-28,-30,-31,-33,-87,-88,-89,-90,-86,-91,-92,-93,-81,-80,-65,-78,-77,-76,-75,-74,-73,-82,-8,-7,30,-12,-11,-10,-9,]),'FUNCTION':([0,2,3,5,6,7,8,9,10,15,16,41,42,61,62,69,80,84,91,92,102,122,125,147,152,155,156,161,162,169,170,177,178,184,186,191,201,205,209,210,229,237,242,264,266,267,268,269,270,275,276,282,283,284,285,286,287,294,295,296,297,299,300,301,302,304,305,321,322,323,324,325,326,327,328,330,333,334,335,336,337,338,],[31,31,-14,-16,-17,-18,-19,-20,-21,-25,-26,-13,-15,-22,-23,-140,31,31,-95,-96,31,-24,-64,31,31,-63,-72,-71,-94,-27,31,31,-32,-84,-85,-83,-79,-4,-5,-6,31,-3,-66,-29,-62,-69,-70,-68,-67,-38,-41,-40,-39,-28,-30,-31,-33,-87,-88,-89,-90,-86,-91,-92,-93,-81,-80,-65,-78,-77,-76,-75,-74,-73,-82,-8,-7,31,-12,-11,-10,-9,]),'STRUCTURE':([0,2,3,5,6,7,8,9,10,15,16,41,42,61,62,69,80,84,91,92,102,122,125,147,152,155,156,161,162,169,170,177,178,184,186,191,201,205,209,210,229,237,242,264,266,267,268,269,270,275,276,282,283,284,285,286,287,294,295,296,297,299,300,301,302,304,305,321,322,323,324,325,326,327,328,330,333,334,335,336,337,338,],[32,32,-14,-16,-17,-18,-19,-20,-21,-25,-26,-13,-15,-22,-23,-140,32,32,-95,-96,32,-24,-64,32,32,-63,-72,-71,-94,-27,32,32,-32,-84,-85,-83,-79,-4,-5,-6,32,-3,-66,-29,-62,-69,-70,-68,-67,-38,-41,-40,-39,-28,-30,-31,-33,-87,-88,-89,-90,-86,-91,-92,-93,-81,-80,-65,-78,-77,-76,-75,-74,-73,-82,-8,-7,32,-12,-11,-10,-9,]),'WHILE':([0,2,3,5,6,7,8,9,10,15,16,41,42,61,62,69,80,83,84,91,92,100,101,102,122,125,147,152,155,156,161,162,169,170,177,178,184,186,191,201,205,209,210,229,237,242,264,266,267,268,269,270,275,276,282,283,284,285,286,287,294,295,296,297,299,300,301,302,304,305,321,322,323,324,325,326,327,328,330,333,334,335,336,337,338,],[33,33,-14,-16,-17,-18,-19,-20,-21,-25,-26,-13,-15,-22,-23,-140,33,150,33,-95,-96,174,176,33,-24,-64,33,33,-63,-72,-71,-94,-27,33,33,-32,-84,-85,-83,-79,-4,-5,-6,33,-3,-66,-29,-62,-69,-70,-68,-67,-38,-41,-40,-39,-28,-30,-31,-33,-87,-88,-89,-90,-86,-91,-92,-93,-81,-80,-65,-78,-77,-76,-75,-74,-73,-82,-8,-7,33,-12,-11,-10,-9,]),'DO':([0,2,3,5,6,7,8,9,10,15,16,41,42,61,62,69,80,84,91,92,102,122,125,147,152,155,156,161,162,169,170,177,178,184,186,191,201,205,209,210,229,237,242,264,266,267,268,269,270,275,276,282,283,284,285,286,287,294,295,296,297,299,300,301,302,304,305,321,322,323,324,325,326,327,328,330,333,334,335,336,337,338,],[34,34,-14,-16,-17,-18,-19,-20,-21,-25,-26,-13,-15,-22,-23,-140,34,34,-95,-96,34,-24,-64,34,34,-63,-72,-71,-94,-27,34,34,-32,-84,-85,-83,-79,-4,-5,-6,34,-3,-66,-29,-62,-69,-70,-68,-67,-38,-41,-40,-39,-28,-30,-31,-33,-87,-88,-89,-90,-86,-91,-92,-93,-81,-80,-65,-78,-77,-76,-75,-74,-73,-82,-8,-7,34,-12,-11,-10,-9,]),'IF':([0,2,3,5,6,7,8,9,10,15,16,41,42,61,62,69,80,84,91,92,102,122,125,147,152,155,156,161,162,169,170,177,178,184,186,191,201,205,209,210,229,237,242,264,266,267,268,269,270,275,276,282,283,284,285,286,287,294,295,296,297,299,300,301,302,304,305,321,322,323,324,325,326,327,328,330,333,334,335,336,337,338,],[35,35,-14,-16,-17,-18,-19,-20,-21,-25,-26,-13,-15,-22,-23,-140,35,35,-95,-96,35,-24,-64,35,35,-63,-72,-71,-94,-27,35,35,-32,-84,-85,-83,-79,-4,-5,-6,35,-3,-66,-29,-62,-69,-70,-68,-67,-38,-41,-40,-39,-28,-30,-31,-33,-87,-88,-89,-90,-86,-91,-92,-93,-81,-80,-65,-78,-77,-76,-75,-74,-73,-82,-8,-7,35,-12,-11,-10,-9,]),'INTEGER':([0,2,3,5,6,7,8,9,10,15,16,18,20,21,30,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,66,67,69,70,71,72,74,80,84,91,92,98,99,102,122,123,124,125,127,129,131,140,142,147,152,153,154,155,156,160,161,162,169,170,177,178,180,182,183,184,186,189,191,192,193,195,196,197,200,201,205,209,210,229,231,237,242,247,256,264,266,267,268,269,270,275,276,282,283,284,285,286,287,290,294,295,296,297,299,300,301,302,304,305,320,321,322,323,324,325,326,327,328,330,332,333,334,335,336,337,338,],[29,29,-14,-16,-17,-18,-19,-20,-21,-25,-26,29,29,29,29,-13,-15,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-22,-23,29,29,-140,29,29,29,29,29,29,-95,-96,29,29,29,-24,179,29,-64,29,29,29,29,29,29,29,211,29,-63,29,29,-71,-94,-27,29,29,-32,29,29,29,-84,29,29,-83,29,29,29,29,29,29,-79,-4,-5,-6,29,29,-3,-66,29,29,-29,-62,29,-70,-68,-67,-38,-41,-40,-39,-28,-30,-31,-33,29,-87,-88,-89,-90,-86,-91,-92,29,-81,-80,29,-65,-78,-77,-76,-75,-74,-73,-82,-8,29,-7,29,-12,-11,-10,-9,]),'DOUBLE':([0,2,3,5,6,7,8,9,10,15,16,18,20,21,30,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,66,67,69,70,71,72,74,80,84,91,92,98,99,102,122,124,125,127,129,131,140,142,147,152,154,155,156,160,161,162,169,170,177,178,180,182,183,184,186,189,191,192,193,195,196,197,200,201,205,209,210,229,231,237,242,247,256,264,266,267,268,269,270,275,276,282,283,284,285,286,287,290,294,295,296,297,299,300,301,302,304,305,320,321,322,323,324,325,326,327,328,330,332,333,334,335,336,337,338,],[36,36,-14,-16,-17,-18,-19,-20,-21,-25,-26,36,36,36,36,-13,-15,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-22,-23,36,36,-140,36,36,36,36,36,36,-95,-96,36,36,36,-24,36,-64,36,36,36,36,36,36,36,36,-63,36,36,-71,-94,-27,36,36,-32,36,36,36,-84,36,36,-83,36,36,36,36,36,36,-79,-4,-5,-6,36,36,-3,-66,36,36,-29,-62,36,-70,-68,-67,-38,-41,-40,-39,-28,-30,-31,-33,36,-87,-88,-89,-90,-86,-91,-92,36,-81,-80,36,-65,-78,-77,-76,-75,-74,-73,-82,-8,36,-7,36,-12,-11,-10,-9,]),'BOOL':([0,2,3,5,6,7,8,9,10,15,16,18,20,21,30,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,66,67,69,70,71,72,74,80,84,91,92,98,99,102,122,124,125,127,129,131,140,142,147,152,154,155,156,160,161,162,169,170,177,178,180,182,183,184,186,189,191,192,193,195,196,197,200,201,205,209,210,229,231,237,242,247,256,264,266,267,268,269,270,275,276,282,283,284,285,286,287,290,294,295,296,297,299,300,301,302,304,305,320,321,322,323,324,325,326,327,328,330,332,333,334,335,336,337,338,],[37,37,-14,-16,-17,-18,-19,-20,-21,-25,-26,37,37,37,37,-13,-15,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-22,-23,37,37,-140,37,37,37,37,37,37,-95,-96,37,37,37,-24,37,-64,37,37,37,37,37,37,37,37,-63,37,37,-71,-94,-27,37,37,-32,37,37,37,-84,37,37,-83,37,37,37,37,37,37,-79,-4,-5,-6,37,37,-3,-66,37,37,-29,-62,37,-70,-68,-67,-38,-41,-40,-39,-28,-30,-31,-33,37,-87,-88,-89,-90,-86,-91,-92,37,-81,-80,37,-65,-78,-77,-76,-75,-74,-73,-82,-8,37,-7,37,-12,-11,-10,-9,]),'STRING':([0,2,3,5,6,7,8,9,10,15,16,18,20,21,30,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,66,67,69,70,71,72,74,80,84,91,92,98,99,102,122,124,125,127,129,131,140,142,147,152,154,155,156,160,161,162,169,170,177,178,180,182,183,184,186,189,191,192,193,195,196,197,200,201,205,209,210,229,231,237,242,247,256,264,266,267,268,269,270,275,276,282,283,284,285,286,287,290,294,295,296,297,299,300,301,302,304,305,320,321,322,323,324,325,326,327,328,330,332,333,334,335,336,337,338,],[38,38,-14,-16,-17,-18,-19,-20,-21,-25,-26,38,38,38,38,-13,-15,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-22,-23,38,38,-140,38,38,38,38,38,38,-95,-96,38,38,38,-24,38,-64,38,38,38,38,38,38,38,38,-63,38,38,-71,-94,-27,38,38,-32,38,38,38,-84,38,38,-83,38,38,38,38,38,38,-79,-4,-5,-6,38,38,-3,-66,38,38,-29,-62,38,-70,-68,-67,-38,-41,-40,-39,-28,-30,-31,-33,38,-87,-88,-89,-90,-86,-91,-92,38,-81,-80,38,-65,-78,-77,-76,-75,-74,-73,-82,-8,38,-7,38,-12,-11,-10,-9,]),'VOID':([0,2,3,5,6,7,8,9,10,15,16,18,20,21,30,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,66,67,69,70,71,72,74,80,84,91,92,98,99,102,122,124,125,127,129,131,140,142,147,152,154,155,156,160,161,162,169,170,177,178,180,182,183,184,186,189,191,192,193,195,196,197,200,201,205,209,210,229,231,237,242,247,256,264,266,267,268,269,270,275,276,282,283,284,285,286,287,290,294,295,296,297,299,300,301,302,304,305,320,321,322,323,324,325,326,327,328,330,332,333,334,335,336,337,338,],[39,39,-14,-16,-17,-18,-19,-20,-21,-25,-26,39,39,39,39,-13,-15,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-22,-23,39,39,-140,39,39,39,39,39,39,-95,-96,39,39,39,-24,39,-64,39,39,39,39,39,39,39,39,-63,39,39,-71,-94,-27,39,39,-32,39,39,39,-84,39,39,-83,39,39,39,39,39,39,-79,-4,-5,-6,39,39,-3,-66,39,39,-29,-62,39,-70,-68,-67,-38,-41,-40,-39,-28,-30,-31,-33,39,-87,-88,-89,-90,-86,-91,-92,39,-81,-80,39,-65,-78,-77,-76,-75,-74,-73,-82,-8,39,-7,39,-12,-11,-10,-9,]),'DATATYPE':([0,2,3,5,6,7,8,9,10,15,16,18,19,20,21,30,31,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,66,67,69,70,71,72,74,80,84,91,92,98,99,102,122,124,125,127,129,131,140,142,147,151,152,154,155,156,160,161,162,166,167,168,169,170,177,178,180,182,183,184,186,189,191,192,193,195,196,197,200,201,205,207,209,210,219,220,221,222,229,231,237,242,247,256,264,266,267,268,269,270,275,276,277,281,282,283,284,285,286,287,290,294,295,296,297,299,300,301,302,304,305,307,309,314,320,321,322,323,324,325,326,327,328,330,332,333,334,335,336,337,338,],[40,40,-14,-16,-17,-18,-19,-20,-21,-25,-26,40,40,40,40,40,40,-13,-15,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-22,-23,40,40,-140,40,40,40,40,40,40,-95,-96,40,40,40,-24,40,-64,40,40,40,40,40,40,40,40,40,-63,40,40,-71,-94,226,226,226,-27,40,40,-32,40,40,40,-84,40,40,-83,40,40,40,40,40,40,-79,-4,263,-5,40,263,263,263,263,40,40,-3,-66,40,40,-29,-62,40,-70,-68,-67,-38,226,226,226,-40,-39,-28,-30,-31,-33,40,-87,-88,-89,-90,-86,-91,-92,40,-81,-80,263,263,263,40,-65,-78,-77,-76,-75,-74,-73,-82,-8,40,-7,40,-12,-11,-10,-9,]),'RBRACE':([3,5,6,7,8,9,10,15,16,22,23,24,25,26,27,29,36,37,38,39,41,42,61,62,64,69,76,79,85,86,91,92,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,125,127,129,131,135,140,141,147,151,155,156,161,162,169,177,178,180,182,183,184,185,186,187,188,189,190,191,194,195,198,201,202,204,205,206,209,210,215,216,217,223,225,227,228,229,237,239,240,241,242,243,244,249,254,255,259,264,265,266,267,268,269,270,275,276,278,279,280,282,283,284,285,286,287,294,295,296,297,299,300,301,302,304,305,318,319,320,321,322,323,324,325,326,327,328,330,332,333,335,336,337,338,339,340,342,343,],[-14,-16,-17,-18,-19,-20,-21,-25,-26,-118,-119,-120,-121,-122,-123,-125,-126,-127,-128,-129,-13,-15,-22,-23,-142,-140,-117,-142,-111,-114,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-112,-113,-115,-116,-24,-64,-58,-58,-58,-59,-58,-124,205,209,-63,-72,-71,-94,-27,237,-32,-58,-58,-58,-84,245,-85,246,248,-58,250,-83,-55,-57,-56,-79,258,-139,-4,-137,-5,-6,-135,-136,-134,275,-42,282,283,237,-3,-131,289,291,-66,292,293,298,-61,-60,-138,-29,-130,-62,-69,-70,-68,-67,-38,-41,-46,-45,-47,-40,-39,-28,-30,-31,-33,-87,-88,-89,-90,-86,-91,-92,-93,-81,-80,-44,-43,-58,-65,-78,-77,-76,-75,-74,-73,-82,-8,-58,-7,-12,-11,-10,-9,342,343,-133,-132,]),'SEMI':([4,11,12,14,17,22,23,24,25,26,27,29,30,36,37,38,39,63,64,65,76,79,85,86,87,89,90,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,127,132,138,139,141,181,194,195,198,199,204,206,208,212,213,214,215,216,217,218,230,231,232,233,234,235,239,245,246,247,250,251,252,257,258,259,265,289,290,291,292,293,298,303,341,342,343,],[42,61,62,-142,-117,-118,-119,-120,-121,-122,-123,-125,91,-126,-127,-128,-129,122,-142,125,-117,-142,-111,-114,155,161,162,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-112,-113,-115,-116,184,191,-139,201,-124,242,-55,-57,-56,-138,-139,-137,264,266,268,269,-135,-136,-134,270,-34,-37,-36,-35,284,285,-131,294,295,296,299,300,301,304,305,-138,-130,321,323,324,325,326,327,328,-142,-133,-132,]),'PLUS':([4,14,17,22,23,24,25,26,27,29,36,37,38,39,64,75,76,79,85,86,90,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,128,132,135,137,138,139,141,171,173,181,194,195,198,199,203,204,206,212,214,215,216,217,218,239,251,253,254,255,257,259,265,303,341,342,343,],[43,-142,-117,-118,-119,-120,-121,-122,-123,-125,-126,-127,-128,-129,-142,43,-117,-142,-111,-114,43,-97,-98,-99,-100,-101,-102,-103,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-139,43,-124,43,43,43,-55,-57,-56,-138,43,-139,-137,43,43,-135,-136,-134,43,-131,43,43,43,43,43,-138,-130,43,-142,-133,-132,]),'MUL':([4,14,17,22,23,24,25,26,27,29,36,37,38,39,64,75,76,79,85,86,90,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,128,132,135,137,138,139,141,171,173,181,194,195,198,199,203,204,206,212,214,215,216,217,218,239,251,253,254,255,257,259,265,303,341,342,343,],[45,-142,-117,-118,-119,-120,-121,-122,-123,-125,-126,-127,-128,-129,-142,45,-117,-142,-111,-114,45,45,45,-99,-100,-101,-102,-103,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-139,45,-124,45,45,45,-55,-57,-56,-138,45,-139,-137,45,45,-135,-136,-134,45,-131,45,45,45,45,45,-138,-130,45,-142,-133,-132,]),'DIVIDE':([4,14,17,22,23,24,25,26,27,29,36,37,38,39,64,75,76,79,85,86,90,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,128,132,135,137,138,139,141,171,173,181,194,195,198,199,203,204,206,212,214,215,216,217,218,239,251,253,254,255,257,259,265,303,341,342,343,],[46,-142,-117,-118,-119,-120,-121,-122,-123,-125,-126,-127,-128,-129,-142,46,-117,-142,-111,-114,46,46,46,-99,-100,-101,-102,-103,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-139,46,-124,46,46,46,-55,-57,-56,-138,46,-139,-137,46,46,-135,-136,-134,46,-131,46,46,46,46,46,-138,-130,46,-142,-133,-132,]),'INTDIVIDE':([4,14,17,22,23,24,25,26,27,29,36,37,38,39,64,75,76,79,85,86,90,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,128,132,135,137,138,139,141,171,173,181,194,195,198,199,203,204,206,212,214,215,216,217,218,239,251,253,254,255,257,259,265,303,341,342,343,],[47,-142,-117,-118,-119,-120,-121,-122,-123,-125,-126,-127,-128,-129,-142,47,-117,-142,-111,-114,47,47,47,-99,-100,-101,-102,-103,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-139,47,-124,47,47,47,-55,-57,-56,-138,47,-139,-137,47,47,-135,-136,-134,47,-131,47,47,47,47,47,-138,-130,47,-142,-133,-132,]),'MODULO':([4,14,17,22,23,24,25,26,27,29,36,37,38,39,64,75,76,79,85,86,90,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,128,132,135,137,138,139,141,171,173,181,194,195,198,199,203,204,206,212,214,215,216,217,218,239,251,253,254,255,257,259,265,303,341,342,343,],[48,-142,-117,-118,-119,-120,-121,-122,-123,-125,-126,-127,-128,-129,-142,48,-117,-142,-111,-114,48,48,48,-99,-100,-101,-102,-103,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-139,48,-124,48,48,48,-55,-57,-56,-138,48,-139,-137,48,48,-135,-136,-134,48,-131,48,48,48,48,48,-138,-130,48,-142,-133,-132,]),'POW':([4,14,17,22,23,24,25,26,27,29,36,37,38,39,64,75,76,79,85,86,90,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,128,132,135,137,138,139,141,171,173,181,194,195,198,199,203,204,206,212,214,215,216,217,218,239,251,253,254,255,257,259,265,303,341,342,343,],[49,-142,-117,-118,-119,-120,-121,-122,-123,-125,-126,-127,-128,-129,-142,49,-117,-142,-111,-114,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-139,49,-124,49,49,49,-55,-57,-56,-138,49,-139,-137,49,49,-135,-136,-134,49,-131,49,49,49,49,49,-138,-130,49,-142,-133,-132,]),'LE':([4,14,17,22,23,24,25,26,27,29,36,37,38,39,64,75,76,79,85,86,90,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,128,132,135,137,138,139,141,171,173,181,194,195,198,199,203,204,206,212,214,215,216,217,218,239,251,253,254,255,257,259,265,303,341,342,343,],[50,-142,-117,-118,-119,-120,-121,-122,-123,-125,-126,-127,-128,-129,-142,50,-117,-142,-111,-114,50,-97,-98,-99,-100,-101,-102,-103,None,None,None,None,50,50,50,50,50,50,50,50,50,50,50,-139,50,-124,50,50,50,-55,-57,-56,-138,50,-139,-137,50,50,-135,-136,-134,50,-131,50,50,50,50,50,-138,-130,50,-142,-133,-132,]),'GE':([4,14,17,22,23,24,25,26,27,29,36,37,38,39,64,75,76,79,85,86,90,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,128,132,135,137,138,139,141,171,173,181,194,195,198,199,203,204,206,212,214,215,216,217,218,239,251,253,254,255,257,259,265,303,341,342,343,],[51,-142,-117,-118,-119,-120,-121,-122,-123,-125,-126,-127,-128,-129,-142,51,-117,-142,-111,-114,51,-97,-98,-99,-100,-101,-102,-103,None,None,None,None,51,51,51,51,51,51,51,51,51,51,51,-139,51,-124,51,51,51,-55,-57,-56,-138,51,-139,-137,51,51,-135,-136,-134,51,-131,51,51,51,51,51,-138,-130,51,-142,-133,-132,]),'LT':([4,14,17,22,23,24,25,26,27,29,36,37,38,39,64,75,76,79,85,86,90,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,128,132,135,137,138,139,141,171,173,181,194,195,198,199,203,204,206,212,214,215,216,217,218,239,251,253,254,255,257,259,265,303,341,342,343,],[52,-142,-117,-118,-119,-120,-121,-122,-123,-125,-126,-127,-128,-129,-142,52,-117,-142,-111,-114,52,-97,-98,-99,-100,-101,-102,-103,None,None,None,None,52,52,52,52,52,52,52,52,52,52,52,-139,52,-124,52,52,52,-55,-57,-56,-138,52,-139,-137,52,52,-135,-136,-134,52,-131,52,52,52,52,52,-138,-130,52,-142,-133,-132,]),'GT':([4,14,17,22,23,24,25,26,27,29,36,37,38,39,64,75,76,79,85,86,90,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,128,132,135,137,138,139,141,171,173,181,194,195,198,199,203,204,206,212,214,215,216,217,218,239,251,253,254,255,257,259,265,303,341,342,343,],[53,-142,-117,-118,-119,-120,-121,-122,-123,-125,-126,-127,-128,-129,-142,53,-117,-142,-111,-114,53,-97,-98,-99,-100,-101,-102,-103,None,None,None,None,53,53,53,53,53,53,53,53,53,53,53,-139,53,-124,53,53,53,-55,-57,-56,-138,53,-139,-137,53,53,-135,-136,-134,53,-131,53,53,53,53,53,-138,-130,53,-142,-133,-132,]),'EQ':([4,14,17,22,23,24,25,26,27,29,36,37,38,39,64,75,76,79,85,86,90,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,128,132,135,137,138,139,141,171,173,181,194,195,198,199,203,204,206,212,214,215,216,217,218,239,251,253,254,255,257,259,265,303,341,342,343,],[54,-142,-117,-118,-119,-120,-121,-122,-123,-125,-126,-127,-128,-129,-142,54,-117,-142,-111,-114,54,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,None,None,54,54,54,54,54,54,54,54,54,-139,54,-124,54,54,54,-55,-57,-56,-138,54,-139,-137,54,54,-135,-136,-134,54,-131,54,54,54,54,54,-138,-130,54,-142,-133,-132,]),'NE':([4,14,17,22,23,24,25,26,27,29,36,37,38,39,64,75,76,79,85,86,90,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,128,132,135,137,138,139,141,171,173,181,194,195,198,199,203,204,206,212,214,215,216,217,218,239,251,253,254,255,257,259,265,303,341,342,343,],[55,-142,-117,-118,-119,-120,-121,-122,-123,-125,-126,-127,-128,-129,-142,55,-117,-142,-111,-114,55,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,None,None,55,55,55,55,55,55,55,55,55,-139,55,-124,55,55,55,-55,-57,-56,-138,55,-139,-137,55,55,-135,-136,-134,55,-131,55,55,55,55,55,-138,-130,55,-142,-133,-132,]),'LAND':([4,14,17,22,23,24,25,26,27,29,36,37,38,39,64,75,76,79,85,86,90,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,128,132,135,137,138,139,141,171,173,181,194,195,198,199,203,204,206,212,214,215,216,217,218,239,251,253,254,255,257,259,265,303,341,342,343,],[57,-142,-117,-118,-119,-120,-121,-122,-123,-125,-126,-127,-128,-129,-142,57,-117,-142,-111,-114,57,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,57,None,57,-115,-116,57,57,57,57,-139,57,-124,57,57,57,-55,-57,-56,-138,57,-139,-137,57,57,-135,-136,-134,57,-131,57,57,57,57,57,-138,-130,57,-142,-133,-132,]),'LOR':([4,14,17,22,23,24,25,26,27,29,36,37,38,39,64,75,76,79,85,86,90,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,128,132,135,137,138,139,141,171,173,181,194,195,198,199,203,204,206,212,214,215,216,217,218,239,251,253,254,255,257,259,265,303,341,342,343,],[58,-142,-117,-118,-119,-120,-121,-122,-123,-125,-126,-127,-128,-129,-142,58,-117,-142,-111,-114,58,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,58,-112,None,-115,-116,58,58,58,58,-139,58,-124,58,58,58,-55,-57,-56,-138,58,-139,-137,58,58,-135,-136,-134,58,-131,58,58,58,58,58,-138,-130,58,-142,-133,-132,]),'BAND':([4,14,17,22,23,24,25,26,27,29,36,37,38,39,64,75,76,79,85,86,90,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,128,132,135,137,138,139,141,171,173,181,194,195,198,199,203,204,206,212,214,215,216,217,218,239,251,253,254,255,257,259,265,303,341,342,343,],[59,-142,-117,-118,-119,-120,-121,-122,-123,-125,-126,-127,-128,-129,-142,59,-117,-142,-111,-114,59,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,59,59,59,None,59,59,59,59,59,-139,59,-124,59,59,59,-55,-57,-56,-138,59,-139,-137,59,59,-135,-136,-134,59,-131,59,59,59,59,59,-138,-130,59,-142,-133,-132,]),'BOR':([4,14,17,22,23,24,25,26,27,29,36,37,38,39,64,75,76,79,85,86,90,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,128,132,135,137,138,139,141,171,173,181,194,195,198,199,203,204,206,212,214,215,216,217,218,239,251,253,254,255,257,259,265,303,341,342,343,],[60,-142,-117,-118,-119,-120,-121,-122,-123,-125,-126,-127,-128,-129,-142,60,-117,-142,-111,-114,60,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,60,60,60,-115,None,60,60,60,60,-139,60,-124,60,60,60,-55,-57,-56,-138,60,-139,-137,60,60,-135,-136,-134,60,-131,60,60,60,60,60,-138,-130,60,-142,-133,-132,]),'EQUALS':([14,17,64,65,67,87,89,133,138,199,239,265,341,],[66,74,-142,124,130,154,160,193,200,256,288,312,66,]),'DOT':([14,17,76,79,341,],[68,73,143,-142,68,]),'COLON':([14,341,],[69,69,]),'LBRACKET':([14,17,19,28,40,64,65,76,77,78,79,87,92,127,144,146,151,172,182,187,210,213,241,252,341,],[-142,72,81,88,-141,-142,123,142,81,88,-142,153,81,81,153,123,81,81,81,81,81,81,81,81,-142,]),'LBRACE':([19,34,64,66,67,74,95,96,97,103,124,126,130,151,210,230,231,232,233,238,288,308,312,313,314,315,316,317,],[84,102,-142,129,131,140,166,168,170,170,180,183,189,84,84,-34,-37,-36,-35,170,320,84,332,170,84,84,84,84,]),'RPAREN':([22,23,24,25,26,27,29,36,37,38,39,64,70,71,75,76,79,85,86,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,134,135,136,141,171,172,173,194,195,198,204,206,207,215,216,217,219,220,221,222,239,254,255,259,261,262,265,271,272,273,274,306,310,311,329,331,341,342,343,],[-118,-119,-120,-121,-122,-123,-125,-126,-127,-128,-129,-142,-58,-58,141,-117,-142,-111,-114,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-112,-113,-115,-116,194,-59,198,-124,230,232,233,-55,-57,-56,-139,-137,-48,-135,-136,-134,-48,-48,-48,-48,-131,-61,-60,-138,308,-49,-130,313,315,316,317,-53,-52,-54,-51,-50,-53,-133,-132,]),'COMMA':([22,23,24,25,26,27,29,36,37,38,39,64,70,71,76,79,85,86,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,127,129,131,134,135,136,140,141,180,182,183,185,188,189,190,194,195,198,202,204,206,207,215,216,217,219,220,221,222,223,225,227,228,239,240,243,244,249,254,255,259,261,262,265,271,272,273,274,278,279,280,306,310,311,318,319,320,329,331,332,339,340,341,342,343,],[-118,-119,-120,-121,-122,-123,-125,-126,-127,-128,-129,-142,-58,-58,-117,-142,-111,-114,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-112,-113,-115,-116,-58,-58,-58,196,-59,196,-58,-124,-58,-58,-58,196,196,-58,196,-55,-57,-56,196,-139,-137,-48,-135,-136,-134,-48,-48,-48,-48,277,-42,277,277,-131,196,196,196,196,-61,-60,-138,309,-49,-130,309,309,309,309,-46,-45,-47,-53,-52,-54,-44,-43,-58,-51,-50,-58,196,196,-53,-133,-132,]),'RBRACKET':([22,23,24,25,26,27,29,36,37,38,39,64,76,79,81,85,86,88,89,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,137,141,145,179,194,195,198,203,204,206,211,215,216,217,239,259,265,342,343,],[-118,-119,-120,-121,-122,-123,-125,-126,-127,-128,-129,-142,-117,-142,148,-111,-114,158,159,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-112,-113,-115,-116,199,-124,159,239,-55,-57,-56,259,-139,-137,265,-135,-136,-134,-131,-138,-130,-133,-132,]),'ELSE':([178,237,],[238,-3,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'scope':([0,80,84,102,170,334,],[2,147,152,177,229,147,]),'statement':([0,2,80,84,102,147,152,170,177,229,334,],[3,41,3,3,3,41,41,3,41,41,3,]),'expr':([0,2,18,20,21,30,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,66,67,70,71,72,74,80,84,98,99,102,124,127,129,131,140,142,147,152,154,156,160,170,177,180,182,183,186,189,192,193,195,196,197,200,229,231,247,256,267,290,302,320,332,334,],[4,4,75,85,86,90,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,128,132,135,135,137,139,4,4,171,173,4,181,135,135,135,135,203,4,4,212,214,218,4,4,135,135,135,117,135,251,253,254,255,254,257,4,117,254,303,117,254,117,135,135,4,]),'var_declaration':([0,2,80,84,102,147,152,170,177,229,334,],[5,5,5,5,5,5,5,5,5,5,5,]),'return':([0,2,80,84,102,147,152,170,177,229,334,],[6,6,6,6,6,6,6,6,6,6,6,]),'assign':([0,2,80,84,102,147,152,170,177,229,334,],[7,7,7,7,7,7,7,7,7,7,7,]),'func_declaration':([0,2,80,84,102,147,152,170,177,229,334,],[8,8,8,8,8,8,8,8,8,8,8,]),'struct_declaration':([0,2,80,84,102,147,152,170,177,229,334,],[9,9,9,9,9,9,9,9,9,9,9,]),'while':([0,2,80,84,102,147,152,170,177,229,334,],[10,10,10,10,10,10,10,10,10,10,10,]),'goto_mark':([0,2,80,84,102,147,152,170,177,229,334,],[15,15,15,15,15,15,15,15,15,15,15,]),'if-else':([0,2,80,84,102,147,152,170,177,229,334,],[16,16,16,16,16,16,16,16,16,16,16,]),'id':([0,2,14,18,20,21,28,30,32,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,66,67,70,71,72,74,78,79,80,82,84,93,94,98,99,102,124,127,129,131,140,142,147,148,152,154,156,157,159,160,170,177,180,182,183,186,189,192,193,195,196,197,200,229,231,247,256,267,290,302,320,332,334,341,],[17,17,65,76,76,76,87,76,95,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,144,146,17,149,17,163,165,76,76,17,76,76,76,76,76,76,17,206,17,76,76,215,217,76,17,17,76,76,76,76,76,76,76,76,76,76,76,17,76,76,76,76,76,76,76,76,17,65,]),'int':([0,2,18,20,21,30,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,66,67,70,71,72,74,80,84,98,99,102,124,127,129,131,140,142,147,152,154,156,160,170,177,180,182,183,186,189,192,193,195,196,197,200,229,231,247,256,267,290,302,320,332,334,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'double':([0,2,18,20,21,30,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,66,67,70,71,72,74,80,84,98,99,102,124,127,129,131,140,142,147,152,154,156,160,170,177,180,182,183,186,189,192,193,195,196,197,200,229,231,247,256,267,290,302,320,332,334,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'bool':([0,2,18,20,21,30,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,66,67,70,71,72,74,80,84,98,99,102,124,127,129,131,140,142,147,152,154,156,160,170,177,180,182,183,186,189,192,193,195,196,197,200,229,231,247,256,267,290,302,320,332,334,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'str':([0,2,18,20,21,30,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,66,67,70,71,72,74,80,84,98,99,102,124,127,129,131,140,142,147,152,154,156,160,170,177,180,182,183,186,189,192,193,195,196,197,200,229,231,247,256,267,290,302,320,332,334,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'void':([0,2,18,20,21,30,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,66,67,70,71,72,74,80,84,98,99,102,124,127,129,131,140,142,147,152,154,156,160,170,177,180,182,183,186,189,192,193,195,196,197,200,229,231,247,256,267,290,302,320,332,334,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'datatype':([0,2,18,19,20,21,30,31,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,66,67,70,71,72,74,80,84,98,99,102,124,127,129,131,140,142,147,151,152,154,156,160,170,177,180,182,183,186,189,192,193,195,196,197,200,210,229,231,247,256,267,290,302,320,332,334,],[28,28,78,82,78,78,78,93,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,28,28,78,78,28,78,78,78,78,78,78,28,82,28,78,78,78,28,28,78,78,78,78,78,78,78,78,78,78,78,82,28,78,78,78,78,78,78,78,78,28,]),'body_block':([19,34,151,210,308,314,315,316,317,],[83,101,83,83,330,335,336,337,338,]),'conditional':([33,35,150,174,175,176,],[97,103,208,234,235,236,]),'basic_block':([34,97,103,238,313,],[100,169,178,287,333,]),'args':([70,71,127,129,131,140,180,182,183,189,320,332,],[134,136,185,188,190,202,240,243,244,249,339,340,]),'struct_params':([166,167,168,],[223,227,228,]),'struct_param':([166,167,168,276,277,281,],[225,225,225,318,319,318,]),'params':([207,219,220,221,222,],[261,271,272,273,274,]),'param':([207,219,220,221,222,307,309,314,],[262,262,262,262,262,329,331,329,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> <empty>','program',0,'p_program','doh_parser.py',38),
  ('program -> scope','program',1,'p_program','doh_parser.py',39),
  ('basic_block -> LBRACE scope RBRACE','basic_block',3,'p_body_block','doh_parser.py',47),
  ('body_block -> error scope RBRACE','body_block',3,'p_body_block_error','doh_parser.py',53),
  ('body_block -> LBRACE error RBRACE','body_block',3,'p_body_block_error','doh_parser.py',54),
  ('body_block -> LBRACE scope error','body_block',3,'p_body_block_error','doh_parser.py',55),
  ('func_declaration -> FUNCTION datatype id LPAREN params RPAREN basic_block','func_declaration',7,'p_func_declaration','doh_parser.py',66),
  ('func_declaration -> error datatype id LPAREN params RPAREN body_block','func_declaration',7,'p_func_declaration_error','doh_parser.py',71),
  ('func_declaration -> FUNCTION error id LPAREN params RPAREN body_block','func_declaration',7,'p_func_declaration_error','doh_parser.py',72),
  ('func_declaration -> FUNCTION datatype error LPAREN params RPAREN body_block','func_declaration',7,'p_func_declaration_error','doh_parser.py',73),
  ('func_declaration -> FUNCTION datatype id error params RPAREN body_block','func_declaration',7,'p_func_declaration_error','doh_parser.py',74),
  ('func_declaration -> FUNCTION datatype id LPAREN params error body_block','func_declaration',7,'p_func_declaration_error','doh_parser.py',75),
  ('scope -> scope statement','scope',2,'p_scope','doh_parser.py',92),
  ('scope -> statement','scope',1,'p_scope','doh_parser.py',93),
  ('statement -> expr SEMI','statement',2,'p_stmt','doh_parser.py',103),
  ('statement -> var_declaration','statement',1,'p_stmt','doh_parser.py',104),
  ('statement -> return','statement',1,'p_stmt','doh_parser.py',105),
  ('statement -> assign','statement',1,'p_stmt','doh_parser.py',106),
  ('statement -> func_declaration','statement',1,'p_stmt','doh_parser.py',107),
  ('statement -> struct_declaration','statement',1,'p_stmt','doh_parser.py',108),
  ('statement -> while','statement',1,'p_stmt','doh_parser.py',109),
  ('statement -> BREAK SEMI','statement',2,'p_stmt','doh_parser.py',110),
  ('statement -> CONTINUE SEMI','statement',2,'p_stmt','doh_parser.py',111),
  ('statement -> GOTO ID SEMI','statement',3,'p_stmt','doh_parser.py',112),
  ('statement -> goto_mark','statement',1,'p_stmt','doh_parser.py',113),
  ('statement -> if-else','statement',1,'p_stmt','doh_parser.py',114),
  ('while -> WHILE conditional basic_block','while',3,'p_loops','doh_parser.py',129),
  ('while -> DO basic_block WHILE conditional SEMI','while',5,'p_loops','doh_parser.py',130),
  ('while -> error body_block WHILE conditional SEMI','while',5,'p_loop_dowhile_error','doh_parser.py',140),
  ('while -> DO body_block error conditional SEMI','while',5,'p_loop_dowhile_error','doh_parser.py',141),
  ('while -> DO body_block WHILE conditional error','while',5,'p_loop_dowhile_error','doh_parser.py',142),
  ('if-else -> IF conditional basic_block','if-else',3,'p_if_else','doh_parser.py',153),
  ('if-else -> IF conditional basic_block ELSE basic_block','if-else',5,'p_if_else','doh_parser.py',154),
  ('conditional -> LPAREN expr RPAREN','conditional',3,'p_conditional','doh_parser.py',163),
  ('conditional -> error expr RPAREN','conditional',3,'p_conditional_errors','doh_parser.py',169),
  ('conditional -> LPAREN error RPAREN','conditional',3,'p_conditional_errors','doh_parser.py',170),
  ('conditional -> LPAREN expr error','conditional',3,'p_conditional_errors','doh_parser.py',171),
  ('struct_declaration -> STRUCTURE id LBRACE struct_params RBRACE','struct_declaration',5,'p_struct_declaration','doh_parser.py',186),
  ('struct_declaration -> STRUCTURE error LBRACE struct_params RBRACE','struct_declaration',5,'p_struct_declaration_error','doh_parser.py',192),
  ('struct_declaration -> STRUCTURE id error struct_params RBRACE','struct_declaration',5,'p_struct_declaration_error','doh_parser.py',193),
  ('struct_declaration -> STRUCTURE id LBRACE struct_params error','struct_declaration',5,'p_struct_declaration_error','doh_parser.py',194),
  ('struct_params -> struct_param','struct_params',1,'p_struct_params','doh_parser.py',207),
  ('struct_params -> struct_params COMMA struct_param','struct_params',3,'p_struct_params','doh_parser.py',208),
  ('struct_params -> struct_params error struct_param','struct_params',3,'p_struct_params_error','doh_parser.py',217),
  ('struct_param -> DATATYPE ID','struct_param',2,'p_struct_param','doh_parser.py',222),
  ('struct_param -> error ID','struct_param',2,'p_struct_param_error','doh_parser.py',227),
  ('struct_param -> DATATYPE error','struct_param',2,'p_struct_param_error','doh_parser.py',228),
  ('params -> <empty>','params',0,'p_params','doh_parser.py',236),
  ('params -> param','params',1,'p_params','doh_parser.py',237),
  ('params -> params COMMA param','params',3,'p_params','doh_parser.py',238),
  ('params -> params error param','params',3,'p_params_error','doh_parser.py',248),
  ('param -> DATATYPE ID','param',2,'p_param_declaration','doh_parser.py',253),
  ('param -> error ID','param',2,'p_param_declaration_error','doh_parser.py',257),
  ('param -> DATATYPE error','param',2,'p_param_declaration_error','doh_parser.py',258),
  ('expr -> id LPAREN args RPAREN','expr',4,'p_func_call','doh_parser.py',265),
  ('expr -> id error args RPAREN','expr',4,'p_func_call_error','doh_parser.py',269),
  ('expr -> id LPAREN args error','expr',4,'p_func_call_error','doh_parser.py',270),
  ('args -> <empty>','args',0,'p_arguments','doh_parser.py',277),
  ('args -> expr','args',1,'p_arguments','doh_parser.py',278),
  ('args -> args COMMA expr','args',3,'p_arguments','doh_parser.py',279),
  ('args -> args error expr','args',3,'p_arguments_error','doh_parser.py',289),
  ('var_declaration -> datatype id EQUALS expr SEMI','var_declaration',5,'p_var_declaration','doh_parser.py',297),
  ('var_declaration -> datatype id SEMI','var_declaration',3,'p_var_declaration','doh_parser.py',298),
  ('var_declaration -> ID id SEMI','var_declaration',3,'p_struct_var_declaration','doh_parser.py',307),
  ('var_declaration -> ID id EQUALS LBRACE args RBRACE SEMI','var_declaration',7,'p_struct_var_declaration','doh_parser.py',308),
  ('var_declaration -> ID id EQUALS expr SEMI','var_declaration',5,'p_struct_var_declaration','doh_parser.py',309),
  ('var_declaration -> datatype error EQUALS expr SEMI','var_declaration',5,'p_var_declaration_error_1','doh_parser.py',320),
  ('var_declaration -> datatype id error expr SEMI','var_declaration',5,'p_var_declaration_error_1','doh_parser.py',321),
  ('var_declaration -> datatype id EQUALS expr error','var_declaration',5,'p_var_declaration_error_1','doh_parser.py',322),
  ('var_declaration -> datatype id EQUALS error SEMI','var_declaration',5,'p_var_declaration_error_1','doh_parser.py',323),
  ('var_declaration -> datatype error SEMI','var_declaration',3,'p_var_declaration_error_2','doh_parser.py',336),
  ('var_declaration -> datatype id error','var_declaration',3,'p_var_declaration_error_2','doh_parser.py',337),
  ('var_declaration -> ID error EQUALS LBRACE args RBRACE SEMI','var_declaration',7,'p_var_declaration_error_3','doh_parser.py',346),
  ('var_declaration -> ID id error LBRACE args RBRACE SEMI','var_declaration',7,'p_var_declaration_error_3','doh_parser.py',347),
  ('var_declaration -> ID id EQUALS error args RBRACE SEMI','var_declaration',7,'p_var_declaration_error_3','doh_parser.py',348),
  ('var_declaration -> ID id EQUALS LBRACE error RBRACE SEMI','var_declaration',7,'p_var_declaration_error_3','doh_parser.py',349),
  ('var_declaration -> ID id EQUALS LBRACE args error SEMI','var_declaration',7,'p_var_declaration_error_3','doh_parser.py',350),
  ('var_declaration -> ID id EQUALS LBRACE args RBRACE error','var_declaration',7,'p_var_declaration_error_3','doh_parser.py',351),
  ('assign -> id EQUALS expr SEMI','assign',4,'p_var_assign','doh_parser.py',367),
  ('assign -> id EQUALS LBRACE args RBRACE SEMI','assign',6,'p_struct_assign','doh_parser.py',374),
  ('assign -> id DOT ID EQUALS expr SEMI','assign',6,'p_struct_assign','doh_parser.py',375),
  ('assign -> id LBRACKET expr RBRACKET EQUALS expr SEMI','assign',7,'p_array_assign','doh_parser.py',385),
  ('assign -> ID error expr SEMI','assign',4,'p_assign_error_1','doh_parser.py',390),
  ('assign -> ID EQUALS error SEMI','assign',4,'p_assign_error_1','doh_parser.py',391),
  ('assign -> ID EQUALS expr error','assign',4,'p_assign_error_1','doh_parser.py',392),
  ('assign -> ID error LBRACE args RBRACE SEMI','assign',6,'p_assign_error_2','doh_parser.py',403),
  ('assign -> ID EQUALS error args RBRACE SEMI','assign',6,'p_assign_error_2','doh_parser.py',404),
  ('assign -> ID EQUALS LBRACE error RBRACE SEMI','assign',6,'p_assign_error_2','doh_parser.py',405),
  ('assign -> ID EQUALS LBRACE args error SEMI','assign',6,'p_assign_error_2','doh_parser.py',406),
  ('assign -> ID EQUALS LBRACE args RBRACE error','assign',6,'p_assign_error_2','doh_parser.py',407),
  ('assign -> ID DOT ID error expr SEMI','assign',6,'p_assign_error_3','doh_parser.py',421),
  ('assign -> ID DOT ID EQUALS error SEMI','assign',6,'p_assign_error_3','doh_parser.py',422),
  ('assign -> ID DOT ID EQUALS expr error','assign',6,'p_assign_error_3','doh_parser.py',423),
  ('return -> RETURN expr SEMI','return',3,'p_return','doh_parser.py',434),
  ('return -> RETURN SEMI','return',2,'p_return','doh_parser.py',435),
  ('return -> RETURN error','return',2,'p_return_error','doh_parser.py',443),
  ('expr -> expr PLUS expr','expr',3,'p_math_expressions','doh_parser.py',448),
  ('expr -> expr MINUS expr','expr',3,'p_math_expressions','doh_parser.py',449),
  ('expr -> expr MUL expr','expr',3,'p_math_expressions','doh_parser.py',450),
  ('expr -> expr DIVIDE expr','expr',3,'p_math_expressions','doh_parser.py',451),
  ('expr -> expr INTDIVIDE expr','expr',3,'p_math_expressions','doh_parser.py',452),
  ('expr -> expr MODULO expr','expr',3,'p_math_expressions','doh_parser.py',453),
  ('expr -> expr POW expr','expr',3,'p_math_expressions','doh_parser.py',454),
  ('expr -> expr LE expr','expr',3,'p_conditionals','doh_parser.py',475),
  ('expr -> expr GE expr','expr',3,'p_conditionals','doh_parser.py',476),
  ('expr -> expr LT expr','expr',3,'p_conditionals','doh_parser.py',477),
  ('expr -> expr GT expr','expr',3,'p_conditionals','doh_parser.py',478),
  ('expr -> expr EQ expr','expr',3,'p_conditionals','doh_parser.py',479),
  ('expr -> expr NE expr','expr',3,'p_conditionals','doh_parser.py',480),
  ('expr -> expr error expr','expr',3,'p_expr_error','doh_parser.py',495),
  ('expr -> MINUS expr','expr',2,'p_logical_operation','doh_parser.py',499),
  ('expr -> expr LAND expr','expr',3,'p_logical_operation','doh_parser.py',500),
  ('expr -> expr LOR expr','expr',3,'p_logical_operation','doh_parser.py',501),
  ('expr -> LNOT expr','expr',2,'p_logical_operation','doh_parser.py',502),
  ('expr -> expr BAND expr','expr',3,'p_bitwise_operation','doh_parser.py',515),
  ('expr -> expr BOR expr','expr',3,'p_bitwise_operation','doh_parser.py',516),
  ('expr -> id','expr',1,'p_literals','doh_parser.py',525),
  ('expr -> int','expr',1,'p_literals','doh_parser.py',526),
  ('expr -> double','expr',1,'p_literals','doh_parser.py',527),
  ('expr -> bool','expr',1,'p_literals','doh_parser.py',528),
  ('expr -> str','expr',1,'p_literals','doh_parser.py',529),
  ('expr -> void','expr',1,'p_literals','doh_parser.py',530),
  ('expr -> NULL','expr',1,'p_literals','doh_parser.py',531),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_literals','doh_parser.py',532),
  ('int -> INTEGER','int',1,'p_const_int','doh_parser.py',540),
  ('double -> DOUBLE','double',1,'p_const_double','doh_parser.py',545),
  ('bool -> BOOL','bool',1,'p_const_bool','doh_parser.py',550),
  ('str -> STRING','str',1,'p_const_string','doh_parser.py',555),
  ('void -> VOID','void',1,'p_void','doh_parser.py',560),
  ('expr -> datatype id LBRACKET INTEGER RBRACKET','expr',5,'p_array_init','doh_parser.py',566),
  ('expr -> ID id LBRACKET INTEGER RBRACKET','expr',5,'p_array_init','doh_parser.py',567),
  ('expr -> datatype id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE','expr',9,'p_array_init','doh_parser.py',568),
  ('expr -> ID id LBRACKET INTEGER RBRACKET EQUALS LBRACE args RBRACE','expr',9,'p_array_init','doh_parser.py',569),
  ('expr -> datatype error RBRACKET id','expr',4,'p_array_init_error_1','doh_parser.py',584),
  ('expr -> datatype LBRACKET error id','expr',4,'p_array_init_error_1','doh_parser.py',585),
  ('expr -> datatype LBRACKET RBRACKET error','expr',4,'p_array_init_error_1','doh_parser.py',586),
  ('expr -> error LBRACKET RBRACKET id','expr',4,'p_array_init_error_1','doh_parser.py',587),
  ('expr -> id LBRACKET expr RBRACKET','expr',4,'p_index','doh_parser.py',599),
  ('expr -> id DOT ID','expr',3,'p_struct_field','doh_parser.py',604),
  ('goto_mark -> ID COLON','goto_mark',2,'p_goto_mark','doh_parser.py',609),
  ('datatype -> DATATYPE','datatype',1,'p_datatype','doh_parser.py',614),
  ('id -> ID','id',1,'p_id','doh_parser.py',619),
]
