
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftCOMMArightEQUALSnonassocLORnonassocLANDnonassocEQNEnonassocLEGELTGTleftPLUSMINUSleftMULDIVIDEINTDIVIDEMODULOrightPOWrightUMINUSLNOTleftLBRACERBRACELPARENRPARENLBRACKETRBRACKETARRAY BOOLEAN BREAK COLON COMMA COMMENT CONTINUE DATATYPE DIVIDE DO DOUBLE ELSE ELSEIF EQ EQUALS ERROR FUNCTION GE GOTO GT ID IF INTDIVIDE INTEGER LAND LBRACE LBRACKET LE LNOT LOR LPAREN LT MINUS MODULO MUL NE NULL PERIOD PLUS POW RBRACE RBRACKET RETURN RPAREN SEMI STRING STRUCTURE WHILEprogram :\n               | basic_blockbasic_block : stmt_listfunc_declaration : FUNCTION datatype id LPAREN func_params RPAREN LBRACE basic_block RBRACEstmt_list : stmt_list statement\n                 | statementstatement : expr SEMI\n                 | RETURN expr SEMI\n                 | assign\n                 | func_declaration\n                 | struct_declarationstruct_declaration : STRUCTURE id LBRACE func_params RBRACEfunc_params :\n                   | func_param\n                   | func_params COMMA func_paramfunc_param : DATATYPE IDexpr : ID LPAREN args RPARENargs :\n            | expr\n            | args COMMA exprassign : ID EQUALS expr SEMIexpr : expr PLUS expr\n            | expr MINUS expr\n            | expr MUL expr\n            | expr DIVIDE expr\n            | expr INTDIVIDE expr\n            | expr MODULO expr\n            | expr POW exprexpr : expr LE expr\n            | expr GE expr\n            | expr LT expr\n            | expr GT expr\n            | expr EQ expr\n            | expr NE exprexpr : MINUS expr %prec UMINUS\n            | expr LAND expr\n            | expr LOR expr\n            | LNOT exprexpr : id\n            | INTEGER\n            | DOUBLE\n            | BOOLEAN\n            | STRING\n            | LPAREN expr RPARENdatatype : DATATYPEid : ID'
    
_lr_action_items = {'$end':([0,1,2,3,4,7,8,9,21,22,64,73,80,87,],[-1,0,-2,-3,-6,-9,-10,-11,-5,-7,-8,-21,-12,-4,]),'RETURN':([0,3,4,7,8,9,21,22,64,73,80,85,87,],[6,6,-6,-9,-10,-11,-5,-7,-8,-21,-12,6,-4,]),'ID':([0,3,4,6,7,8,9,11,12,13,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,41,45,46,64,72,73,77,80,85,87,],[10,10,-6,39,-9,-10,-11,39,39,39,48,-5,-7,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,48,-45,-8,39,-21,82,-12,10,-4,]),'MINUS':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,71,72,73,78,80,85,87,],[12,12,-6,24,12,-9,-10,-11,-46,12,12,12,-39,-40,-41,-42,-43,-5,-7,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,24,-46,12,12,24,-35,-38,-22,-23,-24,-25,-26,-27,-28,24,24,24,24,24,24,24,24,-8,24,24,-44,-17,12,-21,24,-12,12,-4,]),'LNOT':([0,3,4,6,7,8,9,11,12,13,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,41,64,72,73,80,85,87,],[13,13,-6,13,-9,-10,-11,13,13,13,-5,-7,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-8,13,-21,-12,13,-4,]),'INTEGER':([0,3,4,6,7,8,9,11,12,13,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,41,64,72,73,80,85,87,],[15,15,-6,15,-9,-10,-11,15,15,15,-5,-7,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-8,15,-21,-12,15,-4,]),'DOUBLE':([0,3,4,6,7,8,9,11,12,13,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,41,64,72,73,80,85,87,],[16,16,-6,16,-9,-10,-11,16,16,16,-5,-7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-8,16,-21,-12,16,-4,]),'BOOLEAN':([0,3,4,6,7,8,9,11,12,13,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,41,64,72,73,80,85,87,],[17,17,-6,17,-9,-10,-11,17,17,17,-5,-7,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-8,17,-21,-12,17,-4,]),'STRING':([0,3,4,6,7,8,9,11,12,13,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,41,64,72,73,80,85,87,],[18,18,-6,18,-9,-10,-11,18,18,18,-5,-7,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-8,18,-21,-12,18,-4,]),'LPAREN':([0,3,4,6,7,8,9,10,11,12,13,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,48,64,69,72,73,80,85,87,],[11,11,-6,11,-9,-10,-11,40,11,11,11,-5,-7,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,40,11,11,-46,-8,74,11,-21,-12,11,-4,]),'FUNCTION':([0,3,4,7,8,9,21,22,64,73,80,85,87,],[19,19,-6,-9,-10,-11,-5,-7,-8,-21,-12,19,-4,]),'STRUCTURE':([0,3,4,7,8,9,21,22,64,73,80,85,87,],[20,20,-6,-9,-10,-11,-5,-7,-8,-21,-12,20,-4,]),'RBRACE':([3,4,7,8,9,21,22,64,70,73,75,76,80,82,84,86,87,],[-3,-6,-9,-10,-11,-5,-7,-8,-13,-21,80,-14,-12,-16,-15,87,-4,]),'SEMI':([5,10,14,15,16,17,18,38,39,43,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,67,68,71,],[22,-46,-39,-40,-41,-42,-43,64,-46,-35,-38,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-36,-37,73,-44,-17,]),'PLUS':([5,10,14,15,16,17,18,38,39,42,43,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,67,68,71,78,],[23,-46,-39,-40,-41,-42,-43,23,-46,23,-35,-38,-22,-23,-24,-25,-26,-27,-28,23,23,23,23,23,23,23,23,23,23,-44,-17,23,]),'MUL':([5,10,14,15,16,17,18,38,39,42,43,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,67,68,71,78,],[25,-46,-39,-40,-41,-42,-43,25,-46,25,-35,-38,25,25,-24,-25,-26,-27,-28,25,25,25,25,25,25,25,25,25,25,-44,-17,25,]),'DIVIDE':([5,10,14,15,16,17,18,38,39,42,43,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,67,68,71,78,],[26,-46,-39,-40,-41,-42,-43,26,-46,26,-35,-38,26,26,-24,-25,-26,-27,-28,26,26,26,26,26,26,26,26,26,26,-44,-17,26,]),'INTDIVIDE':([5,10,14,15,16,17,18,38,39,42,43,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,67,68,71,78,],[27,-46,-39,-40,-41,-42,-43,27,-46,27,-35,-38,27,27,-24,-25,-26,-27,-28,27,27,27,27,27,27,27,27,27,27,-44,-17,27,]),'MODULO':([5,10,14,15,16,17,18,38,39,42,43,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,67,68,71,78,],[28,-46,-39,-40,-41,-42,-43,28,-46,28,-35,-38,28,28,-24,-25,-26,-27,-28,28,28,28,28,28,28,28,28,28,28,-44,-17,28,]),'POW':([5,10,14,15,16,17,18,38,39,42,43,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,67,68,71,78,],[29,-46,-39,-40,-41,-42,-43,29,-46,29,-35,-38,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-44,-17,29,]),'LE':([5,10,14,15,16,17,18,38,39,42,43,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,67,68,71,78,],[30,-46,-39,-40,-41,-42,-43,30,-46,30,-35,-38,-22,-23,-24,-25,-26,-27,-28,None,None,None,None,30,30,30,30,30,30,-44,-17,30,]),'GE':([5,10,14,15,16,17,18,38,39,42,43,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,67,68,71,78,],[31,-46,-39,-40,-41,-42,-43,31,-46,31,-35,-38,-22,-23,-24,-25,-26,-27,-28,None,None,None,None,31,31,31,31,31,31,-44,-17,31,]),'LT':([5,10,14,15,16,17,18,38,39,42,43,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,67,68,71,78,],[32,-46,-39,-40,-41,-42,-43,32,-46,32,-35,-38,-22,-23,-24,-25,-26,-27,-28,None,None,None,None,32,32,32,32,32,32,-44,-17,32,]),'GT':([5,10,14,15,16,17,18,38,39,42,43,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,67,68,71,78,],[33,-46,-39,-40,-41,-42,-43,33,-46,33,-35,-38,-22,-23,-24,-25,-26,-27,-28,None,None,None,None,33,33,33,33,33,33,-44,-17,33,]),'EQ':([5,10,14,15,16,17,18,38,39,42,43,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,67,68,71,78,],[34,-46,-39,-40,-41,-42,-43,34,-46,34,-35,-38,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,None,None,34,34,34,34,-44,-17,34,]),'NE':([5,10,14,15,16,17,18,38,39,42,43,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,67,68,71,78,],[35,-46,-39,-40,-41,-42,-43,35,-46,35,-35,-38,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,None,None,35,35,35,35,-44,-17,35,]),'LAND':([5,10,14,15,16,17,18,38,39,42,43,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,67,68,71,78,],[36,-46,-39,-40,-41,-42,-43,36,-46,36,-35,-38,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,None,36,36,36,-44,-17,36,]),'LOR':([5,10,14,15,16,17,18,38,39,42,43,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,67,68,71,78,],[37,-46,-39,-40,-41,-42,-43,37,-46,37,-35,-38,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-36,None,37,37,-44,-17,37,]),'EQUALS':([10,],[41,]),'RPAREN':([14,15,16,17,18,39,40,42,43,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,68,71,74,76,78,79,82,84,],[-39,-40,-41,-42,-43,-46,-18,68,-35,-38,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-36,-37,71,-19,-44,-17,-13,-14,-20,83,-16,-15,]),'COMMA':([14,15,16,17,18,39,40,43,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,68,70,71,74,75,76,78,79,82,84,],[-39,-40,-41,-42,-43,-46,-18,-35,-38,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-36,-37,72,-19,-44,-13,-17,-13,81,-14,-20,81,-16,-15,]),'DATATYPE':([19,70,74,81,],[46,77,77,77,]),'LBRACE':([47,48,83,],[70,-46,85,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'basic_block':([0,85,],[2,86,]),'stmt_list':([0,85,],[3,3,]),'statement':([0,3,85,],[4,21,4,]),'expr':([0,3,6,11,12,13,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,41,72,85,],[5,5,38,42,43,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,67,78,5,]),'assign':([0,3,85,],[7,7,7,]),'func_declaration':([0,3,85,],[8,8,8,]),'struct_declaration':([0,3,85,],[9,9,9,]),'id':([0,3,6,11,12,13,20,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,41,45,72,85,],[14,14,14,14,14,14,47,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,69,14,14,]),'datatype':([19,],[45,]),'args':([40,],[65,]),'func_params':([70,74,],[75,79,]),'func_param':([70,74,81,],[76,76,84,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> <empty>','program',0,'p_program','doh_parser.py',54),
  ('program -> basic_block','program',1,'p_program','doh_parser.py',55),
  ('basic_block -> stmt_list','basic_block',1,'p_basic_block','doh_parser.py',63),
  ('func_declaration -> FUNCTION datatype id LPAREN func_params RPAREN LBRACE basic_block RBRACE','func_declaration',9,'p_func_declaration','doh_parser.py',68),
  ('stmt_list -> stmt_list statement','stmt_list',2,'p_stmt_list','doh_parser.py',73),
  ('stmt_list -> statement','stmt_list',1,'p_stmt_list','doh_parser.py',74),
  ('statement -> expr SEMI','statement',2,'p_stmt','doh_parser.py',82),
  ('statement -> RETURN expr SEMI','statement',3,'p_stmt','doh_parser.py',83),
  ('statement -> assign','statement',1,'p_stmt','doh_parser.py',84),
  ('statement -> func_declaration','statement',1,'p_stmt','doh_parser.py',85),
  ('statement -> struct_declaration','statement',1,'p_stmt','doh_parser.py',86),
  ('struct_declaration -> STRUCTURE id LBRACE func_params RBRACE','struct_declaration',5,'p_struct_declaration','doh_parser.py',96),
  ('func_params -> <empty>','func_params',0,'p_func_params','doh_parser.py',101),
  ('func_params -> func_param','func_params',1,'p_func_params','doh_parser.py',102),
  ('func_params -> func_params COMMA func_param','func_params',3,'p_func_params','doh_parser.py',103),
  ('func_param -> DATATYPE ID','func_param',2,'p_func_param_declaration','doh_parser.py',113),
  ('expr -> ID LPAREN args RPAREN','expr',4,'p_func_call','doh_parser.py',118),
  ('args -> <empty>','args',0,'p_arguments','doh_parser.py',123),
  ('args -> expr','args',1,'p_arguments','doh_parser.py',124),
  ('args -> args COMMA expr','args',3,'p_arguments','doh_parser.py',125),
  ('assign -> ID EQUALS expr SEMI','assign',4,'p_assign','doh_parser.py',135),
  ('expr -> expr PLUS expr','expr',3,'p_math_expressions','doh_parser.py',140),
  ('expr -> expr MINUS expr','expr',3,'p_math_expressions','doh_parser.py',141),
  ('expr -> expr MUL expr','expr',3,'p_math_expressions','doh_parser.py',142),
  ('expr -> expr DIVIDE expr','expr',3,'p_math_expressions','doh_parser.py',143),
  ('expr -> expr INTDIVIDE expr','expr',3,'p_math_expressions','doh_parser.py',144),
  ('expr -> expr MODULO expr','expr',3,'p_math_expressions','doh_parser.py',145),
  ('expr -> expr POW expr','expr',3,'p_math_expressions','doh_parser.py',146),
  ('expr -> expr LE expr','expr',3,'p_conditionals','doh_parser.py',167),
  ('expr -> expr GE expr','expr',3,'p_conditionals','doh_parser.py',168),
  ('expr -> expr LT expr','expr',3,'p_conditionals','doh_parser.py',169),
  ('expr -> expr GT expr','expr',3,'p_conditionals','doh_parser.py',170),
  ('expr -> expr EQ expr','expr',3,'p_conditionals','doh_parser.py',171),
  ('expr -> expr NE expr','expr',3,'p_conditionals','doh_parser.py',172),
  ('expr -> MINUS expr','expr',2,'p_logical_operation','doh_parser.py',188),
  ('expr -> expr LAND expr','expr',3,'p_logical_operation','doh_parser.py',189),
  ('expr -> expr LOR expr','expr',3,'p_logical_operation','doh_parser.py',190),
  ('expr -> LNOT expr','expr',2,'p_logical_operation','doh_parser.py',191),
  ('expr -> id','expr',1,'p_literals','doh_parser.py',203),
  ('expr -> INTEGER','expr',1,'p_literals','doh_parser.py',204),
  ('expr -> DOUBLE','expr',1,'p_literals','doh_parser.py',205),
  ('expr -> BOOLEAN','expr',1,'p_literals','doh_parser.py',206),
  ('expr -> STRING','expr',1,'p_literals','doh_parser.py',207),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_literals','doh_parser.py',208),
  ('datatype -> DATATYPE','datatype',1,'p_datatype','doh_parser.py',216),
  ('id -> ID','id',1,'p_id','doh_parser.py',221),
]
